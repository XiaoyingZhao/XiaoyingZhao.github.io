{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"67ac8106982a23529d29d6d7f466163b5bbe8670","modified":1588498398850},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1588498398873},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1588498398873},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1588498398873},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1588498398874},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1588498398874},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1588498398874},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1588498398874},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1588498398874},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1588498398874},{"_id":"themes/next/README.md","hash":"287c7e6b7a6ddf75d815dda0df8bd228e3f285c5","modified":1588498398875},{"_id":"themes/next/README.cn.md","hash":"263b74f1ac7c0f6f9424b8cced4b0b320ae61efc","modified":1588498398875},{"_id":"themes/next/_config.yml","hash":"5ff37e90e4d6812c8fc40c03fa6e1d903d743470","modified":1588498398875},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1588498398875},{"_id":"themes/next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1588498398875},{"_id":"themes/next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1588498398892},{"_id":"source/_posts/0.1+0.2!==0.3.md","hash":"cc38e6d8901d417825407ee4f4b55de55fff31b5","modified":1588498398851},{"_id":"source/_posts/DNS解析.md","hash":"8c4f92634b2162612e7b2840976a0363d98297fc","modified":1588498398851},{"_id":"source/_posts/JS如何实现在IOS中video全屏播放.md","hash":"14477de6a07113a462e1c61850ea467c1c13d770","modified":1588498398852},{"_id":"source/_posts/Node-js小试牛刀.md","hash":"28f2b84c6ba1ccc6b716dba71871adb3050ff565","modified":1588498398852},{"_id":"source/_posts/OSI7层参考模型和TCP-IP5层参考模型.md","hash":"032b5f7c1a7af1428593dce2d0460523028f330a","modified":1588498398852},{"_id":"source/_posts/leetCode两数之和.md","hash":"36f8851c71f4571b546ebe024b1bb23192dfc965","modified":1588498398865},{"_id":"source/_posts/使用vue指令开发一个实时时间转换指令v-time.md","hash":"56da991a87e36646137068576ee2ff8529424d50","modified":1588498398869},{"_id":"source/_posts/学习日记es6-polyfill.md","hash":"bd9a382bd42fdb3015167bc00eef79cc64b39f81","modified":1588498398870},{"_id":"source/_posts/学习日记css小锦囊-持续更新.md","hash":"7f2168aa870eb33bff78c0f5b1796db5e0af3967","modified":1588498398869},{"_id":"source/_posts/学习日记js小锦囊-持续更新.md","hash":"6c15ed7306bc61c4027f6bbfe4f4d52feb1c4c9f","modified":1588498398870},{"_id":"source/_posts/扒一扒deepLink：应用深度链接.md","hash":"426e1f1d04f5eb2a6e56b1d6905d2fda4ad6026e","modified":1588498398870},{"_id":"source/_posts/曼彻斯特编码与差分曼彻斯特编码.md","hash":"4884cac6a2181690fa37cb4218c85116f2337c44","modified":1588498398870},{"_id":"source/_posts/神器甘特图.md","hash":"53b6f66871a1a21ff8853ae937c67647689057ee","modified":1588498398870},{"_id":"source/_posts/闭包与模块.md","hash":"e103920ddcee26cfd04caf0a4dbbdd6374d62688","modified":1588507793740},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1588498398873},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1588498398873},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1588498398874},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1588498398874},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1588498398893},{"_id":"themes/next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1588498398893},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1588498398879},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1588498398891},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1588498398891},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1588498398892},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1588498398892},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1588498398892},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1588498398892},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1588498398892},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1588498398876},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1588498398876},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1588498398876},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1588498398876},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1588498398876},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1588498398877},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1588498398876},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1588498398877},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1588498398877},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1588498398877},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1588498398877},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1588498398877},{"_id":"themes/next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1588498398878},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1588498398878},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1588498398878},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1588498398878},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1588498398950},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1588498398950},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1588498398951},{"_id":"source/_posts/DNS解析/eg1.png","hash":"f944b6b99e3c4e94e6d62473efc92878fd9a4d55","modified":1588498398851},{"_id":"source/_posts/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR.md","hash":"751e5233d191eca4d9c58f18a35b61099c7afef4","modified":1588498398865},{"_id":"source/_posts/nuxt/三、将Vue项目改造成Nuxt项目-使用第三方插件.md","hash":"b2d40a73113265d25577cf5c4fa607ad57e5e86b","modified":1588498398868},{"_id":"source/_posts/nuxt/二、将Vue项目改造成Nuxt项目-关于页面路由.md","hash":"33f78e929e917d4fb2f53d6b85d35864eb8934bb","modified":1588498398868},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588498398913},{"_id":"source/_posts/DNS解析/eg2.png","hash":"d774cbde4e07cb8a43eb9f295571d8c2b325ec21","modified":1588498398852},{"_id":"source/_posts/神器甘特图/timer.jpg","hash":"8195b5ff9e24373ad374178f053f012fb7f28d95","modified":1588498398871},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1588498398893},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1588498398893},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1588498398894},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1588498398894},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1588498398894},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1588498398894},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1588498398894},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1588498398894},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1588498398895},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1588498398878},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1588498398879},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1588498398884},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1588498398884},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1588498398885},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1588498398879},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1588498398879},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1588498398879},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1588498398879},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1588498398880},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1588498398880},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1588498398880},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1588498398880},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1588498398880},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1588498398881},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1588498398881},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1588498398881},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1588498398882},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1588498398889},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1588498398889},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1588498398889},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1588498398889},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1588498398890},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1588498398890},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1588498398890},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1588498398913},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1588498398914},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1588498398914},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1588498398914},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1588498398914},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1588498398914},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1588498398915},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1588498398915},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1588498398915},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1588498398916},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1588498398916},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1588498398915},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1588498398916},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1588498398916},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1588498398916},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1588498398917},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1588498398917},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1588498398917},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1588498398916},{"_id":"source/_posts/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR/nuxt-schema.svg","hash":"37b82d0e67b28ce01c6d46b34dbf58d461f34279","modified":1588498398867},{"_id":"source/_posts/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR/zhouqi.webp","hash":"1b56deae6fd17cf8da57beecc65b95484f9a5dc0","modified":1588498398868},{"_id":"source/_posts/nuxt/三、将Vue项目改造成Nuxt项目-使用第三方插件/img1.jpg","hash":"2d3ce99e3650cad4f0102f0467138fcbe7918203","modified":1588498398868},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588498398885},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588498398885},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588498398908},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588498398908},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588498398909},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588498398913},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1588498398913},{"_id":"source/_posts/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR/img1.jpg","hash":"ac62d2719c909bf82801a924adaffc9208e9afc9","modified":1588498398866},{"_id":"source/_posts/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR/img2.jpg","hash":"867cca8931242a9671ab1cdb546164d7addd7928","modified":1588498398866},{"_id":"source/_posts/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR/img3.jpg","hash":"abe6a1d995c83e537ac7f21ea8a3fd124b2e0e4d","modified":1588498398867},{"_id":"source/_posts/nuxt/二、将Vue项目改造成Nuxt项目-关于页面路由/img1.jpg","hash":"c67755f2fdb567b0394201fd5749e16afe4bf1e1","modified":1588498398869},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1588498398884},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1588498398884},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1588498398885},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1588498398881},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1588498398881},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1588498398882},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1588498398882},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1588498398883},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1588498398883},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1588498398883},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1588498398884},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1588498398883},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1588498398885},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1588498398885},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1588498398886},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1588498398886},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1588498398886},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1588498398886},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1588498398885},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1588498398886},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1588498398887},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1588498398887},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1588498398887},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1588498398887},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1588498398886},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1588498398887},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1588498398888},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1588498398888},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1588498398888},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1588498398888},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1588498398888},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1588498398888},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1588498398889},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1588498398889},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1588498398891},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1588498398891},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1588498398891},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1588498398891},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1588498398908},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1588498398908},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1588498398908},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1588498398909},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1588498398912},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1588498398913},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1588498398913},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1588498398913},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1588498398925},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1588498398923},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1588498398925},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1588498398925},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1588498398925},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1588498398939},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1588498398942},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1588498398942},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1588498398942},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1588498398929},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1588498398929},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1588498398929},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1588498398930},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1588498398930},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1588498398940},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1588498398941},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1588498398941},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1588498398941},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1588498398940},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1588498398941},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1588498398928},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1588498398928},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1588498398928},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1588498398942},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1588498398928},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1588498398942},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1588498398942},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1588498398943},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1588498398943},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1588498398943},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1588498398943},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1588498398943},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1588498398943},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1588498398943},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1588498398944},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1588498398944},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1588498398944},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1588498398944},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1588498398944},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1588498398945},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1588498398945},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1588498398948},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1588498398948},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1588498398949},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1588498398950},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1588498398950},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1588498398918},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1588498398918},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1588498398918},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1588498398919},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1588498398919},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1588498398919},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1588498398920},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1588498398919},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1588498398920},{"_id":"themes/next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1588498398920},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1588498398918},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1588498398939},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1588498398890},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1588498398895},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1588498398890},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1588498398895},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1588498398895},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1588498398895},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1588498398896},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1588498398898},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1588498398903},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1588498398907},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1588498398907},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1588498398907},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1588498398907},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1588498398908},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1588498398908},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1588498398908},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1588498398909},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1588498398911},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1588498398911},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1588498398911},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1588498398911},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1588498398911},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1588498398909},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1588498398910},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1588498398909},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1588498398910},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1588498398910},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1588498398910},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1588498398910},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1588498398912},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1588498398912},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1588498398912},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1588498398912},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1588498398912},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1588498398912},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1588498398921},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1588498398922},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1588498398926},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1588498398922},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1588498398926},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1588498398926},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1588498398926},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1588498398926},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1588498398927},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1588498398928},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1588498398928},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1588498398926},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1588498398930},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1588498398930},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1588498398931},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1588498398929},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1588498398929},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1588498398947},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1588498398947},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1588498398919},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1588498398922},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1588498398938},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1588498398938},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1588498398949},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1588498398896},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1588498398896},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1588498398896},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1588498398896},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1588498398897},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1588498398897},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1588498398897},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1588498398896},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1588498398897},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1588498398897},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1588498398898},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1588498398898},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1588498398898},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1588498398898},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1588498398899},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1588498398899},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1588498398899},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1588498398899},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1588498398900},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1588498398900},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1588498398900},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1588498398899},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1588498398900},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1588498398900},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1588498398900},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1588498398901},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1588498398901},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1588498398901},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1588498398901},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1588498398901},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1588498398901},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1588498398902},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1588498398902},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1588498398902},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1588498398902},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1588498398902},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1588498398902},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1588498398902},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1588498398905},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1588498398905},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1588498398905},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1588498398905},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1588498398905},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1588498398903},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1588498398906},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1588498398906},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1588498398906},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1588498398907},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1588498398906},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1588498398903},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1588498398903},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1588498398904},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1588498398903},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1588498398904},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1588498398904},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1588498398904},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1588498398904},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1588498398904},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1588498398910},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1588498398911},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1588498398910},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1588498398920},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1588498398920},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1588498398921},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1588498398921},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1588498398921},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1588498398927},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1588498398927},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1588498398927},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1588498398927},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1588498398932},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1588498398933},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1588498398927},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1588498398937},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1588498398927},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1588498398925},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1588498398947},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1588498398936},{"_id":"source/_posts/OSI7层参考模型和TCP-IP5层参考模型/img.png","hash":"379427b66e08d6ec33e8c4da40a0feb6e1ceeb38","modified":1588498398864},{"_id":"public/404.html","hash":"1079aa41f436415311fc1688692deb0c5ee76f14","modified":1588507847908},{"_id":"public/2019/07/18/0.1+0.2!==0.3/index.html","hash":"75780d90bb550a767de121361d50af2aa4c8618a","modified":1588507847909},{"_id":"public/2018/06/24/神器甘特图/index.html","hash":"10c6328dba4471aad84ddb4d37a57ad6204f274f","modified":1588507847909},{"_id":"public/2018/02/16/学习日记es6-polyfill/index.html","hash":"9156b834d09469dee68006b31c8d1238348a64e9","modified":1588507847909},{"_id":"public/2018/02/16/Node-js小试牛刀/index.html","hash":"ddea1f75980557fcae664f07e92e7002a61932fa","modified":1588507847909},{"_id":"public/archives/page/2/index.html","hash":"81dc5314739bd5301edd2540d198cf6887aeaed6","modified":1588507847909},{"_id":"public/archives/2017/index.html","hash":"0fa6676c5442eeabbad2cb2017a0706345ab380f","modified":1588507847909},{"_id":"public/archives/2017/02/index.html","hash":"a871aaef761c49b73b3c58ae81491dc2718c7241","modified":1588507847909},{"_id":"public/archives/2018/04/index.html","hash":"84b5eb5e2aaf433cc6a21bff0bfbc45d058e2d6c","modified":1588507847909},{"_id":"public/archives/2018/02/index.html","hash":"8e0511f92e1eaae0ad39f97252696ee9cd884501","modified":1588507847909},{"_id":"public/archives/2018/index.html","hash":"985255b673f8ea7a225e22d84eb390b962314a20","modified":1588507847909},{"_id":"public/archives/2018/05/index.html","hash":"e2e4844a5f22cf728828163adc269522cd32d9dd","modified":1588507847910},{"_id":"public/archives/2018/06/index.html","hash":"a0ebebbdc1a596cf17ae411b728af3fcfb86aea0","modified":1588507847910},{"_id":"public/archives/2018/12/index.html","hash":"289be2565cd9280f3043224c22cc833612c6977b","modified":1588507847910},{"_id":"public/archives/2019/index.html","hash":"80f0f3da03eca4101fa1190b212afcc3e2591ae1","modified":1588507847910},{"_id":"public/archives/2019/01/index.html","hash":"f65d8cda03d2c0e56ba748b5a83a74fcb10267a5","modified":1588507847910},{"_id":"public/archives/2019/04/index.html","hash":"b055ca94cb63baa0acb428415af035d706f4041e","modified":1588507847910},{"_id":"public/archives/2019/07/index.html","hash":"10081fb653062fac9f198c71a87627702b0939de","modified":1588507847910},{"_id":"public/archives/2020/index.html","hash":"31388fa2cc5fcb567c9c8d549a3ac8984af47480","modified":1588507847910},{"_id":"public/archives/2020/01/index.html","hash":"ffc9e6d7916a58bc43f756df72e5c3131e7f2689","modified":1588507847910},{"_id":"public/archives/2020/03/index.html","hash":"480663e2237ffd47af5a462b792c9365670835f4","modified":1588507847910},{"_id":"public/archives/2020/04/index.html","hash":"9cd944871c79a0547614417e58fcee6d7fb9eb0f","modified":1588507847910},{"_id":"public/categories/网络原理/index.html","hash":"f62600c53c00fe0a4029430ade2ac9a4a3f93b65","modified":1588507847910},{"_id":"public/categories/js/index.html","hash":"f57214379f38d5a94f93d6181e08f0a9898ef0a1","modified":1588507847910},{"_id":"public/categories/es6/index.html","hash":"4faa7ccc74ebf560bc00572290d8d21e87287481","modified":1588507847911},{"_id":"public/categories/css/index.html","hash":"caa4391d66c0a2328225d8378755135a4757540a","modified":1588507847911},{"_id":"public/categories/工具/index.html","hash":"b808870b50e4912b3883de03c3a222f2b337b7ff","modified":1588507847911},{"_id":"public/categories/js/vue/index.html","hash":"53fe601723db0b94d1fa914150e324cc3a62e506","modified":1588507847911},{"_id":"public/categories/es6/学习日记/index.html","hash":"47027d33c9f36f94dfab66a8f701b754fb0b8ba6","modified":1588507847911},{"_id":"public/categories/网络原理/学习日记/index.html","hash":"5473e09f4ecb74ade629a97181d58b1de10e0511","modified":1588507847911},{"_id":"public/categories/css/css3/index.html","hash":"28e42f75057cb7c5a9a494c790161ce033549076","modified":1588507847911},{"_id":"public/categories/js/学习日记/index.html","hash":"78552cd8d0aa6118a8c15f679dec1b30d8f55a00","modified":1588507847911},{"_id":"public/categories/js/ios/index.html","hash":"bb1d952ef876e61baa4dd42685f914f64f21f45f","modified":1588507847911},{"_id":"public/categories/css/css3/学习日记/index.html","hash":"35727bf8709eceafe2f9cfdb05035a5603ae3a49","modified":1588507847911},{"_id":"public/categories/将Vue项目改造成Nuxt项目/index.html","hash":"c74937eca858332d24dff229c6e8df8955baf3fa","modified":1588507847911},{"_id":"public/tags/javascript/index.html","hash":"6112899e7cadf3babf0ddbb56db1f5adb0d09717","modified":1588507847911},{"_id":"public/tags/js/index.html","hash":"62c98eb5a60c09a0e7b9fd299ddc1d4d8bb3fe9c","modified":1588507847912},{"_id":"public/tags/ios/index.html","hash":"086fc7c405535fff43cee7ba4e402e030dca4d3a","modified":1588507847912},{"_id":"public/tags/vue/index.html","hash":"77ecb42e3879722ffd8d671866cf4bf872c1ecd5","modified":1588507847912},{"_id":"public/tags/es6/index.html","hash":"c714dc85b11f3c2c15f0dce0500e4237144bd3de","modified":1588507847912},{"_id":"public/tags/css3/index.html","hash":"3d584de245b7fc04c7c27c81bd927d9f1b7fbbae","modified":1588507847912},{"_id":"public/tags/甘特图-Gantt-chart/index.html","hash":"5b0dde771ff8879c082016a40a39574fdbf918d1","modified":1588507847912},{"_id":"public/tags/nuxt/index.html","hash":"4360ec6e2c21a84eb13913ffbf2dd5e1b43cd9c3","modified":1588507847912},{"_id":"public/2020/04/16/nuxt/三、将Vue项目改造成Nuxt项目-使用第三方插件/index.html","hash":"e51623e5fcdf6c60f3acccfbe6a3e571cee36a5e","modified":1588507847912},{"_id":"public/2020/03/25/nuxt/二、将Vue项目改造成Nuxt项目-关于页面路由/index.html","hash":"b9926da2d40b04d352942681db5e899617753089","modified":1588507847912},{"_id":"public/2020/01/06/DNS解析/index.html","hash":"ab3d6f719d72e1945ffe9e0ade6c902466479010","modified":1588507847912},{"_id":"public/2020/01/06/OSI7层参考模型和TCP-IP5层参考模型/index.html","hash":"a13a9b925d4632e4c2beed15e4aeafb4c6cf8ea9","modified":1588507847912},{"_id":"public/2019/04/09/leetCode两数之和/index.html","hash":"3cad5b12c66f66e7b7fea16344ac724dcca5bce9","modified":1588507847912},{"_id":"public/2019/01/18/曼彻斯特编码与差分曼彻斯特编码/index.html","hash":"4ea978309014d9b5cf237cf146f0c4fc3d3fc24f","modified":1588507847912},{"_id":"public/2020/03/25/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR/index.html","hash":"a464f73171df9c2bbe2a5331abd61fd7b7fbe83a","modified":1588507847912},{"_id":"public/2018/12/24/使用vue指令开发一个实时时间转换指令v-time/index.html","hash":"eafbe8de015838749cbe9f8cc7533c8c8cd756f4","modified":1588507847913},{"_id":"public/2018/12/21/JS如何实现在IOS中video全屏播放/index.html","hash":"2c1d53813b020b06d8ba6748897d07ddb5399117","modified":1588507847913},{"_id":"public/2018/05/02/学习日记js小锦囊-持续更新/index.html","hash":"10f9624bc6400efaddf31c361d567cfd93927029","modified":1588507847913},{"_id":"public/2018/04/01/学习日记css小锦囊-持续更新/index.html","hash":"99176442827f46a735b903252506c1d154e29a2d","modified":1588507847913},{"_id":"public/2017/02/27/扒一扒deepLink：应用深度链接/index.html","hash":"96e6fefd0e14e6604700eced2ad1b2694a57dc62","modified":1588507847913},{"_id":"public/archives/index.html","hash":"f6c9fc1cadb173f3eba4a2a8f7f2db2fed44f93f","modified":1588507847913},{"_id":"public/index.html","hash":"48c0466d3b9356ff20ecf06f18e7cf146d258cf6","modified":1588507847913},{"_id":"public/page/2/index.html","hash":"f6a93275c02dd67849e837edca45b6377518b7a4","modified":1588507847913},{"_id":"public/archives/2020/05/index.html","hash":"995cacc67b7d1ef3bd4bf9f073dd84e047f94444","modified":1588507847922},{"_id":"public/2020/05/03/闭包与模块/index.html","hash":"9765f3660b9c4eaefbef9920464fec69cc7268a2","modified":1588507847922}],"Category":[{"name":"网络原理","_id":"ck9qxci8m000g0nurv8c3sesc"},{"name":"js","_id":"ck9qxci8o000i0nurvp3iayxw"},{"name":"es6","_id":"ck9qxci8r000n0nurc14gxjnx"},{"name":"css","_id":"ck9qxci8r000p0nur6c5uir8e"},{"name":"工具","_id":"ck9qxci8u000x0nurvz3qpf27"},{"name":"学习日记","parent":"ck9qxci8m000g0nurv8c3sesc","_id":"ck9qxcia500100nurmfsbeyue"},{"name":"vue","parent":"ck9qxci8o000i0nurvp3iayxw","_id":"ck9qxcia9001c0nur5osbn7rh"},{"name":"学习日记","parent":"ck9qxci8r000n0nurc14gxjnx","_id":"ck9qxciaa001f0nurx96mhd0g"},{"name":"css3","parent":"ck9qxci8r000p0nur6c5uir8e","_id":"ck9qxciaa001i0nurwzlgt3jr"},{"name":"学习日记","parent":"ck9qxci8o000i0nurvp3iayxw","_id":"ck9qxciab001j0nurmy5w4weo"},{"name":"ios","parent":"ck9qxci8o000i0nurvp3iayxw","_id":"ck9qxciab001k0nurj3twzdyx"},{"name":"学习日记","parent":"ck9qxciaa001i0nurwzlgt3jr","_id":"ck9qxcic4001m0nur0jywfsv1"},{"name":"将Vue项目改造成Nuxt项目","_id":"ck9qxcic5001r0nur7mdzpafp"}],"Data":[],"Page":[{"_content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>404</title>\n</head>\n<body>\n\t404\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>404</title>\n</head>\n<body>\n\t404\n</body>\n</html>","date":"2020-05-03T09:33:18.850Z","updated":"2020-05-03T09:33:18.850Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"ck9qxci2900000nuresbdpptb","content":"<!DOCTYPE html>\n<html lang=\"en\">\n<head><meta name=\"generator\" content=\"Hexo 3.9.0\">\n\t<meta charset=\"UTF-8\">\n\t<title>404</title>\n</head>\n<body>\n\t404\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE html>\n<html lang=\"en\">\n<head><meta name=\"generator\" content=\"Hexo 3.9.0\">\n\t<meta charset=\"UTF-8\">\n\t<title>404</title>\n</head>\n<body>\n\t404\n</body>\n</html>"}],"Post":[{"title":"0.1+0.2!==0.3","date":"2019-07-18T03:11:28.000Z","_content":"```javascript\n\tconsole.log(0.1 + 0.2 == 0.3) // false\n\tconsole.log(0.1 + 0.2) // 0.30000000000000004\n```\n浮点数值的最高精度是17位小数，但是在进行算数计算式其精度远远不如整数。浮点数值计算会产生舍入误差，有一点需要明确，这是基于IEEE754数值的浮点计算的通病。\n所以实际上，这里错的不是结论，而是比较的方法，正确的比较方法是使用Javascript提供的最小精度值\n```javascript\n\tconsole.log(Math.abs(0.1 + 0.2 -0.3) < Number.EPSILON) // true\n```\n","source":"_posts/0.1+0.2!==0.3.md","raw":"---\ntitle: 0.1+0.2!==0.3\ndate: 2019-07-18 11:11:28\ntags: \n\t- javascript\n---\n```javascript\n\tconsole.log(0.1 + 0.2 == 0.3) // false\n\tconsole.log(0.1 + 0.2) // 0.30000000000000004\n```\n浮点数值的最高精度是17位小数，但是在进行算数计算式其精度远远不如整数。浮点数值计算会产生舍入误差，有一点需要明确，这是基于IEEE754数值的浮点计算的通病。\n所以实际上，这里错的不是结论，而是比较的方法，正确的比较方法是使用Javascript提供的最小精度值\n```javascript\n\tconsole.log(Math.abs(0.1 + 0.2 -0.3) < Number.EPSILON) // true\n```\n","slug":"0.1+0.2!==0.3","published":1,"updated":"2020-05-03T09:33:18.851Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9qxci4200010nurbs9zxoow","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"number\">0.1</span> + <span class=\"number\">0.2</span> == <span class=\"number\">0.3</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"number\">0.1</span> + <span class=\"number\">0.2</span>) <span class=\"comment\">// 0.30000000000000004</span></span><br></pre></td></tr></table></figure>\n<p>浮点数值的最高精度是17位小数，但是在进行算数计算式其精度远远不如整数。浮点数值计算会产生舍入误差，有一点需要明确，这是基于IEEE754数值的浮点计算的通病。<br>所以实际上，这里错的不是结论，而是比较的方法，正确的比较方法是使用Javascript提供的最小精度值<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.abs(<span class=\"number\">0.1</span> + <span class=\"number\">0.2</span> <span class=\"number\">-0.3</span>) &lt; <span class=\"built_in\">Number</span>.EPSILON) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"number\">0.1</span> + <span class=\"number\">0.2</span> == <span class=\"number\">0.3</span>) <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"number\">0.1</span> + <span class=\"number\">0.2</span>) <span class=\"comment\">// 0.30000000000000004</span></span><br></pre></td></tr></table></figure>\n<p>浮点数值的最高精度是17位小数，但是在进行算数计算式其精度远远不如整数。浮点数值计算会产生舍入误差，有一点需要明确，这是基于IEEE754数值的浮点计算的通病。<br>所以实际上，这里错的不是结论，而是比较的方法，正确的比较方法是使用Javascript提供的最小精度值<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Math</span>.abs(<span class=\"number\">0.1</span> + <span class=\"number\">0.2</span> <span class=\"number\">-0.3</span>) &lt; <span class=\"built_in\">Number</span>.EPSILON) <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure></p>\n"},{"title":"DNS解析","date":"2020-01-06T08:45:34.000Z","_content":"**DNS**（Domain Name System）域名系统\n### 一、域名系统\n#### 1、域名系统概述\n域名系统DNS(Domain Name System)是因特网使用的命名系统，用来把便于人们使用的机器名字转换成为IP地址。域名系统其实就是名字系统。\n\n我们都知道，IP地址是由32位的二进制数字组成的。用户与因特网上某台主机通信时，显然不愿意使用很难记忆的长达32位的二进制主机地址。即使是点分十进制IP地址也并不太容易记忆。相反，大家愿意使用比较容易记忆的主机名字。但是，机器在处理IP数据报时，并不是使用域名而是使用IP地址。这是因为IP地址长度固定，而域名的长度不固定，机器处理起来比较困难。\n\n域名到IP地址的解析是由分布在因特网上的许多域名服务器程序共同完成的。域名服务器程序在专设的结点上运行，而人们也常把运行域名服务器程序的机器称为域名服务器。\n\n#### 2、因特网的域名结构\n由于因特网的用户数量较多，所以因特网在命名时采用的是层次树状结构的命名方法。任何一个连接在因特网上的主机或路由器，都有一个唯一的层次结构的名字，即域名(domain name)。这里，“域”(domain)是名字空间中一个可被管理的划分。\n\n如下例子所示：\n![image](DNS解析/eg1.png)\n\n这是中央电视台用于收发电子邮件的计算机的域名，它由三个标号组成，其中标号com是顶级域名，标号cctv是二级域名，标号mail是三级域名。\n\nDNS既不规定一个域名需要包含多少个下级域名，也不规定每一级域名代表什么意思。各级域名由其上一级的域名管理机构管理，而最高的顶级域名则由ICANN进行管理。用这种方法可使每一个域名在整个互联网范围内是唯一的，并且也容易设计出一种查找域名的机制。\n\n域名只是逻辑概念，并不代表计算机所在的物理地点。据2006年12月统计，现在顶级域名TLD(Top Level Domain)已有265个，分为三大类：\n(1)国家顶级域名nTLD：采用ISO3166的规定。如：cn代表中国，us代表美国，uk代表英国，等等。国家域名又常记为ccTLD(cc表示国家代码contry-code)。\n(2)通用顶级域名gTLD：最常见的通用顶级域名有7个，即：com(公司企业)，net(网络服务机构)，org(非营利组织)，int(国际组织)，gov(美国的政府部门)，mil(美国的军事部门)。\n(3)基础结构域名(infrastructure domain)：这种顶级域名只有一个，即arpa，用于反向域名解析，因此称为反向域名。\n\n![image](DNS解析/eg2.png)\n\n\n","source":"_posts/DNS解析.md","raw":"---\ntitle: DNS解析\ndate: 2020-01-06 16:45:34\ntags:\ncategories: \n\t- 网络原理\n\t- 学习日记\n---\n**DNS**（Domain Name System）域名系统\n### 一、域名系统\n#### 1、域名系统概述\n域名系统DNS(Domain Name System)是因特网使用的命名系统，用来把便于人们使用的机器名字转换成为IP地址。域名系统其实就是名字系统。\n\n我们都知道，IP地址是由32位的二进制数字组成的。用户与因特网上某台主机通信时，显然不愿意使用很难记忆的长达32位的二进制主机地址。即使是点分十进制IP地址也并不太容易记忆。相反，大家愿意使用比较容易记忆的主机名字。但是，机器在处理IP数据报时，并不是使用域名而是使用IP地址。这是因为IP地址长度固定，而域名的长度不固定，机器处理起来比较困难。\n\n域名到IP地址的解析是由分布在因特网上的许多域名服务器程序共同完成的。域名服务器程序在专设的结点上运行，而人们也常把运行域名服务器程序的机器称为域名服务器。\n\n#### 2、因特网的域名结构\n由于因特网的用户数量较多，所以因特网在命名时采用的是层次树状结构的命名方法。任何一个连接在因特网上的主机或路由器，都有一个唯一的层次结构的名字，即域名(domain name)。这里，“域”(domain)是名字空间中一个可被管理的划分。\n\n如下例子所示：\n![image](DNS解析/eg1.png)\n\n这是中央电视台用于收发电子邮件的计算机的域名，它由三个标号组成，其中标号com是顶级域名，标号cctv是二级域名，标号mail是三级域名。\n\nDNS既不规定一个域名需要包含多少个下级域名，也不规定每一级域名代表什么意思。各级域名由其上一级的域名管理机构管理，而最高的顶级域名则由ICANN进行管理。用这种方法可使每一个域名在整个互联网范围内是唯一的，并且也容易设计出一种查找域名的机制。\n\n域名只是逻辑概念，并不代表计算机所在的物理地点。据2006年12月统计，现在顶级域名TLD(Top Level Domain)已有265个，分为三大类：\n(1)国家顶级域名nTLD：采用ISO3166的规定。如：cn代表中国，us代表美国，uk代表英国，等等。国家域名又常记为ccTLD(cc表示国家代码contry-code)。\n(2)通用顶级域名gTLD：最常见的通用顶级域名有7个，即：com(公司企业)，net(网络服务机构)，org(非营利组织)，int(国际组织)，gov(美国的政府部门)，mil(美国的军事部门)。\n(3)基础结构域名(infrastructure domain)：这种顶级域名只有一个，即arpa，用于反向域名解析，因此称为反向域名。\n\n![image](DNS解析/eg2.png)\n\n\n","slug":"DNS解析","published":1,"updated":"2020-05-03T09:33:18.851Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9qxci4500020nurnf4kjb0h","content":"<p><strong>DNS</strong>（Domain Name System）域名系统</p>\n<h3 id=\"一、域名系统\"><a href=\"#一、域名系统\" class=\"headerlink\" title=\"一、域名系统\"></a>一、域名系统</h3><h4 id=\"1、域名系统概述\"><a href=\"#1、域名系统概述\" class=\"headerlink\" title=\"1、域名系统概述\"></a>1、域名系统概述</h4><p>域名系统DNS(Domain Name System)是因特网使用的命名系统，用来把便于人们使用的机器名字转换成为IP地址。域名系统其实就是名字系统。</p>\n<p>我们都知道，IP地址是由32位的二进制数字组成的。用户与因特网上某台主机通信时，显然不愿意使用很难记忆的长达32位的二进制主机地址。即使是点分十进制IP地址也并不太容易记忆。相反，大家愿意使用比较容易记忆的主机名字。但是，机器在处理IP数据报时，并不是使用域名而是使用IP地址。这是因为IP地址长度固定，而域名的长度不固定，机器处理起来比较困难。</p>\n<p>域名到IP地址的解析是由分布在因特网上的许多域名服务器程序共同完成的。域名服务器程序在专设的结点上运行，而人们也常把运行域名服务器程序的机器称为域名服务器。</p>\n<h4 id=\"2、因特网的域名结构\"><a href=\"#2、因特网的域名结构\" class=\"headerlink\" title=\"2、因特网的域名结构\"></a>2、因特网的域名结构</h4><p>由于因特网的用户数量较多，所以因特网在命名时采用的是层次树状结构的命名方法。任何一个连接在因特网上的主机或路由器，都有一个唯一的层次结构的名字，即域名(domain name)。这里，“域”(domain)是名字空间中一个可被管理的划分。</p>\n<p>如下例子所示：<br><img src=\"/2020/01/06/DNS解析/eg1.png\" alt=\"image\"></p>\n<p>这是中央电视台用于收发电子邮件的计算机的域名，它由三个标号组成，其中标号com是顶级域名，标号cctv是二级域名，标号mail是三级域名。</p>\n<p>DNS既不规定一个域名需要包含多少个下级域名，也不规定每一级域名代表什么意思。各级域名由其上一级的域名管理机构管理，而最高的顶级域名则由ICANN进行管理。用这种方法可使每一个域名在整个互联网范围内是唯一的，并且也容易设计出一种查找域名的机制。</p>\n<p>域名只是逻辑概念，并不代表计算机所在的物理地点。据2006年12月统计，现在顶级域名TLD(Top Level Domain)已有265个，分为三大类：<br>(1)国家顶级域名nTLD：采用ISO3166的规定。如：cn代表中国，us代表美国，uk代表英国，等等。国家域名又常记为ccTLD(cc表示国家代码contry-code)。<br>(2)通用顶级域名gTLD：最常见的通用顶级域名有7个，即：com(公司企业)，net(网络服务机构)，org(非营利组织)，int(国际组织)，gov(美国的政府部门)，mil(美国的军事部门)。<br>(3)基础结构域名(infrastructure domain)：这种顶级域名只有一个，即arpa，用于反向域名解析，因此称为反向域名。</p>\n<p><img src=\"/2020/01/06/DNS解析/eg2.png\" alt=\"image\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>DNS</strong>（Domain Name System）域名系统</p>\n<h3 id=\"一、域名系统\"><a href=\"#一、域名系统\" class=\"headerlink\" title=\"一、域名系统\"></a>一、域名系统</h3><h4 id=\"1、域名系统概述\"><a href=\"#1、域名系统概述\" class=\"headerlink\" title=\"1、域名系统概述\"></a>1、域名系统概述</h4><p>域名系统DNS(Domain Name System)是因特网使用的命名系统，用来把便于人们使用的机器名字转换成为IP地址。域名系统其实就是名字系统。</p>\n<p>我们都知道，IP地址是由32位的二进制数字组成的。用户与因特网上某台主机通信时，显然不愿意使用很难记忆的长达32位的二进制主机地址。即使是点分十进制IP地址也并不太容易记忆。相反，大家愿意使用比较容易记忆的主机名字。但是，机器在处理IP数据报时，并不是使用域名而是使用IP地址。这是因为IP地址长度固定，而域名的长度不固定，机器处理起来比较困难。</p>\n<p>域名到IP地址的解析是由分布在因特网上的许多域名服务器程序共同完成的。域名服务器程序在专设的结点上运行，而人们也常把运行域名服务器程序的机器称为域名服务器。</p>\n<h4 id=\"2、因特网的域名结构\"><a href=\"#2、因特网的域名结构\" class=\"headerlink\" title=\"2、因特网的域名结构\"></a>2、因特网的域名结构</h4><p>由于因特网的用户数量较多，所以因特网在命名时采用的是层次树状结构的命名方法。任何一个连接在因特网上的主机或路由器，都有一个唯一的层次结构的名字，即域名(domain name)。这里，“域”(domain)是名字空间中一个可被管理的划分。</p>\n<p>如下例子所示：<br><img src=\"/2020/01/06/DNS解析/eg1.png\" alt=\"image\"></p>\n<p>这是中央电视台用于收发电子邮件的计算机的域名，它由三个标号组成，其中标号com是顶级域名，标号cctv是二级域名，标号mail是三级域名。</p>\n<p>DNS既不规定一个域名需要包含多少个下级域名，也不规定每一级域名代表什么意思。各级域名由其上一级的域名管理机构管理，而最高的顶级域名则由ICANN进行管理。用这种方法可使每一个域名在整个互联网范围内是唯一的，并且也容易设计出一种查找域名的机制。</p>\n<p>域名只是逻辑概念，并不代表计算机所在的物理地点。据2006年12月统计，现在顶级域名TLD(Top Level Domain)已有265个，分为三大类：<br>(1)国家顶级域名nTLD：采用ISO3166的规定。如：cn代表中国，us代表美国，uk代表英国，等等。国家域名又常记为ccTLD(cc表示国家代码contry-code)。<br>(2)通用顶级域名gTLD：最常见的通用顶级域名有7个，即：com(公司企业)，net(网络服务机构)，org(非营利组织)，int(国际组织)，gov(美国的政府部门)，mil(美国的军事部门)。<br>(3)基础结构域名(infrastructure domain)：这种顶级域名只有一个，即arpa，用于反向域名解析，因此称为反向域名。</p>\n<p><img src=\"/2020/01/06/DNS解析/eg2.png\" alt=\"image\"></p>\n"},{"title":"JS如何实现在IOS中video全屏播放","date":"2018-12-21T05:08:37.000Z","_content":"现在开发人员不容易呀，产品、运营天天各种需求，哎这个顶导要在页面往上滑的时候缓缓的隐藏，下拉的时候在缓缓的显示~ 哎这个图片要自适应的呀，就是那种不够的话补黑边的呀~ 哎视频的进度条要自定义的呀，原生的那个多丑呀~ 哎。。。\n\n唉，怎么办呢，没有办法呀，使劲磕呗，那今天的话题我们就来说说IOS中video全屏的问题，有需要的朋友可以参考下\n\n\n### video的几个重要的属性\n`controls`： 显示播放控件；controls属性规定浏览器应该为视频提供播放控件,换句话说，只有写了这个属性才会有播放控件，不写的话默认是没有的，所有如果要自定义播放控件就不需要写controls属性\n写法：\n```html\n<video controls src='1.mp4'></video>      \n```\n\n`autoplay`：自动播放；指定后，视频会马上自动开始播放，不会停下来等着数据载入结束\n写法：\n```html\n<video autoplay src='1.mp4'></video>\n```\n\n`playsinline`：取消全屏；只需在video上添加该属性，便可使视频播放时局域播放，不脱离文档流，但是这个属性需要APP支持，在APP开发中设置UIwebview 的allowsInlineMediaPlayback = YES   webview.allowsInlineMediaPlayback = YES才能生效\n写法：\n```html\n<video webkit-playsinline=\"true\" playsinline=\"playsinline\" src='1.mp4'></video>\n```\n\n### js自定义video全屏\n众所周知，IOS是不支持全屏API的，于是requesrFullScreen事件对于video全屏是不起作用的，但是IOS9+对于video标签有一个很重要的属性，那就是`playsinline`,这个属性去掉之后视频就可以全屏，但不是直接生效，而是下次播放的时候才可以，于是我们需要先把视频短暂的暂停一下，在播放就可以了，具体实现方法：\n```javascript\nvideo.pause()\nvideo.removeAttribute('playsinline')\nvideo.removeAttribute('webkit-playsinline')\nvideo.play()\n```\n这个仅对IOS中的全屏有用，如果兼容Android需要使用`requestFullScreen`方法，具体实现方法：\n```html\n<button onclick=\"fullscreenFn()\">全屏</button>\n<video width=\"400\" autoplay=\"\" webkit-playsinline=\"true\" playsinline=\"playsinline\" src='1.mp4' id=\"video\"></video>\n```\n```javascript\n// 浏览器前缀判断\n    var videoEle = document.getElementById('video')\n    function browserPrefix (method) {\n      let browserPrefixreturn\n      switch (true) {\n        // W3C\n        case (!!(videoEle[method])):\n          browserPrefixreturn = method\n          break\n        // FireFox\n        case (!!(videoEle['moz' + method[0].toUpperCase() + method.slice(1)])):\n          browserPrefixreturn = 'moz' + method[0].toUpperCase() + method.slice(1)\n          break\n        // Chrome等\n        case (!!(videoEle['webkit' + method[0].toUpperCase() + method.slice(1)])):\n          browserPrefixreturn = 'webkit' + method[0].toUpperCase() + method.slice(1)\n          break\n        // IE11\n        case (!!(videoEle['ms' + method[0].toUpperCase() + method.slice(1)])):\n          browserPrefixreturn = 'ms' + method[0].toUpperCase() + method.slice(1)\n          break\n      }\n      return browserPrefixreturn\n\t}\n    function fullscreenFn(){\n      video.pause()\n      video.removeAttribute('playsinline')\n      video.removeAttribute('webkit-playsinline')\n      video.play()\n      video[browserPrefix('requestFullScreen')]()\n      event.stopImmediatePropagation()\n    }\n```","source":"_posts/JS如何实现在IOS中video全屏播放.md","raw":"---\ntitle: JS如何实现在IOS中video全屏播放\ndate: 2018-12-21 13:08:37\ntags: \n  - js\n  - ios\ncategories: js\n---\n现在开发人员不容易呀，产品、运营天天各种需求，哎这个顶导要在页面往上滑的时候缓缓的隐藏，下拉的时候在缓缓的显示~ 哎这个图片要自适应的呀，就是那种不够的话补黑边的呀~ 哎视频的进度条要自定义的呀，原生的那个多丑呀~ 哎。。。\n\n唉，怎么办呢，没有办法呀，使劲磕呗，那今天的话题我们就来说说IOS中video全屏的问题，有需要的朋友可以参考下\n\n\n### video的几个重要的属性\n`controls`： 显示播放控件；controls属性规定浏览器应该为视频提供播放控件,换句话说，只有写了这个属性才会有播放控件，不写的话默认是没有的，所有如果要自定义播放控件就不需要写controls属性\n写法：\n```html\n<video controls src='1.mp4'></video>      \n```\n\n`autoplay`：自动播放；指定后，视频会马上自动开始播放，不会停下来等着数据载入结束\n写法：\n```html\n<video autoplay src='1.mp4'></video>\n```\n\n`playsinline`：取消全屏；只需在video上添加该属性，便可使视频播放时局域播放，不脱离文档流，但是这个属性需要APP支持，在APP开发中设置UIwebview 的allowsInlineMediaPlayback = YES   webview.allowsInlineMediaPlayback = YES才能生效\n写法：\n```html\n<video webkit-playsinline=\"true\" playsinline=\"playsinline\" src='1.mp4'></video>\n```\n\n### js自定义video全屏\n众所周知，IOS是不支持全屏API的，于是requesrFullScreen事件对于video全屏是不起作用的，但是IOS9+对于video标签有一个很重要的属性，那就是`playsinline`,这个属性去掉之后视频就可以全屏，但不是直接生效，而是下次播放的时候才可以，于是我们需要先把视频短暂的暂停一下，在播放就可以了，具体实现方法：\n```javascript\nvideo.pause()\nvideo.removeAttribute('playsinline')\nvideo.removeAttribute('webkit-playsinline')\nvideo.play()\n```\n这个仅对IOS中的全屏有用，如果兼容Android需要使用`requestFullScreen`方法，具体实现方法：\n```html\n<button onclick=\"fullscreenFn()\">全屏</button>\n<video width=\"400\" autoplay=\"\" webkit-playsinline=\"true\" playsinline=\"playsinline\" src='1.mp4' id=\"video\"></video>\n```\n```javascript\n// 浏览器前缀判断\n    var videoEle = document.getElementById('video')\n    function browserPrefix (method) {\n      let browserPrefixreturn\n      switch (true) {\n        // W3C\n        case (!!(videoEle[method])):\n          browserPrefixreturn = method\n          break\n        // FireFox\n        case (!!(videoEle['moz' + method[0].toUpperCase() + method.slice(1)])):\n          browserPrefixreturn = 'moz' + method[0].toUpperCase() + method.slice(1)\n          break\n        // Chrome等\n        case (!!(videoEle['webkit' + method[0].toUpperCase() + method.slice(1)])):\n          browserPrefixreturn = 'webkit' + method[0].toUpperCase() + method.slice(1)\n          break\n        // IE11\n        case (!!(videoEle['ms' + method[0].toUpperCase() + method.slice(1)])):\n          browserPrefixreturn = 'ms' + method[0].toUpperCase() + method.slice(1)\n          break\n      }\n      return browserPrefixreturn\n\t}\n    function fullscreenFn(){\n      video.pause()\n      video.removeAttribute('playsinline')\n      video.removeAttribute('webkit-playsinline')\n      video.play()\n      video[browserPrefix('requestFullScreen')]()\n      event.stopImmediatePropagation()\n    }\n```","slug":"JS如何实现在IOS中video全屏播放","published":1,"updated":"2020-05-03T09:33:18.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9qxci4600030nurxl6snh9h","content":"<p>现在开发人员不容易呀，产品、运营天天各种需求，哎这个顶导要在页面往上滑的时候缓缓的隐藏，下拉的时候在缓缓的显示~ 哎这个图片要自适应的呀，就是那种不够的话补黑边的呀~ 哎视频的进度条要自定义的呀，原生的那个多丑呀~ 哎。。。</p>\n<p>唉，怎么办呢，没有办法呀，使劲磕呗，那今天的话题我们就来说说IOS中video全屏的问题，有需要的朋友可以参考下</p>\n<h3 id=\"video的几个重要的属性\"><a href=\"#video的几个重要的属性\" class=\"headerlink\" title=\"video的几个重要的属性\"></a>video的几个重要的属性</h3><p><code>controls</code>： 显示播放控件；controls属性规定浏览器应该为视频提供播放控件,换句话说，只有写了这个属性才会有播放控件，不写的话默认是没有的，所有如果要自定义播放控件就不需要写controls属性<br>写法：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">controls</span> <span class=\"attr\">src</span>=<span class=\"string\">'1.mp4'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><code>autoplay</code>：自动播放；指定后，视频会马上自动开始播放，不会停下来等着数据载入结束<br>写法：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">autoplay</span> <span class=\"attr\">src</span>=<span class=\"string\">'1.mp4'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><code>playsinline</code>：取消全屏；只需在video上添加该属性，便可使视频播放时局域播放，不脱离文档流，但是这个属性需要APP支持，在APP开发中设置UIwebview 的allowsInlineMediaPlayback = YES   webview.allowsInlineMediaPlayback = YES才能生效<br>写法：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">webkit-playsinline</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">playsinline</span>=<span class=\"string\">\"playsinline\"</span> <span class=\"attr\">src</span>=<span class=\"string\">'1.mp4'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"js自定义video全屏\"><a href=\"#js自定义video全屏\" class=\"headerlink\" title=\"js自定义video全屏\"></a>js自定义video全屏</h3><p>众所周知，IOS是不支持全屏API的，于是requesrFullScreen事件对于video全屏是不起作用的，但是IOS9+对于video标签有一个很重要的属性，那就是<code>playsinline</code>,这个属性去掉之后视频就可以全屏，但不是直接生效，而是下次播放的时候才可以，于是我们需要先把视频短暂的暂停一下，在播放就可以了，具体实现方法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">video.pause()</span><br><span class=\"line\">video.removeAttribute(<span class=\"string\">'playsinline'</span>)</span><br><span class=\"line\">video.removeAttribute(<span class=\"string\">'webkit-playsinline'</span>)</span><br><span class=\"line\">video.play()</span><br></pre></td></tr></table></figure></p>\n<p>这个仅对IOS中的全屏有用，如果兼容Android需要使用<code>requestFullScreen</code>方法，具体实现方法：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"fullscreenFn()\"</span>&gt;</span>全屏<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">width</span>=<span class=\"string\">\"400\"</span> <span class=\"attr\">autoplay</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">webkit-playsinline</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">playsinline</span>=<span class=\"string\">\"playsinline\"</span> <span class=\"attr\">src</span>=<span class=\"string\">'1.mp4'</span> <span class=\"attr\">id</span>=<span class=\"string\">\"video\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 浏览器前缀判断</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> videoEle = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'video'</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">browserPrefix</span> (<span class=\"params\">method</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> browserPrefixreturn</span><br><span class=\"line\">      <span class=\"keyword\">switch</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// W3C</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> (!!(videoEle[method])):</span><br><span class=\"line\">          browserPrefixreturn = method</span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"comment\">// FireFox</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> (!!(videoEle[<span class=\"string\">'moz'</span> + method[<span class=\"number\">0</span>].toUpperCase() + method.slice(<span class=\"number\">1</span>)])):</span><br><span class=\"line\">          browserPrefixreturn = <span class=\"string\">'moz'</span> + method[<span class=\"number\">0</span>].toUpperCase() + method.slice(<span class=\"number\">1</span>)</span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"comment\">// Chrome等</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> (!!(videoEle[<span class=\"string\">'webkit'</span> + method[<span class=\"number\">0</span>].toUpperCase() + method.slice(<span class=\"number\">1</span>)])):</span><br><span class=\"line\">          browserPrefixreturn = <span class=\"string\">'webkit'</span> + method[<span class=\"number\">0</span>].toUpperCase() + method.slice(<span class=\"number\">1</span>)</span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"comment\">// IE11</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> (!!(videoEle[<span class=\"string\">'ms'</span> + method[<span class=\"number\">0</span>].toUpperCase() + method.slice(<span class=\"number\">1</span>)])):</span><br><span class=\"line\">          browserPrefixreturn = <span class=\"string\">'ms'</span> + method[<span class=\"number\">0</span>].toUpperCase() + method.slice(<span class=\"number\">1</span>)</span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> browserPrefixreturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fullscreenFn</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      video.pause()</span><br><span class=\"line\">      video.removeAttribute(<span class=\"string\">'playsinline'</span>)</span><br><span class=\"line\">      video.removeAttribute(<span class=\"string\">'webkit-playsinline'</span>)</span><br><span class=\"line\">      video.play()</span><br><span class=\"line\">      video[browserPrefix(<span class=\"string\">'requestFullScreen'</span>)]()</span><br><span class=\"line\">      event.stopImmediatePropagation()</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>现在开发人员不容易呀，产品、运营天天各种需求，哎这个顶导要在页面往上滑的时候缓缓的隐藏，下拉的时候在缓缓的显示~ 哎这个图片要自适应的呀，就是那种不够的话补黑边的呀~ 哎视频的进度条要自定义的呀，原生的那个多丑呀~ 哎。。。</p>\n<p>唉，怎么办呢，没有办法呀，使劲磕呗，那今天的话题我们就来说说IOS中video全屏的问题，有需要的朋友可以参考下</p>\n<h3 id=\"video的几个重要的属性\"><a href=\"#video的几个重要的属性\" class=\"headerlink\" title=\"video的几个重要的属性\"></a>video的几个重要的属性</h3><p><code>controls</code>： 显示播放控件；controls属性规定浏览器应该为视频提供播放控件,换句话说，只有写了这个属性才会有播放控件，不写的话默认是没有的，所有如果要自定义播放控件就不需要写controls属性<br>写法：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">controls</span> <span class=\"attr\">src</span>=<span class=\"string\">'1.mp4'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><code>autoplay</code>：自动播放；指定后，视频会马上自动开始播放，不会停下来等着数据载入结束<br>写法：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">autoplay</span> <span class=\"attr\">src</span>=<span class=\"string\">'1.mp4'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><code>playsinline</code>：取消全屏；只需在video上添加该属性，便可使视频播放时局域播放，不脱离文档流，但是这个属性需要APP支持，在APP开发中设置UIwebview 的allowsInlineMediaPlayback = YES   webview.allowsInlineMediaPlayback = YES才能生效<br>写法：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">webkit-playsinline</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">playsinline</span>=<span class=\"string\">\"playsinline\"</span> <span class=\"attr\">src</span>=<span class=\"string\">'1.mp4'</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"js自定义video全屏\"><a href=\"#js自定义video全屏\" class=\"headerlink\" title=\"js自定义video全屏\"></a>js自定义video全屏</h3><p>众所周知，IOS是不支持全屏API的，于是requesrFullScreen事件对于video全屏是不起作用的，但是IOS9+对于video标签有一个很重要的属性，那就是<code>playsinline</code>,这个属性去掉之后视频就可以全屏，但不是直接生效，而是下次播放的时候才可以，于是我们需要先把视频短暂的暂停一下，在播放就可以了，具体实现方法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">video.pause()</span><br><span class=\"line\">video.removeAttribute(<span class=\"string\">'playsinline'</span>)</span><br><span class=\"line\">video.removeAttribute(<span class=\"string\">'webkit-playsinline'</span>)</span><br><span class=\"line\">video.play()</span><br></pre></td></tr></table></figure></p>\n<p>这个仅对IOS中的全屏有用，如果兼容Android需要使用<code>requestFullScreen</code>方法，具体实现方法：<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"fullscreenFn()\"</span>&gt;</span>全屏<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">width</span>=<span class=\"string\">\"400\"</span> <span class=\"attr\">autoplay</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">webkit-playsinline</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">playsinline</span>=<span class=\"string\">\"playsinline\"</span> <span class=\"attr\">src</span>=<span class=\"string\">'1.mp4'</span> <span class=\"attr\">id</span>=<span class=\"string\">\"video\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 浏览器前缀判断</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> videoEle = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'video'</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">browserPrefix</span> (<span class=\"params\">method</span>) </span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> browserPrefixreturn</span><br><span class=\"line\">      <span class=\"keyword\">switch</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// W3C</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> (!!(videoEle[method])):</span><br><span class=\"line\">          browserPrefixreturn = method</span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"comment\">// FireFox</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> (!!(videoEle[<span class=\"string\">'moz'</span> + method[<span class=\"number\">0</span>].toUpperCase() + method.slice(<span class=\"number\">1</span>)])):</span><br><span class=\"line\">          browserPrefixreturn = <span class=\"string\">'moz'</span> + method[<span class=\"number\">0</span>].toUpperCase() + method.slice(<span class=\"number\">1</span>)</span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"comment\">// Chrome等</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> (!!(videoEle[<span class=\"string\">'webkit'</span> + method[<span class=\"number\">0</span>].toUpperCase() + method.slice(<span class=\"number\">1</span>)])):</span><br><span class=\"line\">          browserPrefixreturn = <span class=\"string\">'webkit'</span> + method[<span class=\"number\">0</span>].toUpperCase() + method.slice(<span class=\"number\">1</span>)</span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"comment\">// IE11</span></span><br><span class=\"line\">        <span class=\"keyword\">case</span> (!!(videoEle[<span class=\"string\">'ms'</span> + method[<span class=\"number\">0</span>].toUpperCase() + method.slice(<span class=\"number\">1</span>)])):</span><br><span class=\"line\">          browserPrefixreturn = <span class=\"string\">'ms'</span> + method[<span class=\"number\">0</span>].toUpperCase() + method.slice(<span class=\"number\">1</span>)</span><br><span class=\"line\">          <span class=\"keyword\">break</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> browserPrefixreturn</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fullscreenFn</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">      video.pause()</span><br><span class=\"line\">      video.removeAttribute(<span class=\"string\">'playsinline'</span>)</span><br><span class=\"line\">      video.removeAttribute(<span class=\"string\">'webkit-playsinline'</span>)</span><br><span class=\"line\">      video.play()</span><br><span class=\"line\">      video[browserPrefix(<span class=\"string\">'requestFullScreen'</span>)]()</span><br><span class=\"line\">      event.stopImmediatePropagation()</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>"},{"title":"Node.js小试牛刀","date":"2018-02-15T17:35:36.000Z","_content":"","source":"_posts/Node-js小试牛刀.md","raw":"---\ntitle: Node.js小试牛刀\ndate: 2018-02-16 01:35:36\ntags:\n---\n","slug":"Node-js小试牛刀","published":1,"updated":"2020-05-03T09:33:18.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9qxci4700040nurksesg3t2","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"OSI7层参考模型和TCP/IP5层参考模型","date":"2020-01-06T08:23:51.000Z","_content":"#### 一、相关名词\n**OSI**（Open System Interconnection Model开放式系统互联模型）简称为OSI模型,由国际标准化组织提出，一个试图使各种计算机在世界范围内互连为网络的标准框架。定义于ISO/IEC 7498-1\n\n**OSI/RM**（Open Systems Interconnection Reference Model）开放系统互联参考模型\n\n**ISO**（International Organization for Standardization）国际标准化组织\n\n**ARP**（Address Resolution Protocol）地址解析协议，是根据IP地址获取物理地址的一个协议\n\n**TCP/IP**（Transmission Control Protocol/Internet Protocol，传输控制协议/网际协议）是指能够在多个不同网络间实现信息传输的协议簇。TCP/IP协议不仅仅指的是TCP 和IP两个协议，而是指一个由FTP、SMTP、TCP、UDP、IP等协议构成的协议簇， 只是因为在TCP/IP协议中TCP协议和IP协议最具代表性，所以被称为TCP/IP协议。\n\n\n#### 二、七层模型\n#### 第7层 应用层\n应用层与提供给用户的网络服务相关，这些服务非常丰富，包括文件传送、电子邮件、P2P应用等。应用层为用户提供了一个使用网络应用的“接口”。\n\n#### 第6层 表示层\n表现层主要用于处理应用实体间的交换数据的语法，其目的是解决格式和数据表示的差别，从而为应用层提供一个一致的数据格式，使字符、格式等有差异的设备之间相互通信。除此之外，表现层还可以实现文本压缩、数据加密/解密、字符编码的转换等功能。这一层的功能在某些实际数据通信网络中是有应用层来实现的，而且表示层不独立存在。\n\n#### 第5层 会话层\n会话层是指用户与用户的连接，通过在两台计算机间建立、管理和终止通信来完成对话。会话层的主要功能：在建立会话时核实双方身份是否有权参加会话；确定双方支付通信费用；双方在各种选择功能方面（如全双工还是半双工通信）取得一致，在会话建立以后，需要对进程间的对话进行管理与控制，例如，对话过程中某个环节输了故障，会话层在可能条件下必须对这个对话的数据，使数据不丢失，如不能保留，那么终止这个对话，并重新开始。在实际的网络中，会话层的功能已经被应用层所覆盖，很少单独存在。\n\n#### 第4层 传输层\n传输层是第一个端到端的层次，也是进程到进程的层次。数据的通信表面上看是在两个主机之间进行，但实质上是发生在两个主机的进程之间。OSI参考模型的前三层可组成公共网络，被很多设备共享，并且计算机——交换结点（典型的交换结点是路由器，交换机等）、交换结点——交换结点是按照“接力”方式传送的。为了防止传送途中报文的丢失，两个主机的进程之间需要实现端到端控制。因此，传输层的功能主要包括复用/分解（区分发送和接收主机上的进程）、端到端的可靠传输、连接控制、流量控制和拥塞控制机制等。\n\n#### 第3层 网络层\n网络层解决的核心问题是如何将分组通过交换网络传送至目的主机，因此，网络层的主要功能是数据转发与路由，在交换网络中，信息从源节点出发，要经过若干个中继节点所谓存储转发后，才能到达目的结点。这样一个包括源结点、中继结点、目的结点的集合称为从源结点到目的结点的路径。一般在两个结点之间会有多条路径选择，这种路由选择是网络层要完成的主要功能之一。当网络设备，比如路由器，从一个接口收到数据分组时，需要根据已掌握的路由信息将其转发到合适的接口并向下一个结点发送，直至送达目的结点。此外网络层还要对进入交换网络的通信量加以控制，以避免通信量过大造成交换网络性能下降。\n\n#### 第2层 数据链路层\n数据链路层的主要功能是实现在相邻结点之间数据可靠而有效的传输，数据在物理介质内传输过程，不能保证没有任何错误发生。为了能实现有效的差错控制，就采用了一种以“帧”为单位的数据块传输方式。要采用帧格式传输，就必须有相应的帧同步技术，这就是数据链路层的“成帧”（“帧同步”）功能，包括定义帧的格式、类型、成帧的方法等。有了“帧”的存在，就可以将差错控制技术应用在数据帧中，例如，将数据码后面附加一定位数的循环码，从而实现数据链路层的差错控制功能。数据链路层还可以实现相邻结点间通信的流量控制。\n\n#### 第1层 物理层\n物理层的主要功能是在传输介质上实现无结构比特流传输。所谓无结构比特流是指不关心比特流实际代表的信息内容，只关心如何将0、1这些比特以合适的信号传送至目的地，因此，物理层要实现信号编码功能，物理层的另一项主要任务就是规定数据终端设备（DTE）与数据通信设备（DCE）之间接口的相关特性，主要包括机械，电气，功能和规程4个方面的特性。机械特性也叫物理特性，说明硬件连接接口的机械特点，如接口的形状、尺寸、插脚的数量和排列方式等；电气特性规定了在物理连接上，导线的电气连接及有关电路的特性，如信号电平大小、接收器和发送器电路特性的说明，信号的识别、最大传输速率的说明等；功能特性说明物理接口各条信号线的用途，如接口信号线的功能分类等；规程特性指明利用接口传输比特流的全过程及各项用于传输的事件发生的合法顺序，包括事件的执行顺序和数据传输的方式，即在物理连接建立、维持和交换信息时，收发双方在各自电路上的动作序列。\n\n#### 三、OSI七层参考模型与TCP/IP协议\n<html> <table><tbody><tr><td style=\"vertical-align:bottom;\"> <p>OSI七层网络模型</p> </td> <td style=\"vertical-align:bottom;\"> <p>TCP/IP四层模型</p> </td> <td style=\"vertical-align:bottom;\"> <p>TCP/IP五层模型</p> </td> <td style=\"vertical-align:bottom;\"> <p>对应网络协议</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>应用层（Application）</p> </td> <td rowspan=\"3\"> <p>应用层</p> </td> <td rowspan=\"3\"> <p>应用层</p> </td> <td style=\"vertical-align:bottom;\"> <p><span style=\"color:#ff0000;\">HTTP</span>、TFTP,<span style=\"color:#ff0000;\">&nbsp;FTP</span>, NFS, WAIS、SMTP</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>表示层（Presentation）</p> </td> <td style=\"vertical-align:bottom;\"> <p>Telnet, Rlogin, SNMP, Gopher</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>会话层（Session）</p> </td> <td style=\"vertical-align:bottom;\"> <p><span style=\"color:#ff0000;\">SMTP, DNS</span></p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>传输层（Transport）</p> </td> <td> <p>传输层</p> </td> <td> <p>传输层</p> </td> <td style=\"vertical-align:bottom;\"> <p>TCP, UDP</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>网络层（Network）</p> </td> <td> <p>网络互联层</p> </td> <td> <p>网络层</p> </td> <td style=\"vertical-align:bottom;\"> <p>IP, ICMP, ARP, RARP, AKP, UUCP</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>数据链路层（Data Link）</p> </td> <td rowspan=\"2\"> <p>网络接口层</p> </td> <td> <p>数据链路层</p> </td> <td style=\"vertical-align:bottom;\"> <p>FDDI, Ethernet, Arpanet, PDN, SLIP, PPP</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>物理层（Physical）</p> </td> <td> <p>物理层</p> </td> <td style=\"vertical-align:bottom;\"> <p>IEEE 802.1A, IEEE 802.2到IEEE 802.11</p> </td> </tr></tbody></table> </html>\n\n\n#### 四、流程图\n![image](OSI7层参考模型和TCP-IP5层参考模型/img.png)","source":"_posts/OSI7层参考模型和TCP-IP5层参考模型.md","raw":"---\ntitle: OSI7层参考模型和TCP/IP5层参考模型\ndate: 2020-01-06 16:23:51\ntags:\ncategories: \n\t- 网络原理\n\t- 学习日记\n---\n#### 一、相关名词\n**OSI**（Open System Interconnection Model开放式系统互联模型）简称为OSI模型,由国际标准化组织提出，一个试图使各种计算机在世界范围内互连为网络的标准框架。定义于ISO/IEC 7498-1\n\n**OSI/RM**（Open Systems Interconnection Reference Model）开放系统互联参考模型\n\n**ISO**（International Organization for Standardization）国际标准化组织\n\n**ARP**（Address Resolution Protocol）地址解析协议，是根据IP地址获取物理地址的一个协议\n\n**TCP/IP**（Transmission Control Protocol/Internet Protocol，传输控制协议/网际协议）是指能够在多个不同网络间实现信息传输的协议簇。TCP/IP协议不仅仅指的是TCP 和IP两个协议，而是指一个由FTP、SMTP、TCP、UDP、IP等协议构成的协议簇， 只是因为在TCP/IP协议中TCP协议和IP协议最具代表性，所以被称为TCP/IP协议。\n\n\n#### 二、七层模型\n#### 第7层 应用层\n应用层与提供给用户的网络服务相关，这些服务非常丰富，包括文件传送、电子邮件、P2P应用等。应用层为用户提供了一个使用网络应用的“接口”。\n\n#### 第6层 表示层\n表现层主要用于处理应用实体间的交换数据的语法，其目的是解决格式和数据表示的差别，从而为应用层提供一个一致的数据格式，使字符、格式等有差异的设备之间相互通信。除此之外，表现层还可以实现文本压缩、数据加密/解密、字符编码的转换等功能。这一层的功能在某些实际数据通信网络中是有应用层来实现的，而且表示层不独立存在。\n\n#### 第5层 会话层\n会话层是指用户与用户的连接，通过在两台计算机间建立、管理和终止通信来完成对话。会话层的主要功能：在建立会话时核实双方身份是否有权参加会话；确定双方支付通信费用；双方在各种选择功能方面（如全双工还是半双工通信）取得一致，在会话建立以后，需要对进程间的对话进行管理与控制，例如，对话过程中某个环节输了故障，会话层在可能条件下必须对这个对话的数据，使数据不丢失，如不能保留，那么终止这个对话，并重新开始。在实际的网络中，会话层的功能已经被应用层所覆盖，很少单独存在。\n\n#### 第4层 传输层\n传输层是第一个端到端的层次，也是进程到进程的层次。数据的通信表面上看是在两个主机之间进行，但实质上是发生在两个主机的进程之间。OSI参考模型的前三层可组成公共网络，被很多设备共享，并且计算机——交换结点（典型的交换结点是路由器，交换机等）、交换结点——交换结点是按照“接力”方式传送的。为了防止传送途中报文的丢失，两个主机的进程之间需要实现端到端控制。因此，传输层的功能主要包括复用/分解（区分发送和接收主机上的进程）、端到端的可靠传输、连接控制、流量控制和拥塞控制机制等。\n\n#### 第3层 网络层\n网络层解决的核心问题是如何将分组通过交换网络传送至目的主机，因此，网络层的主要功能是数据转发与路由，在交换网络中，信息从源节点出发，要经过若干个中继节点所谓存储转发后，才能到达目的结点。这样一个包括源结点、中继结点、目的结点的集合称为从源结点到目的结点的路径。一般在两个结点之间会有多条路径选择，这种路由选择是网络层要完成的主要功能之一。当网络设备，比如路由器，从一个接口收到数据分组时，需要根据已掌握的路由信息将其转发到合适的接口并向下一个结点发送，直至送达目的结点。此外网络层还要对进入交换网络的通信量加以控制，以避免通信量过大造成交换网络性能下降。\n\n#### 第2层 数据链路层\n数据链路层的主要功能是实现在相邻结点之间数据可靠而有效的传输，数据在物理介质内传输过程，不能保证没有任何错误发生。为了能实现有效的差错控制，就采用了一种以“帧”为单位的数据块传输方式。要采用帧格式传输，就必须有相应的帧同步技术，这就是数据链路层的“成帧”（“帧同步”）功能，包括定义帧的格式、类型、成帧的方法等。有了“帧”的存在，就可以将差错控制技术应用在数据帧中，例如，将数据码后面附加一定位数的循环码，从而实现数据链路层的差错控制功能。数据链路层还可以实现相邻结点间通信的流量控制。\n\n#### 第1层 物理层\n物理层的主要功能是在传输介质上实现无结构比特流传输。所谓无结构比特流是指不关心比特流实际代表的信息内容，只关心如何将0、1这些比特以合适的信号传送至目的地，因此，物理层要实现信号编码功能，物理层的另一项主要任务就是规定数据终端设备（DTE）与数据通信设备（DCE）之间接口的相关特性，主要包括机械，电气，功能和规程4个方面的特性。机械特性也叫物理特性，说明硬件连接接口的机械特点，如接口的形状、尺寸、插脚的数量和排列方式等；电气特性规定了在物理连接上，导线的电气连接及有关电路的特性，如信号电平大小、接收器和发送器电路特性的说明，信号的识别、最大传输速率的说明等；功能特性说明物理接口各条信号线的用途，如接口信号线的功能分类等；规程特性指明利用接口传输比特流的全过程及各项用于传输的事件发生的合法顺序，包括事件的执行顺序和数据传输的方式，即在物理连接建立、维持和交换信息时，收发双方在各自电路上的动作序列。\n\n#### 三、OSI七层参考模型与TCP/IP协议\n<html> <table><tbody><tr><td style=\"vertical-align:bottom;\"> <p>OSI七层网络模型</p> </td> <td style=\"vertical-align:bottom;\"> <p>TCP/IP四层模型</p> </td> <td style=\"vertical-align:bottom;\"> <p>TCP/IP五层模型</p> </td> <td style=\"vertical-align:bottom;\"> <p>对应网络协议</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>应用层（Application）</p> </td> <td rowspan=\"3\"> <p>应用层</p> </td> <td rowspan=\"3\"> <p>应用层</p> </td> <td style=\"vertical-align:bottom;\"> <p><span style=\"color:#ff0000;\">HTTP</span>、TFTP,<span style=\"color:#ff0000;\">&nbsp;FTP</span>, NFS, WAIS、SMTP</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>表示层（Presentation）</p> </td> <td style=\"vertical-align:bottom;\"> <p>Telnet, Rlogin, SNMP, Gopher</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>会话层（Session）</p> </td> <td style=\"vertical-align:bottom;\"> <p><span style=\"color:#ff0000;\">SMTP, DNS</span></p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>传输层（Transport）</p> </td> <td> <p>传输层</p> </td> <td> <p>传输层</p> </td> <td style=\"vertical-align:bottom;\"> <p>TCP, UDP</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>网络层（Network）</p> </td> <td> <p>网络互联层</p> </td> <td> <p>网络层</p> </td> <td style=\"vertical-align:bottom;\"> <p>IP, ICMP, ARP, RARP, AKP, UUCP</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>数据链路层（Data Link）</p> </td> <td rowspan=\"2\"> <p>网络接口层</p> </td> <td> <p>数据链路层</p> </td> <td style=\"vertical-align:bottom;\"> <p>FDDI, Ethernet, Arpanet, PDN, SLIP, PPP</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>物理层（Physical）</p> </td> <td> <p>物理层</p> </td> <td style=\"vertical-align:bottom;\"> <p>IEEE 802.1A, IEEE 802.2到IEEE 802.11</p> </td> </tr></tbody></table> </html>\n\n\n#### 四、流程图\n![image](OSI7层参考模型和TCP-IP5层参考模型/img.png)","slug":"OSI7层参考模型和TCP-IP5层参考模型","published":1,"updated":"2020-05-03T09:33:18.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9qxci4800050nurzxfxolvs","content":"<h4 id=\"一、相关名词\"><a href=\"#一、相关名词\" class=\"headerlink\" title=\"一、相关名词\"></a>一、相关名词</h4><p><strong>OSI</strong>（Open System Interconnection Model开放式系统互联模型）简称为OSI模型,由国际标准化组织提出，一个试图使各种计算机在世界范围内互连为网络的标准框架。定义于ISO/IEC 7498-1</p>\n<p><strong>OSI/RM</strong>（Open Systems Interconnection Reference Model）开放系统互联参考模型</p>\n<p><strong>ISO</strong>（International Organization for Standardization）国际标准化组织</p>\n<p><strong>ARP</strong>（Address Resolution Protocol）地址解析协议，是根据IP地址获取物理地址的一个协议</p>\n<p><strong>TCP/IP</strong>（Transmission Control Protocol/Internet Protocol，传输控制协议/网际协议）是指能够在多个不同网络间实现信息传输的协议簇。TCP/IP协议不仅仅指的是TCP 和IP两个协议，而是指一个由FTP、SMTP、TCP、UDP、IP等协议构成的协议簇， 只是因为在TCP/IP协议中TCP协议和IP协议最具代表性，所以被称为TCP/IP协议。</p>\n<h4 id=\"二、七层模型\"><a href=\"#二、七层模型\" class=\"headerlink\" title=\"二、七层模型\"></a>二、七层模型</h4><h4 id=\"第7层-应用层\"><a href=\"#第7层-应用层\" class=\"headerlink\" title=\"第7层 应用层\"></a>第7层 应用层</h4><p>应用层与提供给用户的网络服务相关，这些服务非常丰富，包括文件传送、电子邮件、P2P应用等。应用层为用户提供了一个使用网络应用的“接口”。</p>\n<h4 id=\"第6层-表示层\"><a href=\"#第6层-表示层\" class=\"headerlink\" title=\"第6层 表示层\"></a>第6层 表示层</h4><p>表现层主要用于处理应用实体间的交换数据的语法，其目的是解决格式和数据表示的差别，从而为应用层提供一个一致的数据格式，使字符、格式等有差异的设备之间相互通信。除此之外，表现层还可以实现文本压缩、数据加密/解密、字符编码的转换等功能。这一层的功能在某些实际数据通信网络中是有应用层来实现的，而且表示层不独立存在。</p>\n<h4 id=\"第5层-会话层\"><a href=\"#第5层-会话层\" class=\"headerlink\" title=\"第5层 会话层\"></a>第5层 会话层</h4><p>会话层是指用户与用户的连接，通过在两台计算机间建立、管理和终止通信来完成对话。会话层的主要功能：在建立会话时核实双方身份是否有权参加会话；确定双方支付通信费用；双方在各种选择功能方面（如全双工还是半双工通信）取得一致，在会话建立以后，需要对进程间的对话进行管理与控制，例如，对话过程中某个环节输了故障，会话层在可能条件下必须对这个对话的数据，使数据不丢失，如不能保留，那么终止这个对话，并重新开始。在实际的网络中，会话层的功能已经被应用层所覆盖，很少单独存在。</p>\n<h4 id=\"第4层-传输层\"><a href=\"#第4层-传输层\" class=\"headerlink\" title=\"第4层 传输层\"></a>第4层 传输层</h4><p>传输层是第一个端到端的层次，也是进程到进程的层次。数据的通信表面上看是在两个主机之间进行，但实质上是发生在两个主机的进程之间。OSI参考模型的前三层可组成公共网络，被很多设备共享，并且计算机——交换结点（典型的交换结点是路由器，交换机等）、交换结点——交换结点是按照“接力”方式传送的。为了防止传送途中报文的丢失，两个主机的进程之间需要实现端到端控制。因此，传输层的功能主要包括复用/分解（区分发送和接收主机上的进程）、端到端的可靠传输、连接控制、流量控制和拥塞控制机制等。</p>\n<h4 id=\"第3层-网络层\"><a href=\"#第3层-网络层\" class=\"headerlink\" title=\"第3层 网络层\"></a>第3层 网络层</h4><p>网络层解决的核心问题是如何将分组通过交换网络传送至目的主机，因此，网络层的主要功能是数据转发与路由，在交换网络中，信息从源节点出发，要经过若干个中继节点所谓存储转发后，才能到达目的结点。这样一个包括源结点、中继结点、目的结点的集合称为从源结点到目的结点的路径。一般在两个结点之间会有多条路径选择，这种路由选择是网络层要完成的主要功能之一。当网络设备，比如路由器，从一个接口收到数据分组时，需要根据已掌握的路由信息将其转发到合适的接口并向下一个结点发送，直至送达目的结点。此外网络层还要对进入交换网络的通信量加以控制，以避免通信量过大造成交换网络性能下降。</p>\n<h4 id=\"第2层-数据链路层\"><a href=\"#第2层-数据链路层\" class=\"headerlink\" title=\"第2层 数据链路层\"></a>第2层 数据链路层</h4><p>数据链路层的主要功能是实现在相邻结点之间数据可靠而有效的传输，数据在物理介质内传输过程，不能保证没有任何错误发生。为了能实现有效的差错控制，就采用了一种以“帧”为单位的数据块传输方式。要采用帧格式传输，就必须有相应的帧同步技术，这就是数据链路层的“成帧”（“帧同步”）功能，包括定义帧的格式、类型、成帧的方法等。有了“帧”的存在，就可以将差错控制技术应用在数据帧中，例如，将数据码后面附加一定位数的循环码，从而实现数据链路层的差错控制功能。数据链路层还可以实现相邻结点间通信的流量控制。</p>\n<h4 id=\"第1层-物理层\"><a href=\"#第1层-物理层\" class=\"headerlink\" title=\"第1层 物理层\"></a>第1层 物理层</h4><p>物理层的主要功能是在传输介质上实现无结构比特流传输。所谓无结构比特流是指不关心比特流实际代表的信息内容，只关心如何将0、1这些比特以合适的信号传送至目的地，因此，物理层要实现信号编码功能，物理层的另一项主要任务就是规定数据终端设备（DTE）与数据通信设备（DCE）之间接口的相关特性，主要包括机械，电气，功能和规程4个方面的特性。机械特性也叫物理特性，说明硬件连接接口的机械特点，如接口的形状、尺寸、插脚的数量和排列方式等；电气特性规定了在物理连接上，导线的电气连接及有关电路的特性，如信号电平大小、接收器和发送器电路特性的说明，信号的识别、最大传输速率的说明等；功能特性说明物理接口各条信号线的用途，如接口信号线的功能分类等；规程特性指明利用接口传输比特流的全过程及各项用于传输的事件发生的合法顺序，包括事件的执行顺序和数据传输的方式，即在物理连接建立、维持和交换信息时，收发双方在各自电路上的动作序列。</p>\n<h4 id=\"三、OSI七层参考模型与TCP-IP协议\"><a href=\"#三、OSI七层参考模型与TCP-IP协议\" class=\"headerlink\" title=\"三、OSI七层参考模型与TCP/IP协议\"></a>三、OSI七层参考模型与TCP/IP协议</h4><html> <table><tbody><tr><td style=\"vertical-align:bottom;\"> <p>OSI七层网络模型</p> </td> <td style=\"vertical-align:bottom;\"> <p>TCP/IP四层模型</p> </td> <td style=\"vertical-align:bottom;\"> <p>TCP/IP五层模型</p> </td> <td style=\"vertical-align:bottom;\"> <p>对应网络协议</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>应用层（Application）</p> </td> <td rowspan=\"3\"> <p>应用层</p> </td> <td rowspan=\"3\"> <p>应用层</p> </td> <td style=\"vertical-align:bottom;\"> <p><span style=\"color:#ff0000;\">HTTP</span>、TFTP,<span style=\"color:#ff0000;\">&nbsp;FTP</span>, NFS, WAIS、SMTP</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>表示层（Presentation）</p> </td> <td style=\"vertical-align:bottom;\"> <p>Telnet, Rlogin, SNMP, Gopher</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>会话层（Session）</p> </td> <td style=\"vertical-align:bottom;\"> <p><span style=\"color:#ff0000;\">SMTP, DNS</span></p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>传输层（Transport）</p> </td> <td> <p>传输层</p> </td> <td> <p>传输层</p> </td> <td style=\"vertical-align:bottom;\"> <p>TCP, UDP</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>网络层（Network）</p> </td> <td> <p>网络互联层</p> </td> <td> <p>网络层</p> </td> <td style=\"vertical-align:bottom;\"> <p>IP, ICMP, ARP, RARP, AKP, UUCP</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>数据链路层（Data Link）</p> </td> <td rowspan=\"2\"> <p>网络接口层</p> </td> <td> <p>数据链路层</p> </td> <td style=\"vertical-align:bottom;\"> <p>FDDI, Ethernet, Arpanet, PDN, SLIP, PPP</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>物理层（Physical）</p> </td> <td> <p>物理层</p> </td> <td style=\"vertical-align:bottom;\"> <p>IEEE 802.1A, IEEE 802.2到IEEE 802.11</p> </td> </tr></tbody></table> </html>\n\n\n<h4 id=\"四、流程图\"><a href=\"#四、流程图\" class=\"headerlink\" title=\"四、流程图\"></a>四、流程图</h4><p><img src=\"/2020/01/06/OSI7层参考模型和TCP-IP5层参考模型/img.png\" alt=\"image\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"一、相关名词\"><a href=\"#一、相关名词\" class=\"headerlink\" title=\"一、相关名词\"></a>一、相关名词</h4><p><strong>OSI</strong>（Open System Interconnection Model开放式系统互联模型）简称为OSI模型,由国际标准化组织提出，一个试图使各种计算机在世界范围内互连为网络的标准框架。定义于ISO/IEC 7498-1</p>\n<p><strong>OSI/RM</strong>（Open Systems Interconnection Reference Model）开放系统互联参考模型</p>\n<p><strong>ISO</strong>（International Organization for Standardization）国际标准化组织</p>\n<p><strong>ARP</strong>（Address Resolution Protocol）地址解析协议，是根据IP地址获取物理地址的一个协议</p>\n<p><strong>TCP/IP</strong>（Transmission Control Protocol/Internet Protocol，传输控制协议/网际协议）是指能够在多个不同网络间实现信息传输的协议簇。TCP/IP协议不仅仅指的是TCP 和IP两个协议，而是指一个由FTP、SMTP、TCP、UDP、IP等协议构成的协议簇， 只是因为在TCP/IP协议中TCP协议和IP协议最具代表性，所以被称为TCP/IP协议。</p>\n<h4 id=\"二、七层模型\"><a href=\"#二、七层模型\" class=\"headerlink\" title=\"二、七层模型\"></a>二、七层模型</h4><h4 id=\"第7层-应用层\"><a href=\"#第7层-应用层\" class=\"headerlink\" title=\"第7层 应用层\"></a>第7层 应用层</h4><p>应用层与提供给用户的网络服务相关，这些服务非常丰富，包括文件传送、电子邮件、P2P应用等。应用层为用户提供了一个使用网络应用的“接口”。</p>\n<h4 id=\"第6层-表示层\"><a href=\"#第6层-表示层\" class=\"headerlink\" title=\"第6层 表示层\"></a>第6层 表示层</h4><p>表现层主要用于处理应用实体间的交换数据的语法，其目的是解决格式和数据表示的差别，从而为应用层提供一个一致的数据格式，使字符、格式等有差异的设备之间相互通信。除此之外，表现层还可以实现文本压缩、数据加密/解密、字符编码的转换等功能。这一层的功能在某些实际数据通信网络中是有应用层来实现的，而且表示层不独立存在。</p>\n<h4 id=\"第5层-会话层\"><a href=\"#第5层-会话层\" class=\"headerlink\" title=\"第5层 会话层\"></a>第5层 会话层</h4><p>会话层是指用户与用户的连接，通过在两台计算机间建立、管理和终止通信来完成对话。会话层的主要功能：在建立会话时核实双方身份是否有权参加会话；确定双方支付通信费用；双方在各种选择功能方面（如全双工还是半双工通信）取得一致，在会话建立以后，需要对进程间的对话进行管理与控制，例如，对话过程中某个环节输了故障，会话层在可能条件下必须对这个对话的数据，使数据不丢失，如不能保留，那么终止这个对话，并重新开始。在实际的网络中，会话层的功能已经被应用层所覆盖，很少单独存在。</p>\n<h4 id=\"第4层-传输层\"><a href=\"#第4层-传输层\" class=\"headerlink\" title=\"第4层 传输层\"></a>第4层 传输层</h4><p>传输层是第一个端到端的层次，也是进程到进程的层次。数据的通信表面上看是在两个主机之间进行，但实质上是发生在两个主机的进程之间。OSI参考模型的前三层可组成公共网络，被很多设备共享，并且计算机——交换结点（典型的交换结点是路由器，交换机等）、交换结点——交换结点是按照“接力”方式传送的。为了防止传送途中报文的丢失，两个主机的进程之间需要实现端到端控制。因此，传输层的功能主要包括复用/分解（区分发送和接收主机上的进程）、端到端的可靠传输、连接控制、流量控制和拥塞控制机制等。</p>\n<h4 id=\"第3层-网络层\"><a href=\"#第3层-网络层\" class=\"headerlink\" title=\"第3层 网络层\"></a>第3层 网络层</h4><p>网络层解决的核心问题是如何将分组通过交换网络传送至目的主机，因此，网络层的主要功能是数据转发与路由，在交换网络中，信息从源节点出发，要经过若干个中继节点所谓存储转发后，才能到达目的结点。这样一个包括源结点、中继结点、目的结点的集合称为从源结点到目的结点的路径。一般在两个结点之间会有多条路径选择，这种路由选择是网络层要完成的主要功能之一。当网络设备，比如路由器，从一个接口收到数据分组时，需要根据已掌握的路由信息将其转发到合适的接口并向下一个结点发送，直至送达目的结点。此外网络层还要对进入交换网络的通信量加以控制，以避免通信量过大造成交换网络性能下降。</p>\n<h4 id=\"第2层-数据链路层\"><a href=\"#第2层-数据链路层\" class=\"headerlink\" title=\"第2层 数据链路层\"></a>第2层 数据链路层</h4><p>数据链路层的主要功能是实现在相邻结点之间数据可靠而有效的传输，数据在物理介质内传输过程，不能保证没有任何错误发生。为了能实现有效的差错控制，就采用了一种以“帧”为单位的数据块传输方式。要采用帧格式传输，就必须有相应的帧同步技术，这就是数据链路层的“成帧”（“帧同步”）功能，包括定义帧的格式、类型、成帧的方法等。有了“帧”的存在，就可以将差错控制技术应用在数据帧中，例如，将数据码后面附加一定位数的循环码，从而实现数据链路层的差错控制功能。数据链路层还可以实现相邻结点间通信的流量控制。</p>\n<h4 id=\"第1层-物理层\"><a href=\"#第1层-物理层\" class=\"headerlink\" title=\"第1层 物理层\"></a>第1层 物理层</h4><p>物理层的主要功能是在传输介质上实现无结构比特流传输。所谓无结构比特流是指不关心比特流实际代表的信息内容，只关心如何将0、1这些比特以合适的信号传送至目的地，因此，物理层要实现信号编码功能，物理层的另一项主要任务就是规定数据终端设备（DTE）与数据通信设备（DCE）之间接口的相关特性，主要包括机械，电气，功能和规程4个方面的特性。机械特性也叫物理特性，说明硬件连接接口的机械特点，如接口的形状、尺寸、插脚的数量和排列方式等；电气特性规定了在物理连接上，导线的电气连接及有关电路的特性，如信号电平大小、接收器和发送器电路特性的说明，信号的识别、最大传输速率的说明等；功能特性说明物理接口各条信号线的用途，如接口信号线的功能分类等；规程特性指明利用接口传输比特流的全过程及各项用于传输的事件发生的合法顺序，包括事件的执行顺序和数据传输的方式，即在物理连接建立、维持和交换信息时，收发双方在各自电路上的动作序列。</p>\n<h4 id=\"三、OSI七层参考模型与TCP-IP协议\"><a href=\"#三、OSI七层参考模型与TCP-IP协议\" class=\"headerlink\" title=\"三、OSI七层参考模型与TCP/IP协议\"></a>三、OSI七层参考模型与TCP/IP协议</h4><html> <table><tbody><tr><td style=\"vertical-align:bottom;\"> <p>OSI七层网络模型</p> </td> <td style=\"vertical-align:bottom;\"> <p>TCP/IP四层模型</p> </td> <td style=\"vertical-align:bottom;\"> <p>TCP/IP五层模型</p> </td> <td style=\"vertical-align:bottom;\"> <p>对应网络协议</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>应用层（Application）</p> </td> <td rowspan=\"3\"> <p>应用层</p> </td> <td rowspan=\"3\"> <p>应用层</p> </td> <td style=\"vertical-align:bottom;\"> <p><span style=\"color:#ff0000;\">HTTP</span>、TFTP,<span style=\"color:#ff0000;\">&nbsp;FTP</span>, NFS, WAIS、SMTP</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>表示层（Presentation）</p> </td> <td style=\"vertical-align:bottom;\"> <p>Telnet, Rlogin, SNMP, Gopher</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>会话层（Session）</p> </td> <td style=\"vertical-align:bottom;\"> <p><span style=\"color:#ff0000;\">SMTP, DNS</span></p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>传输层（Transport）</p> </td> <td> <p>传输层</p> </td> <td> <p>传输层</p> </td> <td style=\"vertical-align:bottom;\"> <p>TCP, UDP</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>网络层（Network）</p> </td> <td> <p>网络互联层</p> </td> <td> <p>网络层</p> </td> <td style=\"vertical-align:bottom;\"> <p>IP, ICMP, ARP, RARP, AKP, UUCP</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>数据链路层（Data Link）</p> </td> <td rowspan=\"2\"> <p>网络接口层</p> </td> <td> <p>数据链路层</p> </td> <td style=\"vertical-align:bottom;\"> <p>FDDI, Ethernet, Arpanet, PDN, SLIP, PPP</p> </td> </tr><tr><td style=\"vertical-align:bottom;\"> <p>物理层（Physical）</p> </td> <td> <p>物理层</p> </td> <td style=\"vertical-align:bottom;\"> <p>IEEE 802.1A, IEEE 802.2到IEEE 802.11</p> </td> </tr></tbody></table> </html>\n\n\n<h4 id=\"四、流程图\"><a href=\"#四、流程图\" class=\"headerlink\" title=\"四、流程图\"></a>四、流程图</h4><p><img src=\"/2020/01/06/OSI7层参考模型和TCP-IP5层参考模型/img.png\" alt=\"image\"></p>\n"},{"title":"leetCode两数之和","date":"2019-04-09T09:33:44.000Z","_content":"```javascript\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    let result = []\n    for (let i=0; i<nums.length; i++) {\n        let tmp = target - nums[i];\n        if (nums.indexOf(tmp) != -1) {\n            let tmp2 = nums.indexOf(tmp)\n            if (tmp2 === i) continue \n            result.push(i,tmp2)\n            return result\n        }\n    }\n};\nvar nums = [3,2,4]\nvar target = 6\nconsole.log(twoSum(nums, target))\n\n\n\n```\n```javascript\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    var result = [];\n     for (var i = 0; i < nums.length; i++){\n         for (var j = i+1; j < nums.length; j++){\n             if (nums[i] + nums[j] == target) {\n                 result.push(i)\n                 result.push(j)\n                 return result\n             }\n         }\n     }\n};\nvar nums = [2, 7, 11, 15]\nvar target = 26\nconsole.log(twoSum(nums, target))\n\n```","source":"_posts/leetCode两数之和.md","raw":"---\ntitle: leetCode两数之和\ndate: 2019-04-09 17:33:44\ntags:\n---\n```javascript\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    let result = []\n    for (let i=0; i<nums.length; i++) {\n        let tmp = target - nums[i];\n        if (nums.indexOf(tmp) != -1) {\n            let tmp2 = nums.indexOf(tmp)\n            if (tmp2 === i) continue \n            result.push(i,tmp2)\n            return result\n        }\n    }\n};\nvar nums = [3,2,4]\nvar target = 6\nconsole.log(twoSum(nums, target))\n\n\n\n```\n```javascript\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number[]}\n */\nvar twoSum = function(nums, target) {\n    var result = [];\n     for (var i = 0; i < nums.length; i++){\n         for (var j = i+1; j < nums.length; j++){\n             if (nums[i] + nums[j] == target) {\n                 result.push(i)\n                 result.push(j)\n                 return result\n             }\n         }\n     }\n};\nvar nums = [2, 7, 11, 15]\nvar target = 26\nconsole.log(twoSum(nums, target))\n\n```","slug":"leetCode两数之和","published":1,"updated":"2020-05-03T09:33:18.865Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9qxci4900060nur5saimldh","content":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;number[]&#125; nums</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;number&#125; target</span></span><br><span class=\"line\"><span class=\"comment\"> * @return &#123;number[]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;nums.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> tmp = target - nums[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums.indexOf(tmp) != <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> tmp2 = nums.indexOf(tmp)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (tmp2 === i) <span class=\"keyword\">continue</span> </span><br><span class=\"line\">            result.push(i,tmp2)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> result</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> nums = [<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> target = <span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(twoSum(nums, target))</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;number[]&#125; nums</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;number&#125; target</span></span><br><span class=\"line\"><span class=\"comment\"> * @return &#123;number[]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = [];</span><br><span class=\"line\">     <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class=\"line\">         <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = i+<span class=\"number\">1</span>; j &lt; nums.length; j++)&#123;</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (nums[i] + nums[j] == target) &#123;</span><br><span class=\"line\">                 result.push(i)</span><br><span class=\"line\">                 result.push(j)</span><br><span class=\"line\">                 <span class=\"keyword\">return</span> result</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> nums = [<span class=\"number\">2</span>, <span class=\"number\">7</span>, <span class=\"number\">11</span>, <span class=\"number\">15</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> target = <span class=\"number\">26</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(twoSum(nums, target))</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;number[]&#125; nums</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;number&#125; target</span></span><br><span class=\"line\"><span class=\"comment\"> * @return &#123;number[]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;nums.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> tmp = target - nums[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums.indexOf(tmp) != <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> tmp2 = nums.indexOf(tmp)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (tmp2 === i) <span class=\"keyword\">continue</span> </span><br><span class=\"line\">            result.push(i,tmp2)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> result</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> nums = [<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> target = <span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(twoSum(nums, target))</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;number[]&#125; nums</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;number&#125; target</span></span><br><span class=\"line\"><span class=\"comment\"> * @return &#123;number[]&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> twoSum = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nums, target</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> result = [];</span><br><span class=\"line\">     <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class=\"line\">         <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> j = i+<span class=\"number\">1</span>; j &lt; nums.length; j++)&#123;</span><br><span class=\"line\">             <span class=\"keyword\">if</span> (nums[i] + nums[j] == target) &#123;</span><br><span class=\"line\">                 result.push(i)</span><br><span class=\"line\">                 result.push(j)</span><br><span class=\"line\">                 <span class=\"keyword\">return</span> result</span><br><span class=\"line\">             &#125;</span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">var</span> nums = [<span class=\"number\">2</span>, <span class=\"number\">7</span>, <span class=\"number\">11</span>, <span class=\"number\">15</span>]</span><br><span class=\"line\"><span class=\"keyword\">var</span> target = <span class=\"number\">26</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(twoSum(nums, target))</span><br></pre></td></tr></table></figure>"},{"title":"使用vue指令开发一个实时时间转换指令v-time","date":"2018-12-24T10:04:06.000Z","_content":"#### 时间对象\n 先定义一个与时间有关的对象，将与时间有关的函数封装进去\n\n```javascript\nvar Time = {\n  // 获取当前时间戳\n  getUnix: function () {\n    var date = new Date()\n    return date.getTime()\n  },\n  // 获取今天0点0分0秒的时间戳\n  getTodayUnix: function () {\n    var date = new Date()\n    date.setHours(0)\n    date.setMinutes(0)\n    date.setSeconds(0)\n    date.setMilliseconds(0)\n    return date.getTime()\n  },\n  // 获取今年1月1日0点0分0秒的时间戳\n  getYearUnix: function () {\n    var date = new Date()\n    date.setMonth(0)\n    date.setDate(1)\n    date.setHours(0)\n    date.setMinutes(0)\n    date.setSeconds(0)\n    date.setMilliseconds(0)\n    return date.getTime()\n  },\n  // 获取标准年月日\n  getLastDate: function (time) {\n    var date = new Date(time)\n    var month = date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1\n    var day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate()\n    return date.getFullYear() + '-' + month + '-' + day\n  },\n  // 转换时间\n  getFormatTime: function (timestamp) {\n    var now = this.getUnix() // 获取当前时间戳\n    var today = this.getTodayUnix() // 获取今天0点时间戳\n    var year = this.getYearUnix() // 获取今年0点时间戳\n    var timer = (now - timestamp) / 1000 // 转换为秒级\n    var tip = ''\n    \n    if (timer <= 0) {\n      tip = '刚刚'\n    } else if (Math.floor(timer/60) <= 0) {\n      tip = '刚刚'\n    } else if (timer < 3600) {\n      tip = Math.floor(timer/60) + '分钟前'\n    } else if (timer >= 3600 && (timestamp - today >= 0)) {\n      tip = Math.floor(timer/3600) + '小时前'\n    } else if (timer/86400 <= 31) {\n      tip = Math.ceil(timer/86400) + '天前'\n    } else {\n      tip = this.getLastDate(timestamp)\n    }\n    return tip\n  }\n}\n```\n\n#### 自定义指令v-time\n```javascript\n  Vue.directive('time', {\n    bind: function (el, binding) {\n      el.innerHTML = Time.getFormatTime(binding.value)\n      el.__timeout__ = setInterval(function () {\n        el.innerHTML = Time.getFormatTime(binding.value)\n      }, 60000)\n    },\n    unbind: function () {\n      clearInterval(el.__timeout__)\n      delete el.__timeout__  \n    }\n  })\n```\n定时器el.\\__timeout__每分钟触发一次，在unbind钩子中清除\n\n#### html代码\n```html\n<div id=\"app\">\n    <div class=\"time\" v-time=\"1545719797346\"></div>\n</div>\n```","source":"_posts/使用vue指令开发一个实时时间转换指令v-time.md","raw":"---\ntitle: 使用vue指令开发一个实时时间转换指令v-time\ndate: 2018-12-24 18:04:06\ntags: \n  - vue\ncategories: \n  - js\n  - vue\n---\n#### 时间对象\n 先定义一个与时间有关的对象，将与时间有关的函数封装进去\n\n```javascript\nvar Time = {\n  // 获取当前时间戳\n  getUnix: function () {\n    var date = new Date()\n    return date.getTime()\n  },\n  // 获取今天0点0分0秒的时间戳\n  getTodayUnix: function () {\n    var date = new Date()\n    date.setHours(0)\n    date.setMinutes(0)\n    date.setSeconds(0)\n    date.setMilliseconds(0)\n    return date.getTime()\n  },\n  // 获取今年1月1日0点0分0秒的时间戳\n  getYearUnix: function () {\n    var date = new Date()\n    date.setMonth(0)\n    date.setDate(1)\n    date.setHours(0)\n    date.setMinutes(0)\n    date.setSeconds(0)\n    date.setMilliseconds(0)\n    return date.getTime()\n  },\n  // 获取标准年月日\n  getLastDate: function (time) {\n    var date = new Date(time)\n    var month = date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1\n    var day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate()\n    return date.getFullYear() + '-' + month + '-' + day\n  },\n  // 转换时间\n  getFormatTime: function (timestamp) {\n    var now = this.getUnix() // 获取当前时间戳\n    var today = this.getTodayUnix() // 获取今天0点时间戳\n    var year = this.getYearUnix() // 获取今年0点时间戳\n    var timer = (now - timestamp) / 1000 // 转换为秒级\n    var tip = ''\n    \n    if (timer <= 0) {\n      tip = '刚刚'\n    } else if (Math.floor(timer/60) <= 0) {\n      tip = '刚刚'\n    } else if (timer < 3600) {\n      tip = Math.floor(timer/60) + '分钟前'\n    } else if (timer >= 3600 && (timestamp - today >= 0)) {\n      tip = Math.floor(timer/3600) + '小时前'\n    } else if (timer/86400 <= 31) {\n      tip = Math.ceil(timer/86400) + '天前'\n    } else {\n      tip = this.getLastDate(timestamp)\n    }\n    return tip\n  }\n}\n```\n\n#### 自定义指令v-time\n```javascript\n  Vue.directive('time', {\n    bind: function (el, binding) {\n      el.innerHTML = Time.getFormatTime(binding.value)\n      el.__timeout__ = setInterval(function () {\n        el.innerHTML = Time.getFormatTime(binding.value)\n      }, 60000)\n    },\n    unbind: function () {\n      clearInterval(el.__timeout__)\n      delete el.__timeout__  \n    }\n  })\n```\n定时器el.\\__timeout__每分钟触发一次，在unbind钩子中清除\n\n#### html代码\n```html\n<div id=\"app\">\n    <div class=\"time\" v-time=\"1545719797346\"></div>\n</div>\n```","slug":"使用vue指令开发一个实时时间转换指令v-time","published":1,"updated":"2020-05-03T09:33:18.869Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9qxci4a00070nuragdnxw96","content":"<h4 id=\"时间对象\"><a href=\"#时间对象\" class=\"headerlink\" title=\"时间对象\"></a>时间对象</h4><p> 先定义一个与时间有关的对象，将与时间有关的函数封装进去</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Time = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 获取当前时间戳</span></span><br><span class=\"line\">  getUnix: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> date.getTime()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 获取今天0点0分0秒的时间戳</span></span><br><span class=\"line\">  getTodayUnix: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span><br><span class=\"line\">    date.setHours(<span class=\"number\">0</span>)</span><br><span class=\"line\">    date.setMinutes(<span class=\"number\">0</span>)</span><br><span class=\"line\">    date.setSeconds(<span class=\"number\">0</span>)</span><br><span class=\"line\">    date.setMilliseconds(<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> date.getTime()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 获取今年1月1日0点0分0秒的时间戳</span></span><br><span class=\"line\">  getYearUnix: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span><br><span class=\"line\">    date.setMonth(<span class=\"number\">0</span>)</span><br><span class=\"line\">    date.setDate(<span class=\"number\">1</span>)</span><br><span class=\"line\">    date.setHours(<span class=\"number\">0</span>)</span><br><span class=\"line\">    date.setMinutes(<span class=\"number\">0</span>)</span><br><span class=\"line\">    date.setSeconds(<span class=\"number\">0</span>)</span><br><span class=\"line\">    date.setMilliseconds(<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> date.getTime()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 获取标准年月日</span></span><br><span class=\"line\">  getLastDate: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">time</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(time)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> month = date.getMonth() + <span class=\"number\">1</span> &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + (date.getMonth() + <span class=\"number\">1</span>) : date.getMonth() + <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> day = date.getDate() &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + date.getDate() : date.getDate()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> date.getFullYear() + <span class=\"string\">'-'</span> + month + <span class=\"string\">'-'</span> + day</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 转换时间</span></span><br><span class=\"line\">  getFormatTime: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">timestamp</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> now = <span class=\"keyword\">this</span>.getUnix() <span class=\"comment\">// 获取当前时间戳</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> today = <span class=\"keyword\">this</span>.getTodayUnix() <span class=\"comment\">// 获取今天0点时间戳</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> year = <span class=\"keyword\">this</span>.getYearUnix() <span class=\"comment\">// 获取今年0点时间戳</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> timer = (now - timestamp) / <span class=\"number\">1000</span> <span class=\"comment\">// 转换为秒级</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> tip = <span class=\"string\">''</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (timer &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      tip = <span class=\"string\">'刚刚'</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">Math</span>.floor(timer/<span class=\"number\">60</span>) &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      tip = <span class=\"string\">'刚刚'</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (timer &lt; <span class=\"number\">3600</span>) &#123;</span><br><span class=\"line\">      tip = <span class=\"built_in\">Math</span>.floor(timer/<span class=\"number\">60</span>) + <span class=\"string\">'分钟前'</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (timer &gt;= <span class=\"number\">3600</span> &amp;&amp; (timestamp - today &gt;= <span class=\"number\">0</span>)) &#123;</span><br><span class=\"line\">      tip = <span class=\"built_in\">Math</span>.floor(timer/<span class=\"number\">3600</span>) + <span class=\"string\">'小时前'</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (timer/<span class=\"number\">86400</span> &lt;= <span class=\"number\">31</span>) &#123;</span><br><span class=\"line\">      tip = <span class=\"built_in\">Math</span>.ceil(timer/<span class=\"number\">86400</span>) + <span class=\"string\">'天前'</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      tip = <span class=\"keyword\">this</span>.getLastDate(timestamp)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> tip</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"自定义指令v-time\"><a href=\"#自定义指令v-time\" class=\"headerlink\" title=\"自定义指令v-time\"></a>自定义指令v-time</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.directive(<span class=\"string\">'time'</span>, &#123;</span><br><span class=\"line\">  bind: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">el, binding</span>) </span>&#123;</span><br><span class=\"line\">    el.innerHTML = Time.getFormatTime(binding.value)</span><br><span class=\"line\">    el.__timeout__ = setInterval(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      el.innerHTML = Time.getFormatTime(binding.value)</span><br><span class=\"line\">    &#125;, <span class=\"number\">60000</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  unbind: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    clearInterval(el.__timeout__)</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> el.__timeout__  </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>定时器el.__timeout__每分钟触发一次，在unbind钩子中清除</p>\n<h4 id=\"html代码\"><a href=\"#html代码\" class=\"headerlink\" title=\"html代码\"></a>html代码</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"time\"</span> <span class=\"attr\">v-time</span>=<span class=\"string\">\"1545719797346\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"时间对象\"><a href=\"#时间对象\" class=\"headerlink\" title=\"时间对象\"></a>时间对象</h4><p> 先定义一个与时间有关的对象，将与时间有关的函数封装进去</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> Time = &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 获取当前时间戳</span></span><br><span class=\"line\">  getUnix: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> date.getTime()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 获取今天0点0分0秒的时间戳</span></span><br><span class=\"line\">  getTodayUnix: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span><br><span class=\"line\">    date.setHours(<span class=\"number\">0</span>)</span><br><span class=\"line\">    date.setMinutes(<span class=\"number\">0</span>)</span><br><span class=\"line\">    date.setSeconds(<span class=\"number\">0</span>)</span><br><span class=\"line\">    date.setMilliseconds(<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> date.getTime()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 获取今年1月1日0点0分0秒的时间戳</span></span><br><span class=\"line\">  getYearUnix: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span><br><span class=\"line\">    date.setMonth(<span class=\"number\">0</span>)</span><br><span class=\"line\">    date.setDate(<span class=\"number\">1</span>)</span><br><span class=\"line\">    date.setHours(<span class=\"number\">0</span>)</span><br><span class=\"line\">    date.setMinutes(<span class=\"number\">0</span>)</span><br><span class=\"line\">    date.setSeconds(<span class=\"number\">0</span>)</span><br><span class=\"line\">    date.setMilliseconds(<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> date.getTime()</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 获取标准年月日</span></span><br><span class=\"line\">  getLastDate: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">time</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> date = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(time)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> month = date.getMonth() + <span class=\"number\">1</span> &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + (date.getMonth() + <span class=\"number\">1</span>) : date.getMonth() + <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> day = date.getDate() &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + date.getDate() : date.getDate()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> date.getFullYear() + <span class=\"string\">'-'</span> + month + <span class=\"string\">'-'</span> + day</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"comment\">// 转换时间</span></span><br><span class=\"line\">  getFormatTime: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">timestamp</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> now = <span class=\"keyword\">this</span>.getUnix() <span class=\"comment\">// 获取当前时间戳</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> today = <span class=\"keyword\">this</span>.getTodayUnix() <span class=\"comment\">// 获取今天0点时间戳</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> year = <span class=\"keyword\">this</span>.getYearUnix() <span class=\"comment\">// 获取今年0点时间戳</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> timer = (now - timestamp) / <span class=\"number\">1000</span> <span class=\"comment\">// 转换为秒级</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> tip = <span class=\"string\">''</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (timer &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      tip = <span class=\"string\">'刚刚'</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">Math</span>.floor(timer/<span class=\"number\">60</span>) &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      tip = <span class=\"string\">'刚刚'</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (timer &lt; <span class=\"number\">3600</span>) &#123;</span><br><span class=\"line\">      tip = <span class=\"built_in\">Math</span>.floor(timer/<span class=\"number\">60</span>) + <span class=\"string\">'分钟前'</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (timer &gt;= <span class=\"number\">3600</span> &amp;&amp; (timestamp - today &gt;= <span class=\"number\">0</span>)) &#123;</span><br><span class=\"line\">      tip = <span class=\"built_in\">Math</span>.floor(timer/<span class=\"number\">3600</span>) + <span class=\"string\">'小时前'</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (timer/<span class=\"number\">86400</span> &lt;= <span class=\"number\">31</span>) &#123;</span><br><span class=\"line\">      tip = <span class=\"built_in\">Math</span>.ceil(timer/<span class=\"number\">86400</span>) + <span class=\"string\">'天前'</span></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      tip = <span class=\"keyword\">this</span>.getLastDate(timestamp)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> tip</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"自定义指令v-time\"><a href=\"#自定义指令v-time\" class=\"headerlink\" title=\"自定义指令v-time\"></a>自定义指令v-time</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Vue.directive(<span class=\"string\">'time'</span>, &#123;</span><br><span class=\"line\">  bind: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">el, binding</span>) </span>&#123;</span><br><span class=\"line\">    el.innerHTML = Time.getFormatTime(binding.value)</span><br><span class=\"line\">    el.__timeout__ = setInterval(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">      el.innerHTML = Time.getFormatTime(binding.value)</span><br><span class=\"line\">    &#125;, <span class=\"number\">60000</span>)</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  unbind: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    clearInterval(el.__timeout__)</span><br><span class=\"line\">    <span class=\"keyword\">delete</span> el.__timeout__  </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<p>定时器el.__timeout__每分钟触发一次，在unbind钩子中清除</p>\n<h4 id=\"html代码\"><a href=\"#html代码\" class=\"headerlink\" title=\"html代码\"></a>html代码</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"app\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"time\"</span> <span class=\"attr\">v-time</span>=<span class=\"string\">\"1545719797346\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"学习日记es6-polyfill","date":"2018-02-15T17:35:36.000Z","_content":"### 浮点数误差\n对于javascript的数字来说，“机器精度”的值通常为2^-52\nES6开始，该值定义在Number.EPSILON中，我们可以拿来直接用，也可以为ES6之前的版本写polyfill\n```\nif(  !Number.EPSILON  ){\nNumber.EPSILON  =  Math.pow(2,-52);\n}\n```\n可以用Number.EPSILON来比较两个数字是否相等（在制定误差范围内）\n```\nfunction numbersCloseEnoughToEqual(  n1,  n2 ){\nreturn Math.abs(  n1  - n2 )  <  Number.EPSILON ;\n}\n```","source":"_posts/学习日记es6-polyfill.md","raw":"---\ntitle: 学习日记es6-polyfill\ndate: 2018-02-16 01:35:36\ntags: \n\t- es6\n\t- javascript\ncategories: \n\t- es6\n\t- 学习日记\n---\n### 浮点数误差\n对于javascript的数字来说，“机器精度”的值通常为2^-52\nES6开始，该值定义在Number.EPSILON中，我们可以拿来直接用，也可以为ES6之前的版本写polyfill\n```\nif(  !Number.EPSILON  ){\nNumber.EPSILON  =  Math.pow(2,-52);\n}\n```\n可以用Number.EPSILON来比较两个数字是否相等（在制定误差范围内）\n```\nfunction numbersCloseEnoughToEqual(  n1,  n2 ){\nreturn Math.abs(  n1  - n2 )  <  Number.EPSILON ;\n}\n```","slug":"学习日记es6-polyfill","published":1,"updated":"2020-05-03T09:33:18.870Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9qxci4b00080nurmigf6zxo","content":"<h3 id=\"浮点数误差\"><a href=\"#浮点数误差\" class=\"headerlink\" title=\"浮点数误差\"></a>浮点数误差</h3><p>对于javascript的数字来说，“机器精度”的值通常为2^-52<br>ES6开始，该值定义在Number.EPSILON中，我们可以拿来直接用，也可以为ES6之前的版本写polyfill<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(  !Number.EPSILON  )&#123;</span><br><span class=\"line\">Number.EPSILON  =  Math.pow(2,-52);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>可以用Number.EPSILON来比较两个数字是否相等（在制定误差范围内）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function numbersCloseEnoughToEqual(  n1,  n2 )&#123;</span><br><span class=\"line\">return Math.abs(  n1  - n2 )  &lt;  Number.EPSILON ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"浮点数误差\"><a href=\"#浮点数误差\" class=\"headerlink\" title=\"浮点数误差\"></a>浮点数误差</h3><p>对于javascript的数字来说，“机器精度”的值通常为2^-52<br>ES6开始，该值定义在Number.EPSILON中，我们可以拿来直接用，也可以为ES6之前的版本写polyfill<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(  !Number.EPSILON  )&#123;</span><br><span class=\"line\">Number.EPSILON  =  Math.pow(2,-52);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>可以用Number.EPSILON来比较两个数字是否相等（在制定误差范围内）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function numbersCloseEnoughToEqual(  n1,  n2 )&#123;</span><br><span class=\"line\">return Math.abs(  n1  - n2 )  &lt;  Number.EPSILON ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"学习日记css小锦囊-持续更新","date":"2018-04-01T11:45:09.000Z","_content":"#### css3 截取前几行内容并且垂直居中显示\n\t```css\n\t{\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%,-50%);\n\twidth: 100%;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\tdisplay: -webkit-box;\n\t-webkit-line-clamp: 2;\n\t-webkit-box-orient: vertical;\n\t}\n\n\t/* vue打包会丢失box-orient属性，需要特殊处理 */\n\t/*! autoprefixer: off */\n\t-webkit-box-orient: vertical;\n\t/* autoprefixer: on */\n\t```\n\n\n\n#### input placeholder修改颜色\n\t```css\n\t::-webkit-input-placeholder { /* WebKit browsers */ \n\tcolor: #999; \n\t} \n\t:-moz-placeholder { /* Mozilla Firefox 4 to 18 */ \n\tcolor: #999; \n\t} \n\t::-moz-placeholder { /* Mozilla Firefox 19+ */ \n\tcolor: #999; \n\t} \n\t:-ms-input-placeholder { /* Internet Explorer 10+ */ \n\tcolor: #999; \n\t} \n\t```\n#### 手动写三角\n\t```css\n\t{\n    width: 0px;\n    height: 0;\n    border: .11rem solid transparent;\n    border-top: .15rem solid #8D3A3A;\n    display: block;\n\t}\n\t```\n","source":"_posts/学习日记css小锦囊-持续更新.md","raw":"---\ntitle: 学习日记css小锦囊-持续更新\ndate: 2018-04-01 19:45:09\ntags: \n\t- css3\ncategories: \n\t- css\n\t- css3\n\t- 学习日记\n---\n#### css3 截取前几行内容并且垂直居中显示\n\t```css\n\t{\n\tposition: absolute;\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%,-50%);\n\twidth: 100%;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\tdisplay: -webkit-box;\n\t-webkit-line-clamp: 2;\n\t-webkit-box-orient: vertical;\n\t}\n\n\t/* vue打包会丢失box-orient属性，需要特殊处理 */\n\t/*! autoprefixer: off */\n\t-webkit-box-orient: vertical;\n\t/* autoprefixer: on */\n\t```\n\n\n\n#### input placeholder修改颜色\n\t```css\n\t::-webkit-input-placeholder { /* WebKit browsers */ \n\tcolor: #999; \n\t} \n\t:-moz-placeholder { /* Mozilla Firefox 4 to 18 */ \n\tcolor: #999; \n\t} \n\t::-moz-placeholder { /* Mozilla Firefox 19+ */ \n\tcolor: #999; \n\t} \n\t:-ms-input-placeholder { /* Internet Explorer 10+ */ \n\tcolor: #999; \n\t} \n\t```\n#### 手动写三角\n\t```css\n\t{\n    width: 0px;\n    height: 0;\n    border: .11rem solid transparent;\n    border-top: .15rem solid #8D3A3A;\n    display: block;\n\t}\n\t```\n","slug":"学习日记css小锦囊-持续更新","published":1,"updated":"2020-05-03T09:33:18.869Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9qxci4b00090nurth21t983","content":"<h4 id=\"css3-截取前几行内容并且垂直居中显示\"><a href=\"#css3-截取前几行内容并且垂直居中显示\" class=\"headerlink\" title=\"css3 截取前几行内容并且垂直居中显示\"></a>css3 截取前几行内容并且垂直居中显示</h4><pre><code><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"><span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\"><span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\"><span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-50%,-50%);</span><br><span class=\"line\"><span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\"><span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\"><span class=\"attribute\">text-overflow</span>: ellipsis;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: -webkit-box;</span><br><span class=\"line\"><span class=\"attribute\">-webkit-line-clamp</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"attribute\">-webkit-box-orient</span>: vertical;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* vue打包会丢失box-orient属性，需要特殊处理 */</span></span><br><span class=\"line\"><span class=\"comment\">/*! autoprefixer: off */</span></span><br><span class=\"line\"><span class=\"selector-tag\">-webkit-box-orient</span>: <span class=\"selector-tag\">vertical</span>;</span><br><span class=\"line\"><span class=\"comment\">/* autoprefixer: on */</span></span><br></pre></td></tr></table></figure>\n</code></pre><h4 id=\"input-placeholder修改颜色\"><a href=\"#input-placeholder修改颜色\" class=\"headerlink\" title=\"input placeholder修改颜色\"></a>input placeholder修改颜色</h4><pre><code><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-pseudo\">::-webkit-input-placeholder</span> &#123; <span class=\"comment\">/* WebKit browsers */</span> </span><br><span class=\"line\"><span class=\"attribute\">color</span>: <span class=\"number\">#999</span>; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"selector-pseudo\">:-moz-placeholder</span> &#123; <span class=\"comment\">/* Mozilla Firefox 4 to 18 */</span> </span><br><span class=\"line\"><span class=\"attribute\">color</span>: <span class=\"number\">#999</span>; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"selector-pseudo\">::-moz-placeholder</span> &#123; <span class=\"comment\">/* Mozilla Firefox 19+ */</span> </span><br><span class=\"line\"><span class=\"attribute\">color</span>: <span class=\"number\">#999</span>; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"selector-pseudo\">:-ms-input-placeholder</span> &#123; <span class=\"comment\">/* Internet Explorer 10+ */</span> </span><br><span class=\"line\"><span class=\"attribute\">color</span>: <span class=\"number\">#999</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre><h4 id=\"手动写三角\"><a href=\"#手动写三角\" class=\"headerlink\" title=\"手动写三角\"></a>手动写三角</h4><pre><code><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"attribute\">width</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">   <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">   <span class=\"attribute\">border</span>: .<span class=\"number\">11rem</span> solid transparent;</span><br><span class=\"line\">   <span class=\"attribute\">border-top</span>: .<span class=\"number\">15rem</span> solid <span class=\"number\">#8D3A3A</span>;</span><br><span class=\"line\">   <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"css3-截取前几行内容并且垂直居中显示\"><a href=\"#css3-截取前几行内容并且垂直居中显示\" class=\"headerlink\" title=\"css3 截取前几行内容并且垂直居中显示\"></a>css3 截取前几行内容并且垂直居中显示</h4><pre><code><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\"><span class=\"attribute\">left</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\"><span class=\"attribute\">top</span>: <span class=\"number\">50%</span>;</span><br><span class=\"line\"><span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-50%,-50%);</span><br><span class=\"line\"><span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\"><span class=\"attribute\">overflow</span>: hidden;</span><br><span class=\"line\"><span class=\"attribute\">text-overflow</span>: ellipsis;</span><br><span class=\"line\"><span class=\"attribute\">display</span>: -webkit-box;</span><br><span class=\"line\"><span class=\"attribute\">-webkit-line-clamp</span>: <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"attribute\">-webkit-box-orient</span>: vertical;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* vue打包会丢失box-orient属性，需要特殊处理 */</span></span><br><span class=\"line\"><span class=\"comment\">/*! autoprefixer: off */</span></span><br><span class=\"line\"><span class=\"selector-tag\">-webkit-box-orient</span>: <span class=\"selector-tag\">vertical</span>;</span><br><span class=\"line\"><span class=\"comment\">/* autoprefixer: on */</span></span><br></pre></td></tr></table></figure>\n</code></pre><h4 id=\"input-placeholder修改颜色\"><a href=\"#input-placeholder修改颜色\" class=\"headerlink\" title=\"input placeholder修改颜色\"></a>input placeholder修改颜色</h4><pre><code><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-pseudo\">::-webkit-input-placeholder</span> &#123; <span class=\"comment\">/* WebKit browsers */</span> </span><br><span class=\"line\"><span class=\"attribute\">color</span>: <span class=\"number\">#999</span>; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"selector-pseudo\">:-moz-placeholder</span> &#123; <span class=\"comment\">/* Mozilla Firefox 4 to 18 */</span> </span><br><span class=\"line\"><span class=\"attribute\">color</span>: <span class=\"number\">#999</span>; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"selector-pseudo\">::-moz-placeholder</span> &#123; <span class=\"comment\">/* Mozilla Firefox 19+ */</span> </span><br><span class=\"line\"><span class=\"attribute\">color</span>: <span class=\"number\">#999</span>; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"selector-pseudo\">:-ms-input-placeholder</span> &#123; <span class=\"comment\">/* Internet Explorer 10+ */</span> </span><br><span class=\"line\"><span class=\"attribute\">color</span>: <span class=\"number\">#999</span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre><h4 id=\"手动写三角\"><a href=\"#手动写三角\" class=\"headerlink\" title=\"手动写三角\"></a>手动写三角</h4><pre><code><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"attribute\">width</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">   <span class=\"attribute\">height</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">   <span class=\"attribute\">border</span>: .<span class=\"number\">11rem</span> solid transparent;</span><br><span class=\"line\">   <span class=\"attribute\">border-top</span>: .<span class=\"number\">15rem</span> solid <span class=\"number\">#8D3A3A</span>;</span><br><span class=\"line\">   <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre>"},{"title":"学习日记js小锦囊-持续更新","date":"2018-05-02T14:15:32.000Z","_content":"#### 两中数字格式化的方法\n> 数字格式化一 e.g. 23422039->2342.2W\n\t```javascript\n\t/**\n   * 2342.2W\n   * @param {number} count 需要格式化的数字\n   */\n  function CounFormat (count) {\n    var countString = count.toString()\n    var tmp = ''\n    var result = ''\n    if (countString.length >= 5) {\n      tmp = countString.slice(-4, -3) === '0' ? '' : countString.slice(-4, -3)\n      if (tmp.slice(tmp.length + 1, 1) === 0) {\n        result = countString.slice(0, -4).concat('w')\n      } else {\n        tmp === '' ? result = countString.slice(0, -4).concat('w') : result = countString.slice(0, -4).concat('.' + tmp + 'w')\n      }\n      return result\n    } else {\n      return count\n    }\n  }\n\t```\n\n\n\n> 数字格式化二 e.g. 23232222->23,232,222\n\t```javascript\n\t/**\n   * 千位符数字格式化23,232,222\n   * @param {number} num 需要格式化的数字\n   * @param {int} precision 保留小数位\n   * @param {String} separator 分隔符\n   */\n  function CounFormat2 (num, precision, separator) {\n    var parts\n    if (!isNaN(parseFloat(num)) && isFinite(num)) {\n      num = Number(num)\n      num = (typeof precision !== 'undefined' ? num.toFixed(precision) : num).toString()\n      parts = num.split('.')\n      parts[0] = parts[0].toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + (separator || ','))\n      return parts.join('.')\n    }\n    return NaN\n  }\n\t```\n\t\n#### 时间格式化的方法\t\n> 时间格式化 e.g. 1245278300->2009-6-18 06:38\n\t```javascript\n  /**\n   * 时间格式化 2018-09-09 12:02:22\n   * @param {number} timespan 时间戳\n   */\n  function formatMsgTime (timespan) {\n    timespan = timespan * 1000\n    var dateTime = new Date(timespan)\n    var year = dateTime.getFullYear()\n    var month = dateTime.getMonth() + 1\n    var day = dateTime.getDate()\n    var hour = dateTime.getHours() ? (dateTime.getHours() < 10 ? '0' + dateTime.getHours() : dateTime.getHours()) : '00'\n    var minute = dateTime.getMinutes() ? (dateTime.getMinutes() < 10 ? '0' + dateTime.getMinutes() : dateTime.getMinutes()) : '00'\n    // var second = dateTime.getSeconds()\n    var now = new Date()\n    // typescript转换写法\n    var nowNew = now.getTime()\n    // var nowNew = Date.parse(now.toDateString())\n    var milliseconds = 0\n    var timeSpanStr\n    milliseconds = nowNew - timespan\n    if (milliseconds <= 1000 * 60 * 1) {\n      timeSpanStr = '刚刚'\n    } else if (1000 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60) {\n      timeSpanStr = Math.round((milliseconds / (1000 * 60))) + '分钟前'\n    } else if (1000 * 60 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24) {\n      timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60)) + '小时前'\n    } else if (1000 * 60 * 60 * 24 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24 * 15) {\n      timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60 * 24)) + '天前'\n    } else if (milliseconds > 1000 * 60 * 60 * 24 * 15 && year === now.getFullYear()) {\n      timeSpanStr = month + '-' + day + ' ' + hour + ':' + minute\n    } else {\n      timeSpanStr = year + '-' + month + '-' + day + ' ' + hour + ':' + minute\n    }\n    return timeSpanStr\n  }\n\t```\n\n#### 视频时长格式化\n```javascript\n/**\n   * 视频时长格式化\n   * @param {number} seconds\n   */\n  function secondsToHour (seconds) {\n    var h = parseInt(seconds / 3600)\n    var m = parseInt((seconds % 3600) / 60)\n    var s = parseInt(seconds % 60)\n    h = h ? h + ':' : ''\n    m = m ? (m < 10 ? '0' + m + ':' : m + ':') : '00:'\n    s = s ? (s < 10 ? '0' + s : s) : '00'\n    return h + m + s\n  }\n```\n\n#### 文案截取\n```javascript\n/**\n   * 文案截取\n   * @param {number} num 截取个数\n   * @param {String} string 拼接字符串\n   * @param {String} symbol 拼接字符串\n   * stringLen(\"asdsfdfsdf\", 80, \"...\")\n   */\n  function stringLen (string, num, symbol) {\n    var len = 0\n    for (var i = 0; i < string.length; i++) {\n      if (len >= num) {\n        return string.slice(0, i) + symbol\n      }\n      if (string.charCodeAt(i) > 127 || string.charCodeAt(i) === 94) {\n        len++\n      } else {\n        len += 1 / 2\n      }\n    }\n    return string\n  }\n```\n\n#### 对比版本号\n```javascript\n/**\n   * 对比版本号，大于：true 小于：false\n   * @param {String} v1 2.1.1\n   * @param {String} v2 2.2.2\n   */\n  function versions(v1, v2) {\n    var arr1 = v1.replace(/[-_]/g, '.').split('.')\n    var arr2 = v2.replace(/[-_]/g, '.').split('.')\n    var len = Math.max(arr1.length, arr2.length)\n    for (var i = 0; i < len; i++) {\n      arr1[i] = !arr1[i] ? 0 : arr1[i]\n      arr2[i] = !arr2[i] ? 0 : arr2[i]\n      if (parseInt(arr1[i]) > parseInt(arr2[i])) {\n        return true\n      } else if (parseInt(arr1[i]) < parseInt(arr2[i])) {\n        return false\n      }\n    }\n    return true\n  }\n```\n\n#### 倒计时\n```javascript\n/**\n   * 倒计时\n   * @param {number} msd 截止时间\n   */\n  function MillisecondToDate (msd) {\n    var now = new Date().getTime()\n    var time = parseFloat(msd - now) / 1000\n    if (time !== null && time !== '') {\n      var timeDay = parseInt(time / 86400.0)\n      var timeH = parseInt(time / 3600.0 - 24 * timeDay)\n      var timeM = parseInt((parseFloat(time / 3600.0) - parseInt(time / 3600.0)) * 60)\n      var timeS = parseInt((parseFloat((parseFloat(time / 3600.0) - parseInt(time / 3600.0)) * 60) - parseInt((parseFloat(time / 3600.0) - parseInt(time / 3600.0)) * 60)) * 60)\n      timeDay = timeDay < 10 ? '0' + timeDay : timeDay\n      timeH = timeH < 10 ? '0' + timeH : timeH\n      timeM = timeM < 10 ? '0' + timeM : timeM\n      timeS = timeS < 10 ? '0' + timeS : timeS\n    }\n    return {\n      'day': timeDay.toString(),\n      'hour': timeH.toString(),\n      'minute': timeM.toString(),\n      'second': timeS.toString()\n    }\n  }\n```","source":"_posts/学习日记js小锦囊-持续更新.md","raw":"---\ntitle: 学习日记js小锦囊-持续更新\ndate: 2018-05-02 22:15:32\ntags: js\ncategories: \n  - js\n  - 学习日记\n---\n#### 两中数字格式化的方法\n> 数字格式化一 e.g. 23422039->2342.2W\n\t```javascript\n\t/**\n   * 2342.2W\n   * @param {number} count 需要格式化的数字\n   */\n  function CounFormat (count) {\n    var countString = count.toString()\n    var tmp = ''\n    var result = ''\n    if (countString.length >= 5) {\n      tmp = countString.slice(-4, -3) === '0' ? '' : countString.slice(-4, -3)\n      if (tmp.slice(tmp.length + 1, 1) === 0) {\n        result = countString.slice(0, -4).concat('w')\n      } else {\n        tmp === '' ? result = countString.slice(0, -4).concat('w') : result = countString.slice(0, -4).concat('.' + tmp + 'w')\n      }\n      return result\n    } else {\n      return count\n    }\n  }\n\t```\n\n\n\n> 数字格式化二 e.g. 23232222->23,232,222\n\t```javascript\n\t/**\n   * 千位符数字格式化23,232,222\n   * @param {number} num 需要格式化的数字\n   * @param {int} precision 保留小数位\n   * @param {String} separator 分隔符\n   */\n  function CounFormat2 (num, precision, separator) {\n    var parts\n    if (!isNaN(parseFloat(num)) && isFinite(num)) {\n      num = Number(num)\n      num = (typeof precision !== 'undefined' ? num.toFixed(precision) : num).toString()\n      parts = num.split('.')\n      parts[0] = parts[0].toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1' + (separator || ','))\n      return parts.join('.')\n    }\n    return NaN\n  }\n\t```\n\t\n#### 时间格式化的方法\t\n> 时间格式化 e.g. 1245278300->2009-6-18 06:38\n\t```javascript\n  /**\n   * 时间格式化 2018-09-09 12:02:22\n   * @param {number} timespan 时间戳\n   */\n  function formatMsgTime (timespan) {\n    timespan = timespan * 1000\n    var dateTime = new Date(timespan)\n    var year = dateTime.getFullYear()\n    var month = dateTime.getMonth() + 1\n    var day = dateTime.getDate()\n    var hour = dateTime.getHours() ? (dateTime.getHours() < 10 ? '0' + dateTime.getHours() : dateTime.getHours()) : '00'\n    var minute = dateTime.getMinutes() ? (dateTime.getMinutes() < 10 ? '0' + dateTime.getMinutes() : dateTime.getMinutes()) : '00'\n    // var second = dateTime.getSeconds()\n    var now = new Date()\n    // typescript转换写法\n    var nowNew = now.getTime()\n    // var nowNew = Date.parse(now.toDateString())\n    var milliseconds = 0\n    var timeSpanStr\n    milliseconds = nowNew - timespan\n    if (milliseconds <= 1000 * 60 * 1) {\n      timeSpanStr = '刚刚'\n    } else if (1000 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60) {\n      timeSpanStr = Math.round((milliseconds / (1000 * 60))) + '分钟前'\n    } else if (1000 * 60 * 60 * 1 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24) {\n      timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60)) + '小时前'\n    } else if (1000 * 60 * 60 * 24 < milliseconds && milliseconds <= 1000 * 60 * 60 * 24 * 15) {\n      timeSpanStr = Math.round(milliseconds / (1000 * 60 * 60 * 24)) + '天前'\n    } else if (milliseconds > 1000 * 60 * 60 * 24 * 15 && year === now.getFullYear()) {\n      timeSpanStr = month + '-' + day + ' ' + hour + ':' + minute\n    } else {\n      timeSpanStr = year + '-' + month + '-' + day + ' ' + hour + ':' + minute\n    }\n    return timeSpanStr\n  }\n\t```\n\n#### 视频时长格式化\n```javascript\n/**\n   * 视频时长格式化\n   * @param {number} seconds\n   */\n  function secondsToHour (seconds) {\n    var h = parseInt(seconds / 3600)\n    var m = parseInt((seconds % 3600) / 60)\n    var s = parseInt(seconds % 60)\n    h = h ? h + ':' : ''\n    m = m ? (m < 10 ? '0' + m + ':' : m + ':') : '00:'\n    s = s ? (s < 10 ? '0' + s : s) : '00'\n    return h + m + s\n  }\n```\n\n#### 文案截取\n```javascript\n/**\n   * 文案截取\n   * @param {number} num 截取个数\n   * @param {String} string 拼接字符串\n   * @param {String} symbol 拼接字符串\n   * stringLen(\"asdsfdfsdf\", 80, \"...\")\n   */\n  function stringLen (string, num, symbol) {\n    var len = 0\n    for (var i = 0; i < string.length; i++) {\n      if (len >= num) {\n        return string.slice(0, i) + symbol\n      }\n      if (string.charCodeAt(i) > 127 || string.charCodeAt(i) === 94) {\n        len++\n      } else {\n        len += 1 / 2\n      }\n    }\n    return string\n  }\n```\n\n#### 对比版本号\n```javascript\n/**\n   * 对比版本号，大于：true 小于：false\n   * @param {String} v1 2.1.1\n   * @param {String} v2 2.2.2\n   */\n  function versions(v1, v2) {\n    var arr1 = v1.replace(/[-_]/g, '.').split('.')\n    var arr2 = v2.replace(/[-_]/g, '.').split('.')\n    var len = Math.max(arr1.length, arr2.length)\n    for (var i = 0; i < len; i++) {\n      arr1[i] = !arr1[i] ? 0 : arr1[i]\n      arr2[i] = !arr2[i] ? 0 : arr2[i]\n      if (parseInt(arr1[i]) > parseInt(arr2[i])) {\n        return true\n      } else if (parseInt(arr1[i]) < parseInt(arr2[i])) {\n        return false\n      }\n    }\n    return true\n  }\n```\n\n#### 倒计时\n```javascript\n/**\n   * 倒计时\n   * @param {number} msd 截止时间\n   */\n  function MillisecondToDate (msd) {\n    var now = new Date().getTime()\n    var time = parseFloat(msd - now) / 1000\n    if (time !== null && time !== '') {\n      var timeDay = parseInt(time / 86400.0)\n      var timeH = parseInt(time / 3600.0 - 24 * timeDay)\n      var timeM = parseInt((parseFloat(time / 3600.0) - parseInt(time / 3600.0)) * 60)\n      var timeS = parseInt((parseFloat((parseFloat(time / 3600.0) - parseInt(time / 3600.0)) * 60) - parseInt((parseFloat(time / 3600.0) - parseInt(time / 3600.0)) * 60)) * 60)\n      timeDay = timeDay < 10 ? '0' + timeDay : timeDay\n      timeH = timeH < 10 ? '0' + timeH : timeH\n      timeM = timeM < 10 ? '0' + timeM : timeM\n      timeS = timeS < 10 ? '0' + timeS : timeS\n    }\n    return {\n      'day': timeDay.toString(),\n      'hour': timeH.toString(),\n      'minute': timeM.toString(),\n      'second': timeS.toString()\n    }\n  }\n```","slug":"学习日记js小锦囊-持续更新","published":1,"updated":"2020-05-03T09:33:18.870Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9qxci4c000a0nur2qge527m","content":"<h4 id=\"两中数字格式化的方法\"><a href=\"#两中数字格式化的方法\" class=\"headerlink\" title=\"两中数字格式化的方法\"></a>两中数字格式化的方法</h4><blockquote>\n<p>数字格式化一 e.g. 23422039-&gt;2342.2W<br>    <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 2342.2W</span></span><br><span class=\"line\"><span class=\"comment\">  * @param &#123;number&#125; count 需要格式化的数字</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">CounFormat</span> (<span class=\"params\">count</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> countString = count.toString()</span><br><span class=\"line\">   <span class=\"keyword\">var</span> tmp = <span class=\"string\">''</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> result = <span class=\"string\">''</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (countString.length &gt;= <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">     tmp = countString.slice(<span class=\"number\">-4</span>, <span class=\"number\">-3</span>) === <span class=\"string\">'0'</span> ? <span class=\"string\">''</span> : countString.slice(<span class=\"number\">-4</span>, <span class=\"number\">-3</span>)</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (tmp.slice(tmp.length + <span class=\"number\">1</span>, <span class=\"number\">1</span>) === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">       result = countString.slice(<span class=\"number\">0</span>, <span class=\"number\">-4</span>).concat(<span class=\"string\">'w'</span>)</span><br><span class=\"line\">     &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">       tmp === <span class=\"string\">''</span> ? result = countString.slice(<span class=\"number\">0</span>, <span class=\"number\">-4</span>).concat(<span class=\"string\">'w'</span>) : result = countString.slice(<span class=\"number\">0</span>, <span class=\"number\">-4</span>).concat(<span class=\"string\">'.'</span> + tmp + <span class=\"string\">'w'</span>)</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> result</span><br><span class=\"line\">   &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> count</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n<p>数字格式化二 e.g. 23232222-&gt;23,232,222<br>    <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 千位符数字格式化23,232,222</span></span><br><span class=\"line\"><span class=\"comment\">  * @param &#123;number&#125; num 需要格式化的数字</span></span><br><span class=\"line\"><span class=\"comment\">  * @param &#123;int&#125; precision 保留小数位</span></span><br><span class=\"line\"><span class=\"comment\">  * @param &#123;String&#125; separator 分隔符</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">CounFormat2</span> (<span class=\"params\">num, precision, separator</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> parts</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!<span class=\"built_in\">isNaN</span>(<span class=\"built_in\">parseFloat</span>(num)) &amp;&amp; <span class=\"built_in\">isFinite</span>(num)) &#123;</span><br><span class=\"line\">     num = <span class=\"built_in\">Number</span>(num)</span><br><span class=\"line\">     num = (<span class=\"keyword\">typeof</span> precision !== <span class=\"string\">'undefined'</span> ? num.toFixed(precision) : num).toString()</span><br><span class=\"line\">     parts = num.split(<span class=\"string\">'.'</span>)</span><br><span class=\"line\">     parts[<span class=\"number\">0</span>] = parts[<span class=\"number\">0</span>].toString().replace(<span class=\"regexp\">/(\\d)(?=(\\d&#123;3&#125;)+(?!\\d))/g</span>, <span class=\"string\">'$1'</span> + (separator || <span class=\"string\">','</span>))</span><br><span class=\"line\">     <span class=\"keyword\">return</span> parts.join(<span class=\"string\">'.'</span>)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"literal\">NaN</span></span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"时间格式化的方法\"><a href=\"#时间格式化的方法\" class=\"headerlink\" title=\"时间格式化的方法\"></a>时间格式化的方法</h4><blockquote>\n<p>时间格式化 e.g. 1245278300-&gt;2009-6-18 06:38<br>    <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 时间格式化 2018-09-09 12:02:22</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;number&#125; timespan 时间戳</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">formatMsgTime</span> (<span class=\"params\">timespan</span>) </span>&#123;</span><br><span class=\"line\">  timespan = timespan * <span class=\"number\">1000</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> dateTime = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(timespan)</span><br><span class=\"line\">  <span class=\"keyword\">var</span> year = dateTime.getFullYear()</span><br><span class=\"line\">  <span class=\"keyword\">var</span> month = dateTime.getMonth() + <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> day = dateTime.getDate()</span><br><span class=\"line\">  <span class=\"keyword\">var</span> hour = dateTime.getHours() ? (dateTime.getHours() &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + dateTime.getHours() : dateTime.getHours()) : <span class=\"string\">'00'</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> minute = dateTime.getMinutes() ? (dateTime.getMinutes() &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + dateTime.getMinutes() : dateTime.getMinutes()) : <span class=\"string\">'00'</span></span><br><span class=\"line\">  <span class=\"comment\">// var second = dateTime.getSeconds()</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span><br><span class=\"line\">  <span class=\"comment\">// typescript转换写法</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> nowNew = now.getTime()</span><br><span class=\"line\">  <span class=\"comment\">// var nowNew = Date.parse(now.toDateString())</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> milliseconds = <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> timeSpanStr</span><br><span class=\"line\">  milliseconds = nowNew - timespan</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (milliseconds &lt;= <span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    timeSpanStr = <span class=\"string\">'刚刚'</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">1</span> &lt; milliseconds &amp;&amp; milliseconds &lt;= <span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span>) &#123;</span><br><span class=\"line\">    timeSpanStr = <span class=\"built_in\">Math</span>.round((milliseconds / (<span class=\"number\">1000</span> * <span class=\"number\">60</span>))) + <span class=\"string\">'分钟前'</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1</span> &lt; milliseconds &amp;&amp; milliseconds &lt;= <span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">24</span>) &#123;</span><br><span class=\"line\">    timeSpanStr = <span class=\"built_in\">Math</span>.round(milliseconds / (<span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span>)) + <span class=\"string\">'小时前'</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">24</span> &lt; milliseconds &amp;&amp; milliseconds &lt;= <span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">24</span> * <span class=\"number\">15</span>) &#123;</span><br><span class=\"line\">    timeSpanStr = <span class=\"built_in\">Math</span>.round(milliseconds / (<span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">24</span>)) + <span class=\"string\">'天前'</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (milliseconds &gt; <span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">24</span> * <span class=\"number\">15</span> &amp;&amp; year === now.getFullYear()) &#123;</span><br><span class=\"line\">    timeSpanStr = month + <span class=\"string\">'-'</span> + day + <span class=\"string\">' '</span> + hour + <span class=\"string\">':'</span> + minute</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    timeSpanStr = year + <span class=\"string\">'-'</span> + month + <span class=\"string\">'-'</span> + day + <span class=\"string\">' '</span> + hour + <span class=\"string\">':'</span> + minute</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> timeSpanStr</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"视频时长格式化\"><a href=\"#视频时长格式化\" class=\"headerlink\" title=\"视频时长格式化\"></a>视频时长格式化</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 视频时长格式化</span></span><br><span class=\"line\"><span class=\"comment\">   * @param &#123;number&#125; seconds</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">secondsToHour</span> (<span class=\"params\">seconds</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> h = <span class=\"built_in\">parseInt</span>(seconds / <span class=\"number\">3600</span>)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> m = <span class=\"built_in\">parseInt</span>((seconds % <span class=\"number\">3600</span>) / <span class=\"number\">60</span>)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> s = <span class=\"built_in\">parseInt</span>(seconds % <span class=\"number\">60</span>)</span><br><span class=\"line\">    h = h ? h + <span class=\"string\">':'</span> : <span class=\"string\">''</span></span><br><span class=\"line\">    m = m ? (m &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + m + <span class=\"string\">':'</span> : m + <span class=\"string\">':'</span>) : <span class=\"string\">'00:'</span></span><br><span class=\"line\">    s = s ? (s &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + s : s) : <span class=\"string\">'00'</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> h + m + s</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"文案截取\"><a href=\"#文案截取\" class=\"headerlink\" title=\"文案截取\"></a>文案截取</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 文案截取</span></span><br><span class=\"line\"><span class=\"comment\">   * @param &#123;number&#125; num 截取个数</span></span><br><span class=\"line\"><span class=\"comment\">   * @param &#123;String&#125; string 拼接字符串</span></span><br><span class=\"line\"><span class=\"comment\">   * @param &#123;String&#125; symbol 拼接字符串</span></span><br><span class=\"line\"><span class=\"comment\">   * stringLen(\"asdsfdfsdf\", 80, \"...\")</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">stringLen</span> (<span class=\"params\">string, num, symbol</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; string.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (len &gt;= num) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> string.slice(<span class=\"number\">0</span>, i) + symbol</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (string.charCodeAt(i) &gt; <span class=\"number\">127</span> || string.charCodeAt(i) === <span class=\"number\">94</span>) &#123;</span><br><span class=\"line\">        len++</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        len += <span class=\"number\">1</span> / <span class=\"number\">2</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> string</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"对比版本号\"><a href=\"#对比版本号\" class=\"headerlink\" title=\"对比版本号\"></a>对比版本号</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 对比版本号，大于：true 小于：false</span></span><br><span class=\"line\"><span class=\"comment\">   * @param &#123;String&#125; v1 2.1.1</span></span><br><span class=\"line\"><span class=\"comment\">   * @param &#123;String&#125; v2 2.2.2</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">versions</span>(<span class=\"params\">v1, v2</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr1 = v1.replace(<span class=\"regexp\">/[-_]/g</span>, <span class=\"string\">'.'</span>).split(<span class=\"string\">'.'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr2 = v2.replace(<span class=\"regexp\">/[-_]/g</span>, <span class=\"string\">'.'</span>).split(<span class=\"string\">'.'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = <span class=\"built_in\">Math</span>.max(arr1.length, arr2.length)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">      arr1[i] = !arr1[i] ? <span class=\"number\">0</span> : arr1[i]</span><br><span class=\"line\">      arr2[i] = !arr2[i] ? <span class=\"number\">0</span> : arr2[i]</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">parseInt</span>(arr1[i]) &gt; <span class=\"built_in\">parseInt</span>(arr2[i])) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">parseInt</span>(arr1[i]) &lt; <span class=\"built_in\">parseInt</span>(arr2[i])) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"倒计时\"><a href=\"#倒计时\" class=\"headerlink\" title=\"倒计时\"></a>倒计时</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 倒计时</span></span><br><span class=\"line\"><span class=\"comment\">   * @param &#123;number&#125; msd 截止时间</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MillisecondToDate</span> (<span class=\"params\">msd</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()</span><br><span class=\"line\">    <span class=\"keyword\">var</span> time = <span class=\"built_in\">parseFloat</span>(msd - now) / <span class=\"number\">1000</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (time !== <span class=\"literal\">null</span> &amp;&amp; time !== <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> timeDay = <span class=\"built_in\">parseInt</span>(time / <span class=\"number\">86400.0</span>)</span><br><span class=\"line\">      <span class=\"keyword\">var</span> timeH = <span class=\"built_in\">parseInt</span>(time / <span class=\"number\">3600.0</span> - <span class=\"number\">24</span> * timeDay)</span><br><span class=\"line\">      <span class=\"keyword\">var</span> timeM = <span class=\"built_in\">parseInt</span>((<span class=\"built_in\">parseFloat</span>(time / <span class=\"number\">3600.0</span>) - <span class=\"built_in\">parseInt</span>(time / <span class=\"number\">3600.0</span>)) * <span class=\"number\">60</span>)</span><br><span class=\"line\">      <span class=\"keyword\">var</span> timeS = <span class=\"built_in\">parseInt</span>((<span class=\"built_in\">parseFloat</span>((<span class=\"built_in\">parseFloat</span>(time / <span class=\"number\">3600.0</span>) - <span class=\"built_in\">parseInt</span>(time / <span class=\"number\">3600.0</span>)) * <span class=\"number\">60</span>) - <span class=\"built_in\">parseInt</span>((<span class=\"built_in\">parseFloat</span>(time / <span class=\"number\">3600.0</span>) - <span class=\"built_in\">parseInt</span>(time / <span class=\"number\">3600.0</span>)) * <span class=\"number\">60</span>)) * <span class=\"number\">60</span>)</span><br><span class=\"line\">      timeDay = timeDay &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + timeDay : timeDay</span><br><span class=\"line\">      timeH = timeH &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + timeH : timeH</span><br><span class=\"line\">      timeM = timeM &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + timeM : timeM</span><br><span class=\"line\">      timeS = timeS &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + timeS : timeS</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"string\">'day'</span>: timeDay.toString(),</span><br><span class=\"line\">      <span class=\"string\">'hour'</span>: timeH.toString(),</span><br><span class=\"line\">      <span class=\"string\">'minute'</span>: timeM.toString(),</span><br><span class=\"line\">      <span class=\"string\">'second'</span>: timeS.toString()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"两中数字格式化的方法\"><a href=\"#两中数字格式化的方法\" class=\"headerlink\" title=\"两中数字格式化的方法\"></a>两中数字格式化的方法</h4><blockquote>\n<p>数字格式化一 e.g. 23422039-&gt;2342.2W<br>    <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 2342.2W</span></span><br><span class=\"line\"><span class=\"comment\">  * @param &#123;number&#125; count 需要格式化的数字</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">CounFormat</span> (<span class=\"params\">count</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> countString = count.toString()</span><br><span class=\"line\">   <span class=\"keyword\">var</span> tmp = <span class=\"string\">''</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> result = <span class=\"string\">''</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> (countString.length &gt;= <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">     tmp = countString.slice(<span class=\"number\">-4</span>, <span class=\"number\">-3</span>) === <span class=\"string\">'0'</span> ? <span class=\"string\">''</span> : countString.slice(<span class=\"number\">-4</span>, <span class=\"number\">-3</span>)</span><br><span class=\"line\">     <span class=\"keyword\">if</span> (tmp.slice(tmp.length + <span class=\"number\">1</span>, <span class=\"number\">1</span>) === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">       result = countString.slice(<span class=\"number\">0</span>, <span class=\"number\">-4</span>).concat(<span class=\"string\">'w'</span>)</span><br><span class=\"line\">     &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">       tmp === <span class=\"string\">''</span> ? result = countString.slice(<span class=\"number\">0</span>, <span class=\"number\">-4</span>).concat(<span class=\"string\">'w'</span>) : result = countString.slice(<span class=\"number\">0</span>, <span class=\"number\">-4</span>).concat(<span class=\"string\">'.'</span> + tmp + <span class=\"string\">'w'</span>)</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> result</span><br><span class=\"line\">   &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> count</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n<p>数字格式化二 e.g. 23232222-&gt;23,232,222<br>    <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">  * 千位符数字格式化23,232,222</span></span><br><span class=\"line\"><span class=\"comment\">  * @param &#123;number&#125; num 需要格式化的数字</span></span><br><span class=\"line\"><span class=\"comment\">  * @param &#123;int&#125; precision 保留小数位</span></span><br><span class=\"line\"><span class=\"comment\">  * @param &#123;String&#125; separator 分隔符</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">CounFormat2</span> (<span class=\"params\">num, precision, separator</span>) </span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">var</span> parts</span><br><span class=\"line\">   <span class=\"keyword\">if</span> (!<span class=\"built_in\">isNaN</span>(<span class=\"built_in\">parseFloat</span>(num)) &amp;&amp; <span class=\"built_in\">isFinite</span>(num)) &#123;</span><br><span class=\"line\">     num = <span class=\"built_in\">Number</span>(num)</span><br><span class=\"line\">     num = (<span class=\"keyword\">typeof</span> precision !== <span class=\"string\">'undefined'</span> ? num.toFixed(precision) : num).toString()</span><br><span class=\"line\">     parts = num.split(<span class=\"string\">'.'</span>)</span><br><span class=\"line\">     parts[<span class=\"number\">0</span>] = parts[<span class=\"number\">0</span>].toString().replace(<span class=\"regexp\">/(\\d)(?=(\\d&#123;3&#125;)+(?!\\d))/g</span>, <span class=\"string\">'$1'</span> + (separator || <span class=\"string\">','</span>))</span><br><span class=\"line\">     <span class=\"keyword\">return</span> parts.join(<span class=\"string\">'.'</span>)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"literal\">NaN</span></span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"时间格式化的方法\"><a href=\"#时间格式化的方法\" class=\"headerlink\" title=\"时间格式化的方法\"></a>时间格式化的方法</h4><blockquote>\n<p>时间格式化 e.g. 1245278300-&gt;2009-6-18 06:38<br>    <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 时间格式化 2018-09-09 12:02:22</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;number&#125; timespan 时间戳</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">formatMsgTime</span> (<span class=\"params\">timespan</span>) </span>&#123;</span><br><span class=\"line\">  timespan = timespan * <span class=\"number\">1000</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> dateTime = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(timespan)</span><br><span class=\"line\">  <span class=\"keyword\">var</span> year = dateTime.getFullYear()</span><br><span class=\"line\">  <span class=\"keyword\">var</span> month = dateTime.getMonth() + <span class=\"number\">1</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> day = dateTime.getDate()</span><br><span class=\"line\">  <span class=\"keyword\">var</span> hour = dateTime.getHours() ? (dateTime.getHours() &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + dateTime.getHours() : dateTime.getHours()) : <span class=\"string\">'00'</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> minute = dateTime.getMinutes() ? (dateTime.getMinutes() &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + dateTime.getMinutes() : dateTime.getMinutes()) : <span class=\"string\">'00'</span></span><br><span class=\"line\">  <span class=\"comment\">// var second = dateTime.getSeconds()</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>()</span><br><span class=\"line\">  <span class=\"comment\">// typescript转换写法</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> nowNew = now.getTime()</span><br><span class=\"line\">  <span class=\"comment\">// var nowNew = Date.parse(now.toDateString())</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> milliseconds = <span class=\"number\">0</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> timeSpanStr</span><br><span class=\"line\">  milliseconds = nowNew - timespan</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (milliseconds &lt;= <span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">    timeSpanStr = <span class=\"string\">'刚刚'</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">1</span> &lt; milliseconds &amp;&amp; milliseconds &lt;= <span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span>) &#123;</span><br><span class=\"line\">    timeSpanStr = <span class=\"built_in\">Math</span>.round((milliseconds / (<span class=\"number\">1000</span> * <span class=\"number\">60</span>))) + <span class=\"string\">'分钟前'</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">1</span> &lt; milliseconds &amp;&amp; milliseconds &lt;= <span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">24</span>) &#123;</span><br><span class=\"line\">    timeSpanStr = <span class=\"built_in\">Math</span>.round(milliseconds / (<span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span>)) + <span class=\"string\">'小时前'</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">24</span> &lt; milliseconds &amp;&amp; milliseconds &lt;= <span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">24</span> * <span class=\"number\">15</span>) &#123;</span><br><span class=\"line\">    timeSpanStr = <span class=\"built_in\">Math</span>.round(milliseconds / (<span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">24</span>)) + <span class=\"string\">'天前'</span></span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (milliseconds &gt; <span class=\"number\">1000</span> * <span class=\"number\">60</span> * <span class=\"number\">60</span> * <span class=\"number\">24</span> * <span class=\"number\">15</span> &amp;&amp; year === now.getFullYear()) &#123;</span><br><span class=\"line\">    timeSpanStr = month + <span class=\"string\">'-'</span> + day + <span class=\"string\">' '</span> + hour + <span class=\"string\">':'</span> + minute</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    timeSpanStr = year + <span class=\"string\">'-'</span> + month + <span class=\"string\">'-'</span> + day + <span class=\"string\">' '</span> + hour + <span class=\"string\">':'</span> + minute</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> timeSpanStr</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"视频时长格式化\"><a href=\"#视频时长格式化\" class=\"headerlink\" title=\"视频时长格式化\"></a>视频时长格式化</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 视频时长格式化</span></span><br><span class=\"line\"><span class=\"comment\">   * @param &#123;number&#125; seconds</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">secondsToHour</span> (<span class=\"params\">seconds</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> h = <span class=\"built_in\">parseInt</span>(seconds / <span class=\"number\">3600</span>)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> m = <span class=\"built_in\">parseInt</span>((seconds % <span class=\"number\">3600</span>) / <span class=\"number\">60</span>)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> s = <span class=\"built_in\">parseInt</span>(seconds % <span class=\"number\">60</span>)</span><br><span class=\"line\">    h = h ? h + <span class=\"string\">':'</span> : <span class=\"string\">''</span></span><br><span class=\"line\">    m = m ? (m &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + m + <span class=\"string\">':'</span> : m + <span class=\"string\">':'</span>) : <span class=\"string\">'00:'</span></span><br><span class=\"line\">    s = s ? (s &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + s : s) : <span class=\"string\">'00'</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> h + m + s</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"文案截取\"><a href=\"#文案截取\" class=\"headerlink\" title=\"文案截取\"></a>文案截取</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 文案截取</span></span><br><span class=\"line\"><span class=\"comment\">   * @param &#123;number&#125; num 截取个数</span></span><br><span class=\"line\"><span class=\"comment\">   * @param &#123;String&#125; string 拼接字符串</span></span><br><span class=\"line\"><span class=\"comment\">   * @param &#123;String&#125; symbol 拼接字符串</span></span><br><span class=\"line\"><span class=\"comment\">   * stringLen(\"asdsfdfsdf\", 80, \"...\")</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">stringLen</span> (<span class=\"params\">string, num, symbol</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; string.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (len &gt;= num) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> string.slice(<span class=\"number\">0</span>, i) + symbol</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (string.charCodeAt(i) &gt; <span class=\"number\">127</span> || string.charCodeAt(i) === <span class=\"number\">94</span>) &#123;</span><br><span class=\"line\">        len++</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        len += <span class=\"number\">1</span> / <span class=\"number\">2</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> string</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"对比版本号\"><a href=\"#对比版本号\" class=\"headerlink\" title=\"对比版本号\"></a>对比版本号</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 对比版本号，大于：true 小于：false</span></span><br><span class=\"line\"><span class=\"comment\">   * @param &#123;String&#125; v1 2.1.1</span></span><br><span class=\"line\"><span class=\"comment\">   * @param &#123;String&#125; v2 2.2.2</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">versions</span>(<span class=\"params\">v1, v2</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr1 = v1.replace(<span class=\"regexp\">/[-_]/g</span>, <span class=\"string\">'.'</span>).split(<span class=\"string\">'.'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> arr2 = v2.replace(<span class=\"regexp\">/[-_]/g</span>, <span class=\"string\">'.'</span>).split(<span class=\"string\">'.'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">var</span> len = <span class=\"built_in\">Math</span>.max(arr1.length, arr2.length)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</span><br><span class=\"line\">      arr1[i] = !arr1[i] ? <span class=\"number\">0</span> : arr1[i]</span><br><span class=\"line\">      arr2[i] = !arr2[i] ? <span class=\"number\">0</span> : arr2[i]</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"built_in\">parseInt</span>(arr1[i]) &gt; <span class=\"built_in\">parseInt</span>(arr2[i])) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"built_in\">parseInt</span>(arr1[i]) &lt; <span class=\"built_in\">parseInt</span>(arr2[i])) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"倒计时\"><a href=\"#倒计时\" class=\"headerlink\" title=\"倒计时\"></a>倒计时</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 倒计时</span></span><br><span class=\"line\"><span class=\"comment\">   * @param &#123;number&#125; msd 截止时间</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">MillisecondToDate</span> (<span class=\"params\">msd</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()</span><br><span class=\"line\">    <span class=\"keyword\">var</span> time = <span class=\"built_in\">parseFloat</span>(msd - now) / <span class=\"number\">1000</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (time !== <span class=\"literal\">null</span> &amp;&amp; time !== <span class=\"string\">''</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> timeDay = <span class=\"built_in\">parseInt</span>(time / <span class=\"number\">86400.0</span>)</span><br><span class=\"line\">      <span class=\"keyword\">var</span> timeH = <span class=\"built_in\">parseInt</span>(time / <span class=\"number\">3600.0</span> - <span class=\"number\">24</span> * timeDay)</span><br><span class=\"line\">      <span class=\"keyword\">var</span> timeM = <span class=\"built_in\">parseInt</span>((<span class=\"built_in\">parseFloat</span>(time / <span class=\"number\">3600.0</span>) - <span class=\"built_in\">parseInt</span>(time / <span class=\"number\">3600.0</span>)) * <span class=\"number\">60</span>)</span><br><span class=\"line\">      <span class=\"keyword\">var</span> timeS = <span class=\"built_in\">parseInt</span>((<span class=\"built_in\">parseFloat</span>((<span class=\"built_in\">parseFloat</span>(time / <span class=\"number\">3600.0</span>) - <span class=\"built_in\">parseInt</span>(time / <span class=\"number\">3600.0</span>)) * <span class=\"number\">60</span>) - <span class=\"built_in\">parseInt</span>((<span class=\"built_in\">parseFloat</span>(time / <span class=\"number\">3600.0</span>) - <span class=\"built_in\">parseInt</span>(time / <span class=\"number\">3600.0</span>)) * <span class=\"number\">60</span>)) * <span class=\"number\">60</span>)</span><br><span class=\"line\">      timeDay = timeDay &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + timeDay : timeDay</span><br><span class=\"line\">      timeH = timeH &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + timeH : timeH</span><br><span class=\"line\">      timeM = timeM &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + timeM : timeM</span><br><span class=\"line\">      timeS = timeS &lt; <span class=\"number\">10</span> ? <span class=\"string\">'0'</span> + timeS : timeS</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      <span class=\"string\">'day'</span>: timeDay.toString(),</span><br><span class=\"line\">      <span class=\"string\">'hour'</span>: timeH.toString(),</span><br><span class=\"line\">      <span class=\"string\">'minute'</span>: timeM.toString(),</span><br><span class=\"line\">      <span class=\"string\">'second'</span>: timeS.toString()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>"},{"title":"扒一扒deepLink：应用深度链接","date":"2017-02-27T09:39:31.000Z","_content":" \n<html>\n<div style=\"text-indent:1rem\"> 总想着要做一个自己的博客，可是总是又因为各种各样的事情一直没有做，工作中的记录都在有道云笔记中，因为我觉得有道云笔记真的是个神器，但是作为博客来说是有点不太上台面，终于下定决心要在这过年的假期完成这件事，因为我发现我最近真的越来越忙了，再不做真的没有时间了呀~</div>\n</html>\n\n## 什么是deepLink\n##### scheme(原始唤起码)+Universal Links(通用链接)+下载后通过设备指纹识别唤起客户端指定页\n\n### deepLink起源\n起源就是领导说要做一套可以无缝唤起客户端的系统，如果完不成就要用第三方的系统，但是我们已经完成了scheme(原始唤起码)+Universal Links(通用链接)，只剩下载后通过设备指纹识别唤起客户端指定页，我们能妥协吗，当然不行！\n\n---\n### 实现方式\n\n#####  ios9-，H5与客户端通信方式为scheme\n* 协议形式为miaopai:// ，这样的唤起码浏览器不会识别，只有客户端可以识别，浏览器不会报错\n* 所以为了达到唤起不成功可以下载的功能，页面做了在唤起码执行完成2s后定时执行下载或者一些别的操作（跳转到指定H5……）\n##### ios9+,H5与客户端通信方式为scheme或者通用链接\n\n```\n 什么是通用链接(Universal Links)？\n Apple 为了大力推动 APP 开发者在深层链接上有更好的体验。 推出通用链接：一种能够方便的通过传统 HTTP 链接来启动 APP, 使用相同的网址打开网站和APP。\n```\n* 协议形式为https://app.yixia.com,这样的唤起码浏览器和APP都会识别，跳转方式为：\n\n    * 已安装客户端会直接识别唤起码\n    * 未安装客户端会跳转至通用链接指定页（中转页）\n* 客户端与Safari之间的通信方式\n    * 客户端点击右上角yixia.com在Safari中打开\n    * Safari下拉页面在客户端中打开\n    * 手机会默认记住这种选择作为偏好操作\n    \n\n### 下载后通过设备指纹识别唤起客户端指定页\n\n\n\n#### IOS Android下载后唤起指定页\n没安装的情况下，点击任意唤起链接，即种植当前链接到服务端，8分钟内下载完成并唤起之后即可自动跳转到已种植的站内页面（仅限于下载后第一次启动）\n\n---\n#### IOS Android下载后唤起指定页用到的参数和流程\n\n* h5页下载之前将以下参数种植到接口中(类似于一个.json文件)，IOS如下\n\n```javascript\n\n   {\n    \"width\" : 手机屏幕宽度 [ 320 || 375 || 414 ],\n    \"height\" : 手机屏幕高度 [ 568 || 667 || 736 ],\n    \"os\" : 手机系统 [ iphone os 9_1 ], //统一小写\n    \"time\" : 当前时间戳,\n    \"ip\":111.202.106.229,\n    \"code\" : h5页面传给客户端的参数（唤起码）\n  }\n  /** h5页面的os来自当前浏览器的navigator.userAgent值，\n    \"Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1\"\n    */\n\n```\n* Android统一在下载之前种植\n\n```javascript\nandroid:\n{\n    \"width\":  1,\n    \"height\":  1,\n    \"os\": 安卓的设备号 [ m1-note ],//统一小写，空格变-\n    \"time\" : 当前时间戳,\n    \"ip\":111.202.106.229,\n    \"code\": h5页面传给客户端的参数（唤起码）\n}\n/** h5页面的os来自当前浏览器的navigator.userAgent值，\n    \"Mozilla/5.0 (Linux; Android 5.1; MZ-m1 note Build/LMY47D) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/45.0.2454.94 Mobile Safari/537.36\"\n    三星和魅族手机去前缀，统一小写，空格变-：\n    MZ-m1 note => m1-note\n```\n\n\n\n* 种植成功之后，首次唤起客户端发送相同参数到服务端进行比对，如完全一致则发送code至客户端进行跳转操作（测试包新唤起会进行如上操作）\n\n\n   ","source":"_posts/扒一扒deepLink：应用深度链接.md","raw":"---\ntitle: 扒一扒deepLink：应用深度链接\ndate: 2017-02-27 17:39:31\ntags:\ncategories: \n    - js\n    - ios\n---\n \n<html>\n<div style=\"text-indent:1rem\"> 总想着要做一个自己的博客，可是总是又因为各种各样的事情一直没有做，工作中的记录都在有道云笔记中，因为我觉得有道云笔记真的是个神器，但是作为博客来说是有点不太上台面，终于下定决心要在这过年的假期完成这件事，因为我发现我最近真的越来越忙了，再不做真的没有时间了呀~</div>\n</html>\n\n## 什么是deepLink\n##### scheme(原始唤起码)+Universal Links(通用链接)+下载后通过设备指纹识别唤起客户端指定页\n\n### deepLink起源\n起源就是领导说要做一套可以无缝唤起客户端的系统，如果完不成就要用第三方的系统，但是我们已经完成了scheme(原始唤起码)+Universal Links(通用链接)，只剩下载后通过设备指纹识别唤起客户端指定页，我们能妥协吗，当然不行！\n\n---\n### 实现方式\n\n#####  ios9-，H5与客户端通信方式为scheme\n* 协议形式为miaopai:// ，这样的唤起码浏览器不会识别，只有客户端可以识别，浏览器不会报错\n* 所以为了达到唤起不成功可以下载的功能，页面做了在唤起码执行完成2s后定时执行下载或者一些别的操作（跳转到指定H5……）\n##### ios9+,H5与客户端通信方式为scheme或者通用链接\n\n```\n 什么是通用链接(Universal Links)？\n Apple 为了大力推动 APP 开发者在深层链接上有更好的体验。 推出通用链接：一种能够方便的通过传统 HTTP 链接来启动 APP, 使用相同的网址打开网站和APP。\n```\n* 协议形式为https://app.yixia.com,这样的唤起码浏览器和APP都会识别，跳转方式为：\n\n    * 已安装客户端会直接识别唤起码\n    * 未安装客户端会跳转至通用链接指定页（中转页）\n* 客户端与Safari之间的通信方式\n    * 客户端点击右上角yixia.com在Safari中打开\n    * Safari下拉页面在客户端中打开\n    * 手机会默认记住这种选择作为偏好操作\n    \n\n### 下载后通过设备指纹识别唤起客户端指定页\n\n\n\n#### IOS Android下载后唤起指定页\n没安装的情况下，点击任意唤起链接，即种植当前链接到服务端，8分钟内下载完成并唤起之后即可自动跳转到已种植的站内页面（仅限于下载后第一次启动）\n\n---\n#### IOS Android下载后唤起指定页用到的参数和流程\n\n* h5页下载之前将以下参数种植到接口中(类似于一个.json文件)，IOS如下\n\n```javascript\n\n   {\n    \"width\" : 手机屏幕宽度 [ 320 || 375 || 414 ],\n    \"height\" : 手机屏幕高度 [ 568 || 667 || 736 ],\n    \"os\" : 手机系统 [ iphone os 9_1 ], //统一小写\n    \"time\" : 当前时间戳,\n    \"ip\":111.202.106.229,\n    \"code\" : h5页面传给客户端的参数（唤起码）\n  }\n  /** h5页面的os来自当前浏览器的navigator.userAgent值，\n    \"Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1\"\n    */\n\n```\n* Android统一在下载之前种植\n\n```javascript\nandroid:\n{\n    \"width\":  1,\n    \"height\":  1,\n    \"os\": 安卓的设备号 [ m1-note ],//统一小写，空格变-\n    \"time\" : 当前时间戳,\n    \"ip\":111.202.106.229,\n    \"code\": h5页面传给客户端的参数（唤起码）\n}\n/** h5页面的os来自当前浏览器的navigator.userAgent值，\n    \"Mozilla/5.0 (Linux; Android 5.1; MZ-m1 note Build/LMY47D) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/45.0.2454.94 Mobile Safari/537.36\"\n    三星和魅族手机去前缀，统一小写，空格变-：\n    MZ-m1 note => m1-note\n```\n\n\n\n* 种植成功之后，首次唤起客户端发送相同参数到服务端进行比对，如完全一致则发送code至客户端进行跳转操作（测试包新唤起会进行如上操作）\n\n\n   ","slug":"扒一扒deepLink：应用深度链接","published":1,"updated":"2020-05-03T09:33:18.870Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9qxci4e000b0nurjg2sgjbw","content":"<html><br><div style=\"text-indent:1rem\"> 总想着要做一个自己的博客，可是总是又因为各种各样的事情一直没有做，工作中的记录都在有道云笔记中，因为我觉得有道云笔记真的是个神器，但是作为博客来说是有点不太上台面，终于下定决心要在这过年的假期完成这件事，因为我发现我最近真的越来越忙了，再不做真的没有时间了呀~</div><br></html>\n\n<h2 id=\"什么是deepLink\"><a href=\"#什么是deepLink\" class=\"headerlink\" title=\"什么是deepLink\"></a>什么是deepLink</h2><h5 id=\"scheme-原始唤起码-Universal-Links-通用链接-下载后通过设备指纹识别唤起客户端指定页\"><a href=\"#scheme-原始唤起码-Universal-Links-通用链接-下载后通过设备指纹识别唤起客户端指定页\" class=\"headerlink\" title=\"scheme(原始唤起码)+Universal Links(通用链接)+下载后通过设备指纹识别唤起客户端指定页\"></a>scheme(原始唤起码)+Universal Links(通用链接)+下载后通过设备指纹识别唤起客户端指定页</h5><h3 id=\"deepLink起源\"><a href=\"#deepLink起源\" class=\"headerlink\" title=\"deepLink起源\"></a>deepLink起源</h3><p>起源就是领导说要做一套可以无缝唤起客户端的系统，如果完不成就要用第三方的系统，但是我们已经完成了scheme(原始唤起码)+Universal Links(通用链接)，只剩下载后通过设备指纹识别唤起客户端指定页，我们能妥协吗，当然不行！</p>\n<hr>\n<h3 id=\"实现方式\"><a href=\"#实现方式\" class=\"headerlink\" title=\"实现方式\"></a>实现方式</h3><h5 id=\"ios9-，H5与客户端通信方式为scheme\"><a href=\"#ios9-，H5与客户端通信方式为scheme\" class=\"headerlink\" title=\"ios9-，H5与客户端通信方式为scheme\"></a>ios9-，H5与客户端通信方式为scheme</h5><ul>\n<li>协议形式为miaopai:// ，这样的唤起码浏览器不会识别，只有客户端可以识别，浏览器不会报错</li>\n<li>所以为了达到唤起不成功可以下载的功能，页面做了在唤起码执行完成2s后定时执行下载或者一些别的操作（跳转到指定H5……）<h5 id=\"ios9-H5与客户端通信方式为scheme或者通用链接\"><a href=\"#ios9-H5与客户端通信方式为scheme或者通用链接\" class=\"headerlink\" title=\"ios9+,H5与客户端通信方式为scheme或者通用链接\"></a>ios9+,H5与客户端通信方式为scheme或者通用链接</h5></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是通用链接(Universal Links)？</span><br><span class=\"line\">Apple 为了大力推动 APP 开发者在深层链接上有更好的体验。 推出通用链接：一种能够方便的通过传统 HTTP 链接来启动 APP, 使用相同的网址打开网站和APP。</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>协议形式为<a href=\"https://app.yixia.com,这样的唤起码浏览器和APP都会识别，跳转方式为：\" target=\"_blank\" rel=\"noopener\">https://app.yixia.com,这样的唤起码浏览器和APP都会识别，跳转方式为：</a></p>\n<ul>\n<li>已安装客户端会直接识别唤起码</li>\n<li>未安装客户端会跳转至通用链接指定页（中转页）</li>\n</ul>\n</li>\n<li>客户端与Safari之间的通信方式<ul>\n<li>客户端点击右上角yixia.com在Safari中打开</li>\n<li>Safari下拉页面在客户端中打开</li>\n<li>手机会默认记住这种选择作为偏好操作</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"下载后通过设备指纹识别唤起客户端指定页\"><a href=\"#下载后通过设备指纹识别唤起客户端指定页\" class=\"headerlink\" title=\"下载后通过设备指纹识别唤起客户端指定页\"></a>下载后通过设备指纹识别唤起客户端指定页</h3><h4 id=\"IOS-Android下载后唤起指定页\"><a href=\"#IOS-Android下载后唤起指定页\" class=\"headerlink\" title=\"IOS Android下载后唤起指定页\"></a>IOS Android下载后唤起指定页</h4><p>没安装的情况下，点击任意唤起链接，即种植当前链接到服务端，8分钟内下载完成并唤起之后即可自动跳转到已种植的站内页面（仅限于下载后第一次启动）</p>\n<hr>\n<h4 id=\"IOS-Android下载后唤起指定页用到的参数和流程\"><a href=\"#IOS-Android下载后唤起指定页用到的参数和流程\" class=\"headerlink\" title=\"IOS Android下载后唤起指定页用到的参数和流程\"></a>IOS Android下载后唤起指定页用到的参数和流程</h4><ul>\n<li>h5页下载之前将以下参数种植到接口中(类似于一个.json文件)，IOS如下</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  <span class=\"string\">\"width\"</span> : 手机屏幕宽度 [ <span class=\"number\">320</span> || <span class=\"number\">375</span> || <span class=\"number\">414</span> ],</span><br><span class=\"line\">  <span class=\"string\">\"height\"</span> : 手机屏幕高度 [ <span class=\"number\">568</span> || <span class=\"number\">667</span> || <span class=\"number\">736</span> ],</span><br><span class=\"line\">  <span class=\"string\">\"os\"</span> : 手机系统 [ iphone os <span class=\"number\">9</span>_1 ], <span class=\"comment\">//统一小写</span></span><br><span class=\"line\">  <span class=\"string\">\"time\"</span> : 当前时间戳,</span><br><span class=\"line\">  <span class=\"string\">\"ip\"</span>:<span class=\"number\">111.202</span><span class=\"number\">.106</span><span class=\"number\">.229</span>,</span><br><span class=\"line\">  <span class=\"string\">\"code\"</span> : h5页面传给客户端的参数（唤起码）</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/** h5页面的os来自当前浏览器的navigator.userAgent值，</span></span><br><span class=\"line\"><span class=\"comment\">  \"Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1\"</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>Android统一在下载之前种植</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">android:</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"width\"</span>:  <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"string\">\"height\"</span>:  <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"string\">\"os\"</span>: 安卓的设备号 [ m1-note ],<span class=\"comment\">//统一小写，空格变-</span></span><br><span class=\"line\">    <span class=\"string\">\"time\"</span> : 当前时间戳,</span><br><span class=\"line\">    <span class=\"string\">\"ip\"</span>:<span class=\"number\">111.202</span><span class=\"number\">.106</span><span class=\"number\">.229</span>,</span><br><span class=\"line\">    <span class=\"string\">\"code\"</span>: h5页面传给客户端的参数（唤起码）</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/** h5页面的os来自当前浏览器的navigator.userAgent值，</span></span><br><span class=\"line\"><span class=\"comment\">    \"Mozilla/5.0 (Linux; Android 5.1; MZ-m1 note Build/LMY47D) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/45.0.2454.94 Mobile Safari/537.36\"</span></span><br><span class=\"line\"><span class=\"comment\">    三星和魅族手机去前缀，统一小写，空格变-：</span></span><br><span class=\"line\"><span class=\"comment\">    MZ-m1 note =&gt; m1-note</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>种植成功之后，首次唤起客户端发送相同参数到服务端进行比对，如完全一致则发送code至客户端进行跳转操作（测试包新唤起会进行如上操作）</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<html><br><div style=\"text-indent:1rem\"> 总想着要做一个自己的博客，可是总是又因为各种各样的事情一直没有做，工作中的记录都在有道云笔记中，因为我觉得有道云笔记真的是个神器，但是作为博客来说是有点不太上台面，终于下定决心要在这过年的假期完成这件事，因为我发现我最近真的越来越忙了，再不做真的没有时间了呀~</div><br></html>\n\n<h2 id=\"什么是deepLink\"><a href=\"#什么是deepLink\" class=\"headerlink\" title=\"什么是deepLink\"></a>什么是deepLink</h2><h5 id=\"scheme-原始唤起码-Universal-Links-通用链接-下载后通过设备指纹识别唤起客户端指定页\"><a href=\"#scheme-原始唤起码-Universal-Links-通用链接-下载后通过设备指纹识别唤起客户端指定页\" class=\"headerlink\" title=\"scheme(原始唤起码)+Universal Links(通用链接)+下载后通过设备指纹识别唤起客户端指定页\"></a>scheme(原始唤起码)+Universal Links(通用链接)+下载后通过设备指纹识别唤起客户端指定页</h5><h3 id=\"deepLink起源\"><a href=\"#deepLink起源\" class=\"headerlink\" title=\"deepLink起源\"></a>deepLink起源</h3><p>起源就是领导说要做一套可以无缝唤起客户端的系统，如果完不成就要用第三方的系统，但是我们已经完成了scheme(原始唤起码)+Universal Links(通用链接)，只剩下载后通过设备指纹识别唤起客户端指定页，我们能妥协吗，当然不行！</p>\n<hr>\n<h3 id=\"实现方式\"><a href=\"#实现方式\" class=\"headerlink\" title=\"实现方式\"></a>实现方式</h3><h5 id=\"ios9-，H5与客户端通信方式为scheme\"><a href=\"#ios9-，H5与客户端通信方式为scheme\" class=\"headerlink\" title=\"ios9-，H5与客户端通信方式为scheme\"></a>ios9-，H5与客户端通信方式为scheme</h5><ul>\n<li>协议形式为miaopai:// ，这样的唤起码浏览器不会识别，只有客户端可以识别，浏览器不会报错</li>\n<li>所以为了达到唤起不成功可以下载的功能，页面做了在唤起码执行完成2s后定时执行下载或者一些别的操作（跳转到指定H5……）<h5 id=\"ios9-H5与客户端通信方式为scheme或者通用链接\"><a href=\"#ios9-H5与客户端通信方式为scheme或者通用链接\" class=\"headerlink\" title=\"ios9+,H5与客户端通信方式为scheme或者通用链接\"></a>ios9+,H5与客户端通信方式为scheme或者通用链接</h5></li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">什么是通用链接(Universal Links)？</span><br><span class=\"line\">Apple 为了大力推动 APP 开发者在深层链接上有更好的体验。 推出通用链接：一种能够方便的通过传统 HTTP 链接来启动 APP, 使用相同的网址打开网站和APP。</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>协议形式为<a href=\"https://app.yixia.com,这样的唤起码浏览器和APP都会识别，跳转方式为：\" target=\"_blank\" rel=\"noopener\">https://app.yixia.com,这样的唤起码浏览器和APP都会识别，跳转方式为：</a></p>\n<ul>\n<li>已安装客户端会直接识别唤起码</li>\n<li>未安装客户端会跳转至通用链接指定页（中转页）</li>\n</ul>\n</li>\n<li>客户端与Safari之间的通信方式<ul>\n<li>客户端点击右上角yixia.com在Safari中打开</li>\n<li>Safari下拉页面在客户端中打开</li>\n<li>手机会默认记住这种选择作为偏好操作</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"下载后通过设备指纹识别唤起客户端指定页\"><a href=\"#下载后通过设备指纹识别唤起客户端指定页\" class=\"headerlink\" title=\"下载后通过设备指纹识别唤起客户端指定页\"></a>下载后通过设备指纹识别唤起客户端指定页</h3><h4 id=\"IOS-Android下载后唤起指定页\"><a href=\"#IOS-Android下载后唤起指定页\" class=\"headerlink\" title=\"IOS Android下载后唤起指定页\"></a>IOS Android下载后唤起指定页</h4><p>没安装的情况下，点击任意唤起链接，即种植当前链接到服务端，8分钟内下载完成并唤起之后即可自动跳转到已种植的站内页面（仅限于下载后第一次启动）</p>\n<hr>\n<h4 id=\"IOS-Android下载后唤起指定页用到的参数和流程\"><a href=\"#IOS-Android下载后唤起指定页用到的参数和流程\" class=\"headerlink\" title=\"IOS Android下载后唤起指定页用到的参数和流程\"></a>IOS Android下载后唤起指定页用到的参数和流程</h4><ul>\n<li>h5页下载之前将以下参数种植到接口中(类似于一个.json文件)，IOS如下</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  <span class=\"string\">\"width\"</span> : 手机屏幕宽度 [ <span class=\"number\">320</span> || <span class=\"number\">375</span> || <span class=\"number\">414</span> ],</span><br><span class=\"line\">  <span class=\"string\">\"height\"</span> : 手机屏幕高度 [ <span class=\"number\">568</span> || <span class=\"number\">667</span> || <span class=\"number\">736</span> ],</span><br><span class=\"line\">  <span class=\"string\">\"os\"</span> : 手机系统 [ iphone os <span class=\"number\">9</span>_1 ], <span class=\"comment\">//统一小写</span></span><br><span class=\"line\">  <span class=\"string\">\"time\"</span> : 当前时间戳,</span><br><span class=\"line\">  <span class=\"string\">\"ip\"</span>:<span class=\"number\">111.202</span><span class=\"number\">.106</span><span class=\"number\">.229</span>,</span><br><span class=\"line\">  <span class=\"string\">\"code\"</span> : h5页面传给客户端的参数（唤起码）</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/** h5页面的os来自当前浏览器的navigator.userAgent值，</span></span><br><span class=\"line\"><span class=\"comment\">  \"Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13B143 Safari/601.1\"</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>Android统一在下载之前种植</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">android:</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">\"width\"</span>:  <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"string\">\"height\"</span>:  <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"string\">\"os\"</span>: 安卓的设备号 [ m1-note ],<span class=\"comment\">//统一小写，空格变-</span></span><br><span class=\"line\">    <span class=\"string\">\"time\"</span> : 当前时间戳,</span><br><span class=\"line\">    <span class=\"string\">\"ip\"</span>:<span class=\"number\">111.202</span><span class=\"number\">.106</span><span class=\"number\">.229</span>,</span><br><span class=\"line\">    <span class=\"string\">\"code\"</span>: h5页面传给客户端的参数（唤起码）</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/** h5页面的os来自当前浏览器的navigator.userAgent值，</span></span><br><span class=\"line\"><span class=\"comment\">    \"Mozilla/5.0 (Linux; Android 5.1; MZ-m1 note Build/LMY47D) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/45.0.2454.94 Mobile Safari/537.36\"</span></span><br><span class=\"line\"><span class=\"comment\">    三星和魅族手机去前缀，统一小写，空格变-：</span></span><br><span class=\"line\"><span class=\"comment\">    MZ-m1 note =&gt; m1-note</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>种植成功之后，首次唤起客户端发送相同参数到服务端进行比对，如完全一致则发送code至客户端进行跳转操作（测试包新唤起会进行如上操作）</li>\n</ul>\n"},{"title":"曼彻斯特编码与差分曼彻斯特编码","date":"2019-01-18T03:16:42.000Z","_content":"昨天在看西安交大陈妍老师的视频中，老师说曼彻斯特编码中电平从高电平跳变到低电平是表示“1”，从低电平条跳变到高电平表示“0”，怎么跟我印象中好像不太一样，难道我记错了？\n本着学知识不可以不求甚解的态度，我又查找了一下资料，咳咳，还真是我记错了，不过，在在网络工程师考试以及与其相关的资料中确实是这样规定的：位中间电平从低到高（向上）跳变表示“1”；位中间电平从高到低（向下）跳变表示“0”。而在清华大学出版的《计算机通信与网络教程》《计算机网络（第4版）》[1]却与之相反，在此我们将清华版称为标准曼彻斯编码。\n#### 曼彻斯特编码：\n> 位中间电平从高到低跳变表示\"1\"\n> 位中间电平从低到高跳变表示\"0\"。\n\n#### 差分曼彻斯特编码：\n> 前半周期没有跳变表示\"1\"\n> 前半周期有跳变表示\"0\"。\n\n　差分曼彻斯特编码比曼彻斯特编码的变化要少，因此更适合与传输高速的信息，被广泛用于宽带高速网中。然而，由于每个时钟位都必须有一次变化，所以这两种编码的效率仅可达到50%左右。\n\na:数字信号  b:曼彻斯特编码   c:差分曼彻斯特编码\n![img](曼彻斯特编码与差分曼彻斯特编码/img.jpg)","source":"_posts/曼彻斯特编码与差分曼彻斯特编码.md","raw":"---\ntitle: 曼彻斯特编码与差分曼彻斯特编码\ndate: 2019-01-18 11:16:42\ntags: \ncategories: \n\t- 网络原理\n\t- 学习日记\n---\n昨天在看西安交大陈妍老师的视频中，老师说曼彻斯特编码中电平从高电平跳变到低电平是表示“1”，从低电平条跳变到高电平表示“0”，怎么跟我印象中好像不太一样，难道我记错了？\n本着学知识不可以不求甚解的态度，我又查找了一下资料，咳咳，还真是我记错了，不过，在在网络工程师考试以及与其相关的资料中确实是这样规定的：位中间电平从低到高（向上）跳变表示“1”；位中间电平从高到低（向下）跳变表示“0”。而在清华大学出版的《计算机通信与网络教程》《计算机网络（第4版）》[1]却与之相反，在此我们将清华版称为标准曼彻斯编码。\n#### 曼彻斯特编码：\n> 位中间电平从高到低跳变表示\"1\"\n> 位中间电平从低到高跳变表示\"0\"。\n\n#### 差分曼彻斯特编码：\n> 前半周期没有跳变表示\"1\"\n> 前半周期有跳变表示\"0\"。\n\n　差分曼彻斯特编码比曼彻斯特编码的变化要少，因此更适合与传输高速的信息，被广泛用于宽带高速网中。然而，由于每个时钟位都必须有一次变化，所以这两种编码的效率仅可达到50%左右。\n\na:数字信号  b:曼彻斯特编码   c:差分曼彻斯特编码\n![img](曼彻斯特编码与差分曼彻斯特编码/img.jpg)","slug":"曼彻斯特编码与差分曼彻斯特编码","published":1,"updated":"2020-05-03T09:33:18.870Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9qxci4f000c0nur4jwpaylt","content":"<p>昨天在看西安交大陈妍老师的视频中，老师说曼彻斯特编码中电平从高电平跳变到低电平是表示“1”，从低电平条跳变到高电平表示“0”，怎么跟我印象中好像不太一样，难道我记错了？<br>本着学知识不可以不求甚解的态度，我又查找了一下资料，咳咳，还真是我记错了，不过，在在网络工程师考试以及与其相关的资料中确实是这样规定的：位中间电平从低到高（向上）跳变表示“1”；位中间电平从高到低（向下）跳变表示“0”。而在清华大学出版的《计算机通信与网络教程》《计算机网络（第4版）》[1]却与之相反，在此我们将清华版称为标准曼彻斯编码。</p>\n<h4 id=\"曼彻斯特编码：\"><a href=\"#曼彻斯特编码：\" class=\"headerlink\" title=\"曼彻斯特编码：\"></a>曼彻斯特编码：</h4><blockquote>\n<p>位中间电平从高到低跳变表示”1”<br>位中间电平从低到高跳变表示”0”。</p>\n</blockquote>\n<h4 id=\"差分曼彻斯特编码：\"><a href=\"#差分曼彻斯特编码：\" class=\"headerlink\" title=\"差分曼彻斯特编码：\"></a>差分曼彻斯特编码：</h4><blockquote>\n<p>前半周期没有跳变表示”1”<br>前半周期有跳变表示”0”。</p>\n</blockquote>\n<p>　差分曼彻斯特编码比曼彻斯特编码的变化要少，因此更适合与传输高速的信息，被广泛用于宽带高速网中。然而，由于每个时钟位都必须有一次变化，所以这两种编码的效率仅可达到50%左右。</p>\n<p>a:数字信号  b:曼彻斯特编码   c:差分曼彻斯特编码<br><img src=\"/2019/01/18/曼彻斯特编码与差分曼彻斯特编码/img.jpg\" alt=\"img\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>昨天在看西安交大陈妍老师的视频中，老师说曼彻斯特编码中电平从高电平跳变到低电平是表示“1”，从低电平条跳变到高电平表示“0”，怎么跟我印象中好像不太一样，难道我记错了？<br>本着学知识不可以不求甚解的态度，我又查找了一下资料，咳咳，还真是我记错了，不过，在在网络工程师考试以及与其相关的资料中确实是这样规定的：位中间电平从低到高（向上）跳变表示“1”；位中间电平从高到低（向下）跳变表示“0”。而在清华大学出版的《计算机通信与网络教程》《计算机网络（第4版）》[1]却与之相反，在此我们将清华版称为标准曼彻斯编码。</p>\n<h4 id=\"曼彻斯特编码：\"><a href=\"#曼彻斯特编码：\" class=\"headerlink\" title=\"曼彻斯特编码：\"></a>曼彻斯特编码：</h4><blockquote>\n<p>位中间电平从高到低跳变表示”1”<br>位中间电平从低到高跳变表示”0”。</p>\n</blockquote>\n<h4 id=\"差分曼彻斯特编码：\"><a href=\"#差分曼彻斯特编码：\" class=\"headerlink\" title=\"差分曼彻斯特编码：\"></a>差分曼彻斯特编码：</h4><blockquote>\n<p>前半周期没有跳变表示”1”<br>前半周期有跳变表示”0”。</p>\n</blockquote>\n<p>　差分曼彻斯特编码比曼彻斯特编码的变化要少，因此更适合与传输高速的信息，被广泛用于宽带高速网中。然而，由于每个时钟位都必须有一次变化，所以这两种编码的效率仅可达到50%左右。</p>\n<p>a:数字信号  b:曼彻斯特编码   c:差分曼彻斯特编码<br><img src=\"/2019/01/18/曼彻斯特编码与差分曼彻斯特编码/img.jpg\" alt=\"img\"></p>\n"},{"title":"神器甘特图","date":"2018-06-24T11:41:50.000Z","_content":"什么东西在我们的生活和工作当中可有可无，但是有了它立马会提升一个档次呀~ ———— 那就是甘特图Gantt chart，就是下面这个东西啦啦啦\n\n```\ngantt\ndateFormat  YYYY-MM-DD\ntitle 上报事件时间线\n\nsection load事件\nload(加载开始)：load_start_timestamp          :    p1, 2018-01-01, 1d\nload(加载结束)：load_end_timestamp            :    p2, after p4, 1d\n\nsection show事件\nshow(页面曝光)                            :           p3, after p1, 1d\n\nsection stay事件\nstay(duration第一次)：1000           :            p4, after p3, 1d\nstay(duration持续)：5000           :           p5, after p2, 5d\n\nsection model_show事件\nmodel_show(默认曝光)          :            p6, after p5, 10d\nmodel_show(滚动曝光)          :            p7, after p6, 10d\n\nsection model_click事件\n model_click(点击上报)          :            p8, after p7, 10d\n\n```\n当当当当~\n![img](神器甘特图/timer.jpg)","source":"_posts/神器甘特图.md","raw":"---\ntitle: 神器甘特图\ndate: 2018-6-24 19:41:50\ntags: 甘特图,Gantt chart\ncategories: 工具\n---\n什么东西在我们的生活和工作当中可有可无，但是有了它立马会提升一个档次呀~ ———— 那就是甘特图Gantt chart，就是下面这个东西啦啦啦\n\n```\ngantt\ndateFormat  YYYY-MM-DD\ntitle 上报事件时间线\n\nsection load事件\nload(加载开始)：load_start_timestamp          :    p1, 2018-01-01, 1d\nload(加载结束)：load_end_timestamp            :    p2, after p4, 1d\n\nsection show事件\nshow(页面曝光)                            :           p3, after p1, 1d\n\nsection stay事件\nstay(duration第一次)：1000           :            p4, after p3, 1d\nstay(duration持续)：5000           :           p5, after p2, 5d\n\nsection model_show事件\nmodel_show(默认曝光)          :            p6, after p5, 10d\nmodel_show(滚动曝光)          :            p7, after p6, 10d\n\nsection model_click事件\n model_click(点击上报)          :            p8, after p7, 10d\n\n```\n当当当当~\n![img](神器甘特图/timer.jpg)","slug":"神器甘特图","published":1,"updated":"2020-05-03T09:33:18.870Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9qxci4g000d0nurglenkgn8","content":"<p>什么东西在我们的生活和工作当中可有可无，但是有了它立马会提升一个档次呀~ ———— 那就是甘特图Gantt chart，就是下面这个东西啦啦啦</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gantt</span><br><span class=\"line\">dateFormat  YYYY-MM-DD</span><br><span class=\"line\">title 上报事件时间线</span><br><span class=\"line\"></span><br><span class=\"line\">section load事件</span><br><span class=\"line\">load(加载开始)：load_start_timestamp          :    p1, 2018-01-01, 1d</span><br><span class=\"line\">load(加载结束)：load_end_timestamp            :    p2, after p4, 1d</span><br><span class=\"line\"></span><br><span class=\"line\">section show事件</span><br><span class=\"line\">show(页面曝光)                            :           p3, after p1, 1d</span><br><span class=\"line\"></span><br><span class=\"line\">section stay事件</span><br><span class=\"line\">stay(duration第一次)：1000           :            p4, after p3, 1d</span><br><span class=\"line\">stay(duration持续)：5000           :           p5, after p2, 5d</span><br><span class=\"line\"></span><br><span class=\"line\">section model_show事件</span><br><span class=\"line\">model_show(默认曝光)          :            p6, after p5, 10d</span><br><span class=\"line\">model_show(滚动曝光)          :            p7, after p6, 10d</span><br><span class=\"line\"></span><br><span class=\"line\">section model_click事件</span><br><span class=\"line\"> model_click(点击上报)          :            p8, after p7, 10d</span><br></pre></td></tr></table></figure>\n<p>当当当当~<br><img src=\"/2018/06/24/神器甘特图/timer.jpg\" alt=\"img\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>什么东西在我们的生活和工作当中可有可无，但是有了它立马会提升一个档次呀~ ———— 那就是甘特图Gantt chart，就是下面这个东西啦啦啦</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gantt</span><br><span class=\"line\">dateFormat  YYYY-MM-DD</span><br><span class=\"line\">title 上报事件时间线</span><br><span class=\"line\"></span><br><span class=\"line\">section load事件</span><br><span class=\"line\">load(加载开始)：load_start_timestamp          :    p1, 2018-01-01, 1d</span><br><span class=\"line\">load(加载结束)：load_end_timestamp            :    p2, after p4, 1d</span><br><span class=\"line\"></span><br><span class=\"line\">section show事件</span><br><span class=\"line\">show(页面曝光)                            :           p3, after p1, 1d</span><br><span class=\"line\"></span><br><span class=\"line\">section stay事件</span><br><span class=\"line\">stay(duration第一次)：1000           :            p4, after p3, 1d</span><br><span class=\"line\">stay(duration持续)：5000           :           p5, after p2, 5d</span><br><span class=\"line\"></span><br><span class=\"line\">section model_show事件</span><br><span class=\"line\">model_show(默认曝光)          :            p6, after p5, 10d</span><br><span class=\"line\">model_show(滚动曝光)          :            p7, after p6, 10d</span><br><span class=\"line\"></span><br><span class=\"line\">section model_click事件</span><br><span class=\"line\"> model_click(点击上报)          :            p8, after p7, 10d</span><br></pre></td></tr></table></figure>\n<p>当当当当~<br><img src=\"/2018/06/24/神器甘特图/timer.jpg\" alt=\"img\"></p>\n"},{"title":"闭包与模块","date":"2020-05-03T10:20:15.000Z","_content":"### 一、前言\n闭包是基于词法作用域（  和动态作用域对应，词法作用域是由你写代码时，将变量写在哪里来决定的，因此当词法分析器处理代码时，会保持作用）书写代码时所产生的自然结果，甚至不需要为了利用闭包而有意地创建闭包。闭包的创建和使用在动态语言的代码中随处可见。你缺少的只是识别，拥抱和使用闭包的思维。\n\n当函数可以记住并访问所在的词法作用域，即使函数在当前词法作用域之外执行。就产生了闭包。\n\n一般情况下，当函数执行完毕，垃圾回收机制会期待函数的整个内部作用域被销毁，但当闭包存在时，会阻止这件事情的发生，事实上内部作用域依旧存在，此时内部函数依旧持有对外部函数作用域的引用，这个引用就叫做闭包。无论通过何种方式将内部函数传递到所在的词法作用域之外，他都会持有对 原始定义作用域的引用，无论在何处执行这个函数都会使用闭包。\n\n所以说，在javascript,python这种动态语言中，因为函数是一级对象，无论何时何地，只要将函数当做第一级的值类型并到处传递，都会看到闭包的运用，可以说，闭包无处不在。\n\n### 二、循环与闭包\n要说明闭包，for循环是最常见的例子。\n\n```js\nfor(var i = 1; i < 5; i++) {\n\tlet j = i\n\tsetTimeout(() => {\n\t\tconsole.log(j)\n\t}, j * 1000)\n}\n```\n\n正常情况下，我们对这段代码行为的预期分别是输出数字1~5，每秒一次，每次一个。\n但实际上，这段代码在运行时会以每秒一次的频率输出五次5。\n这里引申出一个更深入的问题，代码中到底有什么缺陷导致他的行为同语义所暗示的不一致呢？\n缺陷是我们试图假设循环中的每个迭代在运行时，都会给自己“捕获一个i的副本”。但是根据作用域的工作原理，实际情况是尽管循环中的5个函数是在各个迭代中分别定义的，但是它们都`被封闭在一个共享的全局作用域中`，因此实际上只有一个i。\n下面回到正题，缺陷是什么？我们需要更多的闭包作用于，特别是在循环的过程中每个迭代都需要一个闭包作用域。\n\nIIFE会通过声明并立即执行一个函数来创建作用域。\n\n\n```js\nfor(var i = 1; i < 5; i++) {\n\t(function(){\n\t\tsetTimeout(() => {\n\t\t\tconsole.log(i)\n\t\t}, i * 1000)\n\t})()\n}\n```\n这样可以吗？\n\n\n不行。\n如果作用域是空的，那么仅仅将他们封闭起来是不够的。仔细看一下，我们的IIFE只是一个什么都没有的空作用域，他需要包含一点实质内容才能为我们所用。\n\n他需要有自己的变量，用来在每个迭代中存储i的值：\n\n```js\nfor(var i = 1; i < 5; i++) {\n\t(function(i){\n\t\tsetTimeout(() => {\n\t\t\tconsole.log(i)\n\t\t}, i * 1000)\n\t})(i)\n}\n```\n\n#### ES6的let声明\nlet可以用来劫持块作用域，并且在这个块作用域中声明一个变量。 \n本质上这是一个将一个块转换成一个可以被关闭的作用域。然后下面这些看起来很酷的代码就可以正常运行了：\n```js\nfor(var i = 1; i < 5; i++) {\n\tlet j = i\n\tsetTimeout(() => {\n\t\tconsole.log(j)\n\t}, j * 1000)\n}\n\nfor(let i = 1; i < 5; i++) {\n\tsetTimeout(() => {\n\t\tconsole.log(i)\n\t}, i * 1000)\n}\n```\n### 三、模块\n模块是一个利用闭包的典型案例：\n\n模块模式至少具备两个条件：\n\n1）必须有外部的封闭包装函数来创建内部作用域，该函数至少被调用一次（每次调用都会创建一个新的模块作用域），如果是ITFE调用就只产生一个实例（单例模式）；\n\n2）封闭函数返回至少一个内部函数的引用（可以直接返回该内部函数，如jQuery；也可以返回一个对象，该对象至少包含一个属性，指向内部函数的引用），这样内部函数才能在私有作用域形成闭包，而且可以访问或者修改私有的状态；\n\n比如模块的一个很常见的应用就是返回作为公共API返回的对象：\n\n```js\nvar foo = (function () {\n    function change () {\n        console.log('change')\n    }\n    function identify () {\n        console.log('identify')\n    }\n    return {\n        change: change,\n        identify: identify,\n    }\n})()\n```\n模块模式另一个简单但强大的用法是命名将要作为公共API返回的对象：\n\n```js\nvar foo = function () {\n    function change (){\n        // 修改公共API\n        publicAPI.identify = identify2\n    }\n    function identify1 (){\n        console.log('identify1');\n    }\n    function identify2 (){\n        console.log('identify2');\n    }\n    var publicAPI = {\n        change:change,\n        identify:identify,\n    }\n    return publicAPI\n}\n\nfoo.identify() // identify1\nfoo.change()\nfoo.identify() // identify2\n```\n通过在模块实例的内部保留对公共API对象的内部引用，可以从内部对模块实例进行修改，包括添加删除方法和属性，以及修改他们的值。\n\n### 四、模块加载器/管理器\n模块管理器本质上并没有任何的“魔力”，本质上就是讲模块定义封装进一个友好的API。下面是一个简单的模块加载器的实现：\n```js\nvar MyModules = (function () {\n    var modules = []\n    //参数name:模块名称\n    //参数deps:依赖的模块名称\n    //impl:名为name的模块实现\n    var define = function define (name, deps, impl) {\n        var i = 0;\n        for(i; i<deps.length; i++){\n            deps[i]=modules[deps[i]];\n        }\n        modules[name] = impl.apply(impl,deps);\n    };\n    var get = function (name) {\n        return modules[name];\n    };\n    return {\n        define:define,\n        get:get\n    }\n})();\n\n//调用\nMyModules.define('bar',[],function(){\n    function hello(){\n        return 'hello';\n    }\n    return {\n        hello:hello,\n    };\n});\nMyModules.define('foo',['bar'],function(bar){\n    function awesome(){\n       console.log('foo ' + bar.hello()); \n    }\n    return{\n        awesome:awesome,\n    }    \n})\nvar bar=MyModules.get('bar');\nvar foo=MyModules.get('foo');\nfoo.awesome();\n```\n`foo`和`bar`模块东营市通过一个返回公共API的函数来定义的，`foo`甚至接受`bar`的实例作为以来参数，并能相应的使用它。\n\n#### ES6的模块机制\nES6中为模块增加了一级语法支持。在通过模块系统进行加载时，ES6会将文件当做独立的模块来处理。每个模块都可以导入其他模块或特定的API成员，同样也可以导出自己的API成员。\n\nES6的模块没有“行内”格式，必须被定义在独立的文件中（一个文件一个模块）。浏览器或引擎有一个默认的“模块加载器”可以在导入模块是同步的加载模块文件。\n\n```js\nbar.js\n\n\tfunction hello (who) {\n\t\treturn 'let me introduce:' + who\n\t}\n\n\texport hello\n\nfoo.js\n\n\timport hello from 'bar'\n\n\tvar hungry = 'hippo'\n\n\tfunction awesome () {\n\t\tconsole.log( hello( hungry ) )\n\t}\n\n\texport awesome\n\n```\nimport可以将一个模块中的一个或多个API导入到当前作用域中，并分别绑定在一个变量上。expor会将模块的一个标识符（变量，函数）导出为公共API。\n\n模块文件中的内容会被当做好像包含在作用域闭包中一样来处理，就和前面介绍的函数闭包模块一样。\n","source":"_posts/闭包与模块.md","raw":"---\ntitle: 闭包与模块\ndate: 2020-05-03 18:20:15\ntags:\ncategories: \n    - js\n---\n### 一、前言\n闭包是基于词法作用域（  和动态作用域对应，词法作用域是由你写代码时，将变量写在哪里来决定的，因此当词法分析器处理代码时，会保持作用）书写代码时所产生的自然结果，甚至不需要为了利用闭包而有意地创建闭包。闭包的创建和使用在动态语言的代码中随处可见。你缺少的只是识别，拥抱和使用闭包的思维。\n\n当函数可以记住并访问所在的词法作用域，即使函数在当前词法作用域之外执行。就产生了闭包。\n\n一般情况下，当函数执行完毕，垃圾回收机制会期待函数的整个内部作用域被销毁，但当闭包存在时，会阻止这件事情的发生，事实上内部作用域依旧存在，此时内部函数依旧持有对外部函数作用域的引用，这个引用就叫做闭包。无论通过何种方式将内部函数传递到所在的词法作用域之外，他都会持有对 原始定义作用域的引用，无论在何处执行这个函数都会使用闭包。\n\n所以说，在javascript,python这种动态语言中，因为函数是一级对象，无论何时何地，只要将函数当做第一级的值类型并到处传递，都会看到闭包的运用，可以说，闭包无处不在。\n\n### 二、循环与闭包\n要说明闭包，for循环是最常见的例子。\n\n```js\nfor(var i = 1; i < 5; i++) {\n\tlet j = i\n\tsetTimeout(() => {\n\t\tconsole.log(j)\n\t}, j * 1000)\n}\n```\n\n正常情况下，我们对这段代码行为的预期分别是输出数字1~5，每秒一次，每次一个。\n但实际上，这段代码在运行时会以每秒一次的频率输出五次5。\n这里引申出一个更深入的问题，代码中到底有什么缺陷导致他的行为同语义所暗示的不一致呢？\n缺陷是我们试图假设循环中的每个迭代在运行时，都会给自己“捕获一个i的副本”。但是根据作用域的工作原理，实际情况是尽管循环中的5个函数是在各个迭代中分别定义的，但是它们都`被封闭在一个共享的全局作用域中`，因此实际上只有一个i。\n下面回到正题，缺陷是什么？我们需要更多的闭包作用于，特别是在循环的过程中每个迭代都需要一个闭包作用域。\n\nIIFE会通过声明并立即执行一个函数来创建作用域。\n\n\n```js\nfor(var i = 1; i < 5; i++) {\n\t(function(){\n\t\tsetTimeout(() => {\n\t\t\tconsole.log(i)\n\t\t}, i * 1000)\n\t})()\n}\n```\n这样可以吗？\n\n\n不行。\n如果作用域是空的，那么仅仅将他们封闭起来是不够的。仔细看一下，我们的IIFE只是一个什么都没有的空作用域，他需要包含一点实质内容才能为我们所用。\n\n他需要有自己的变量，用来在每个迭代中存储i的值：\n\n```js\nfor(var i = 1; i < 5; i++) {\n\t(function(i){\n\t\tsetTimeout(() => {\n\t\t\tconsole.log(i)\n\t\t}, i * 1000)\n\t})(i)\n}\n```\n\n#### ES6的let声明\nlet可以用来劫持块作用域，并且在这个块作用域中声明一个变量。 \n本质上这是一个将一个块转换成一个可以被关闭的作用域。然后下面这些看起来很酷的代码就可以正常运行了：\n```js\nfor(var i = 1; i < 5; i++) {\n\tlet j = i\n\tsetTimeout(() => {\n\t\tconsole.log(j)\n\t}, j * 1000)\n}\n\nfor(let i = 1; i < 5; i++) {\n\tsetTimeout(() => {\n\t\tconsole.log(i)\n\t}, i * 1000)\n}\n```\n### 三、模块\n模块是一个利用闭包的典型案例：\n\n模块模式至少具备两个条件：\n\n1）必须有外部的封闭包装函数来创建内部作用域，该函数至少被调用一次（每次调用都会创建一个新的模块作用域），如果是ITFE调用就只产生一个实例（单例模式）；\n\n2）封闭函数返回至少一个内部函数的引用（可以直接返回该内部函数，如jQuery；也可以返回一个对象，该对象至少包含一个属性，指向内部函数的引用），这样内部函数才能在私有作用域形成闭包，而且可以访问或者修改私有的状态；\n\n比如模块的一个很常见的应用就是返回作为公共API返回的对象：\n\n```js\nvar foo = (function () {\n    function change () {\n        console.log('change')\n    }\n    function identify () {\n        console.log('identify')\n    }\n    return {\n        change: change,\n        identify: identify,\n    }\n})()\n```\n模块模式另一个简单但强大的用法是命名将要作为公共API返回的对象：\n\n```js\nvar foo = function () {\n    function change (){\n        // 修改公共API\n        publicAPI.identify = identify2\n    }\n    function identify1 (){\n        console.log('identify1');\n    }\n    function identify2 (){\n        console.log('identify2');\n    }\n    var publicAPI = {\n        change:change,\n        identify:identify,\n    }\n    return publicAPI\n}\n\nfoo.identify() // identify1\nfoo.change()\nfoo.identify() // identify2\n```\n通过在模块实例的内部保留对公共API对象的内部引用，可以从内部对模块实例进行修改，包括添加删除方法和属性，以及修改他们的值。\n\n### 四、模块加载器/管理器\n模块管理器本质上并没有任何的“魔力”，本质上就是讲模块定义封装进一个友好的API。下面是一个简单的模块加载器的实现：\n```js\nvar MyModules = (function () {\n    var modules = []\n    //参数name:模块名称\n    //参数deps:依赖的模块名称\n    //impl:名为name的模块实现\n    var define = function define (name, deps, impl) {\n        var i = 0;\n        for(i; i<deps.length; i++){\n            deps[i]=modules[deps[i]];\n        }\n        modules[name] = impl.apply(impl,deps);\n    };\n    var get = function (name) {\n        return modules[name];\n    };\n    return {\n        define:define,\n        get:get\n    }\n})();\n\n//调用\nMyModules.define('bar',[],function(){\n    function hello(){\n        return 'hello';\n    }\n    return {\n        hello:hello,\n    };\n});\nMyModules.define('foo',['bar'],function(bar){\n    function awesome(){\n       console.log('foo ' + bar.hello()); \n    }\n    return{\n        awesome:awesome,\n    }    \n})\nvar bar=MyModules.get('bar');\nvar foo=MyModules.get('foo');\nfoo.awesome();\n```\n`foo`和`bar`模块东营市通过一个返回公共API的函数来定义的，`foo`甚至接受`bar`的实例作为以来参数，并能相应的使用它。\n\n#### ES6的模块机制\nES6中为模块增加了一级语法支持。在通过模块系统进行加载时，ES6会将文件当做独立的模块来处理。每个模块都可以导入其他模块或特定的API成员，同样也可以导出自己的API成员。\n\nES6的模块没有“行内”格式，必须被定义在独立的文件中（一个文件一个模块）。浏览器或引擎有一个默认的“模块加载器”可以在导入模块是同步的加载模块文件。\n\n```js\nbar.js\n\n\tfunction hello (who) {\n\t\treturn 'let me introduce:' + who\n\t}\n\n\texport hello\n\nfoo.js\n\n\timport hello from 'bar'\n\n\tvar hungry = 'hippo'\n\n\tfunction awesome () {\n\t\tconsole.log( hello( hungry ) )\n\t}\n\n\texport awesome\n\n```\nimport可以将一个模块中的一个或多个API导入到当前作用域中，并分别绑定在一个变量上。expor会将模块的一个标识符（变量，函数）导出为公共API。\n\n模块文件中的内容会被当做好像包含在作用域闭包中一样来处理，就和前面介绍的函数闭包模块一样。\n","slug":"闭包与模块","published":1,"updated":"2020-05-03T12:09:53.740Z","_id":"ck9qxci4g000e0nurh5x13sxw","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"一、前言\"><a href=\"#一、前言\" class=\"headerlink\" title=\"一、前言\"></a>一、前言</h3><p>闭包是基于词法作用域（  和动态作用域对应，词法作用域是由你写代码时，将变量写在哪里来决定的，因此当词法分析器处理代码时，会保持作用）书写代码时所产生的自然结果，甚至不需要为了利用闭包而有意地创建闭包。闭包的创建和使用在动态语言的代码中随处可见。你缺少的只是识别，拥抱和使用闭包的思维。</p>\n<p>当函数可以记住并访问所在的词法作用域，即使函数在当前词法作用域之外执行。就产生了闭包。</p>\n<p>一般情况下，当函数执行完毕，垃圾回收机制会期待函数的整个内部作用域被销毁，但当闭包存在时，会阻止这件事情的发生，事实上内部作用域依旧存在，此时内部函数依旧持有对外部函数作用域的引用，这个引用就叫做闭包。无论通过何种方式将内部函数传递到所在的词法作用域之外，他都会持有对 原始定义作用域的引用，无论在何处执行这个函数都会使用闭包。</p>\n<p>所以说，在javascript,python这种动态语言中，因为函数是一级对象，无论何时何地，只要将函数当做第一级的值类型并到处传递，都会看到闭包的运用，可以说，闭包无处不在。</p>\n<h3 id=\"二、循环与闭包\"><a href=\"#二、循环与闭包\" class=\"headerlink\" title=\"二、循环与闭包\"></a>二、循环与闭包</h3><p>要说明闭包，for循环是最常见的例子。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> j = i</span><br><span class=\"line\">\tsetTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(j)</span><br><span class=\"line\">\t&#125;, j * <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>正常情况下，我们对这段代码行为的预期分别是输出数字1~5，每秒一次，每次一个。<br>但实际上，这段代码在运行时会以每秒一次的频率输出五次5。<br>这里引申出一个更深入的问题，代码中到底有什么缺陷导致他的行为同语义所暗示的不一致呢？<br>缺陷是我们试图假设循环中的每个迭代在运行时，都会给自己“捕获一个i的副本”。但是根据作用域的工作原理，实际情况是尽管循环中的5个函数是在各个迭代中分别定义的，但是它们都<code>被封闭在一个共享的全局作用域中</code>，因此实际上只有一个i。<br>下面回到正题，缺陷是什么？我们需要更多的闭包作用于，特别是在循环的过程中每个迭代都需要一个闭包作用域。</p>\n<p>IIFE会通过声明并立即执行一个函数来创建作用域。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\tsetTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">console</span>.log(i)</span><br><span class=\"line\">\t\t&#125;, i * <span class=\"number\">1000</span>)</span><br><span class=\"line\">\t&#125;)()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样可以吗？</p>\n<p>不行。<br>如果作用域是空的，那么仅仅将他们封闭起来是不够的。仔细看一下，我们的IIFE只是一个什么都没有的空作用域，他需要包含一点实质内容才能为我们所用。</p>\n<p>他需要有自己的变量，用来在每个迭代中存储i的值：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">i</span>)</span>&#123;</span><br><span class=\"line\">\t\tsetTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">console</span>.log(i)</span><br><span class=\"line\">\t\t&#125;, i * <span class=\"number\">1000</span>)</span><br><span class=\"line\">\t&#125;)(i)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"ES6的let声明\"><a href=\"#ES6的let声明\" class=\"headerlink\" title=\"ES6的let声明\"></a>ES6的let声明</h4><p>let可以用来劫持块作用域，并且在这个块作用域中声明一个变量。<br>本质上这是一个将一个块转换成一个可以被关闭的作用域。然后下面这些看起来很酷的代码就可以正常运行了：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> j = i</span><br><span class=\"line\">\tsetTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(j)</span><br><span class=\"line\">\t&#125;, j * <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\tsetTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(i)</span><br><span class=\"line\">\t&#125;, i * <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"三、模块\"><a href=\"#三、模块\" class=\"headerlink\" title=\"三、模块\"></a>三、模块</h3><p>模块是一个利用闭包的典型案例：</p>\n<p>模块模式至少具备两个条件：</p>\n<p>1）必须有外部的封闭包装函数来创建内部作用域，该函数至少被调用一次（每次调用都会创建一个新的模块作用域），如果是ITFE调用就只产生一个实例（单例模式）；</p>\n<p>2）封闭函数返回至少一个内部函数的引用（可以直接返回该内部函数，如jQuery；也可以返回一个对象，该对象至少包含一个属性，指向内部函数的引用），这样内部函数才能在私有作用域形成闭包，而且可以访问或者修改私有的状态；</p>\n<p>比如模块的一个很常见的应用就是返回作为公共API返回的对象：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> foo = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">change</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'change'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">identify</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'identify'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        change: change,</span><br><span class=\"line\">        identify: identify,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)()</span><br></pre></td></tr></table></figure>\n<p>模块模式另一个简单但强大的用法是命名将要作为公共API返回的对象：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">change</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 修改公共API</span></span><br><span class=\"line\">        publicAPI.identify = identify2</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">identify1</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'identify1'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">identify2</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'identify2'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> publicAPI = &#123;</span><br><span class=\"line\">        change:change,</span><br><span class=\"line\">        identify:identify,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> publicAPI</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">foo.identify() <span class=\"comment\">// identify1</span></span><br><span class=\"line\">foo.change()</span><br><span class=\"line\">foo.identify() <span class=\"comment\">// identify2</span></span><br></pre></td></tr></table></figure>\n<p>通过在模块实例的内部保留对公共API对象的内部引用，可以从内部对模块实例进行修改，包括添加删除方法和属性，以及修改他们的值。</p>\n<h3 id=\"四、模块加载器-管理器\"><a href=\"#四、模块加载器-管理器\" class=\"headerlink\" title=\"四、模块加载器/管理器\"></a>四、模块加载器/管理器</h3><p>模块管理器本质上并没有任何的“魔力”，本质上就是讲模块定义封装进一个友好的API。下面是一个简单的模块加载器的实现：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> MyModules = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> modules = []</span><br><span class=\"line\">    <span class=\"comment\">//参数name:模块名称</span></span><br><span class=\"line\">    <span class=\"comment\">//参数deps:依赖的模块名称</span></span><br><span class=\"line\">    <span class=\"comment\">//impl:名为name的模块实现</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> define = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">define</span> (<span class=\"params\">name, deps, impl</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(i; i&lt;deps.length; i++)&#123;</span><br><span class=\"line\">            deps[i]=modules[deps[i]];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        modules[name] = impl.apply(impl,deps);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> get = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> modules[name];</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        define:define,</span><br><span class=\"line\">        get:get</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//调用</span></span><br><span class=\"line\">MyModules.define(<span class=\"string\">'bar'</span>,[],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hello</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'hello'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        hello:hello,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">MyModules.define(<span class=\"string\">'foo'</span>,[<span class=\"string\">'bar'</span>],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">bar</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">awesome</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">       <span class=\"built_in\">console</span>.log(<span class=\"string\">'foo '</span> + bar.hello()); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">        awesome:awesome,</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar=MyModules.get(<span class=\"string\">'bar'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo=MyModules.get(<span class=\"string\">'foo'</span>);</span><br><span class=\"line\">foo.awesome();</span><br></pre></td></tr></table></figure></p>\n<p><code>foo</code>和<code>bar</code>模块东营市通过一个返回公共API的函数来定义的，<code>foo</code>甚至接受<code>bar</code>的实例作为以来参数，并能相应的使用它。</p>\n<h4 id=\"ES6的模块机制\"><a href=\"#ES6的模块机制\" class=\"headerlink\" title=\"ES6的模块机制\"></a>ES6的模块机制</h4><p>ES6中为模块增加了一级语法支持。在通过模块系统进行加载时，ES6会将文件当做独立的模块来处理。每个模块都可以导入其他模块或特定的API成员，同样也可以导出自己的API成员。</p>\n<p>ES6的模块没有“行内”格式，必须被定义在独立的文件中（一个文件一个模块）。浏览器或引擎有一个默认的“模块加载器”可以在导入模块是同步的加载模块文件。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bar.js</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hello</span> (<span class=\"params\">who</span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">'let me introduce:'</span> + who</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">export</span> hello</span><br><span class=\"line\"></span><br><span class=\"line\">foo.js</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">import</span> hello <span class=\"keyword\">from</span> <span class=\"string\">'bar'</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> hungry = <span class=\"string\">'hippo'</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">awesome</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log( hello( hungry ) )</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">export</span> awesome</span><br></pre></td></tr></table></figure>\n<p>import可以将一个模块中的一个或多个API导入到当前作用域中，并分别绑定在一个变量上。expor会将模块的一个标识符（变量，函数）导出为公共API。</p>\n<p>模块文件中的内容会被当做好像包含在作用域闭包中一样来处理，就和前面介绍的函数闭包模块一样。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一、前言\"><a href=\"#一、前言\" class=\"headerlink\" title=\"一、前言\"></a>一、前言</h3><p>闭包是基于词法作用域（  和动态作用域对应，词法作用域是由你写代码时，将变量写在哪里来决定的，因此当词法分析器处理代码时，会保持作用）书写代码时所产生的自然结果，甚至不需要为了利用闭包而有意地创建闭包。闭包的创建和使用在动态语言的代码中随处可见。你缺少的只是识别，拥抱和使用闭包的思维。</p>\n<p>当函数可以记住并访问所在的词法作用域，即使函数在当前词法作用域之外执行。就产生了闭包。</p>\n<p>一般情况下，当函数执行完毕，垃圾回收机制会期待函数的整个内部作用域被销毁，但当闭包存在时，会阻止这件事情的发生，事实上内部作用域依旧存在，此时内部函数依旧持有对外部函数作用域的引用，这个引用就叫做闭包。无论通过何种方式将内部函数传递到所在的词法作用域之外，他都会持有对 原始定义作用域的引用，无论在何处执行这个函数都会使用闭包。</p>\n<p>所以说，在javascript,python这种动态语言中，因为函数是一级对象，无论何时何地，只要将函数当做第一级的值类型并到处传递，都会看到闭包的运用，可以说，闭包无处不在。</p>\n<h3 id=\"二、循环与闭包\"><a href=\"#二、循环与闭包\" class=\"headerlink\" title=\"二、循环与闭包\"></a>二、循环与闭包</h3><p>要说明闭包，for循环是最常见的例子。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> j = i</span><br><span class=\"line\">\tsetTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(j)</span><br><span class=\"line\">\t&#125;, j * <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>正常情况下，我们对这段代码行为的预期分别是输出数字1~5，每秒一次，每次一个。<br>但实际上，这段代码在运行时会以每秒一次的频率输出五次5。<br>这里引申出一个更深入的问题，代码中到底有什么缺陷导致他的行为同语义所暗示的不一致呢？<br>缺陷是我们试图假设循环中的每个迭代在运行时，都会给自己“捕获一个i的副本”。但是根据作用域的工作原理，实际情况是尽管循环中的5个函数是在各个迭代中分别定义的，但是它们都<code>被封闭在一个共享的全局作用域中</code>，因此实际上只有一个i。<br>下面回到正题，缺陷是什么？我们需要更多的闭包作用于，特别是在循环的过程中每个迭代都需要一个闭包作用域。</p>\n<p>IIFE会通过声明并立即执行一个函数来创建作用域。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">\t\tsetTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">console</span>.log(i)</span><br><span class=\"line\">\t\t&#125;, i * <span class=\"number\">1000</span>)</span><br><span class=\"line\">\t&#125;)()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样可以吗？</p>\n<p>不行。<br>如果作用域是空的，那么仅仅将他们封闭起来是不够的。仔细看一下，我们的IIFE只是一个什么都没有的空作用域，他需要包含一点实质内容才能为我们所用。</p>\n<p>他需要有自己的变量，用来在每个迭代中存储i的值：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">i</span>)</span>&#123;</span><br><span class=\"line\">\t\tsetTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">console</span>.log(i)</span><br><span class=\"line\">\t\t&#125;, i * <span class=\"number\">1000</span>)</span><br><span class=\"line\">\t&#125;)(i)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"ES6的let声明\"><a href=\"#ES6的let声明\" class=\"headerlink\" title=\"ES6的let声明\"></a>ES6的let声明</h4><p>let可以用来劫持块作用域，并且在这个块作用域中声明一个变量。<br>本质上这是一个将一个块转换成一个可以被关闭的作用域。然后下面这些看起来很酷的代码就可以正常运行了：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> j = i</span><br><span class=\"line\">\tsetTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(j)</span><br><span class=\"line\">\t&#125;, j * <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">\tsetTimeout(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log(i)</span><br><span class=\"line\">\t&#125;, i * <span class=\"number\">1000</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"三、模块\"><a href=\"#三、模块\" class=\"headerlink\" title=\"三、模块\"></a>三、模块</h3><p>模块是一个利用闭包的典型案例：</p>\n<p>模块模式至少具备两个条件：</p>\n<p>1）必须有外部的封闭包装函数来创建内部作用域，该函数至少被调用一次（每次调用都会创建一个新的模块作用域），如果是ITFE调用就只产生一个实例（单例模式）；</p>\n<p>2）封闭函数返回至少一个内部函数的引用（可以直接返回该内部函数，如jQuery；也可以返回一个对象，该对象至少包含一个属性，指向内部函数的引用），这样内部函数才能在私有作用域形成闭包，而且可以访问或者修改私有的状态；</p>\n<p>比如模块的一个很常见的应用就是返回作为公共API返回的对象：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> foo = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">change</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'change'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">identify</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'identify'</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        change: change,</span><br><span class=\"line\">        identify: identify,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)()</span><br></pre></td></tr></table></figure>\n<p>模块模式另一个简单但强大的用法是命名将要作为公共API返回的对象：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> foo = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">change</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 修改公共API</span></span><br><span class=\"line\">        publicAPI.identify = identify2</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">identify1</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'identify1'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">identify2</span> (<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">'identify2'</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> publicAPI = &#123;</span><br><span class=\"line\">        change:change,</span><br><span class=\"line\">        identify:identify,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> publicAPI</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">foo.identify() <span class=\"comment\">// identify1</span></span><br><span class=\"line\">foo.change()</span><br><span class=\"line\">foo.identify() <span class=\"comment\">// identify2</span></span><br></pre></td></tr></table></figure>\n<p>通过在模块实例的内部保留对公共API对象的内部引用，可以从内部对模块实例进行修改，包括添加删除方法和属性，以及修改他们的值。</p>\n<h3 id=\"四、模块加载器-管理器\"><a href=\"#四、模块加载器-管理器\" class=\"headerlink\" title=\"四、模块加载器/管理器\"></a>四、模块加载器/管理器</h3><p>模块管理器本质上并没有任何的“魔力”，本质上就是讲模块定义封装进一个友好的API。下面是一个简单的模块加载器的实现：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> MyModules = (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> modules = []</span><br><span class=\"line\">    <span class=\"comment\">//参数name:模块名称</span></span><br><span class=\"line\">    <span class=\"comment\">//参数deps:依赖的模块名称</span></span><br><span class=\"line\">    <span class=\"comment\">//impl:名为name的模块实现</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> define = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">define</span> (<span class=\"params\">name, deps, impl</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(i; i&lt;deps.length; i++)&#123;</span><br><span class=\"line\">            deps[i]=modules[deps[i]];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        modules[name] = impl.apply(impl,deps);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> get = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">name</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> modules[name];</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        define:define,</span><br><span class=\"line\">        get:get</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//调用</span></span><br><span class=\"line\">MyModules.define(<span class=\"string\">'bar'</span>,[],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hello</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">'hello'</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        hello:hello,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">MyModules.define(<span class=\"string\">'foo'</span>,[<span class=\"string\">'bar'</span>],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">bar</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">awesome</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">       <span class=\"built_in\">console</span>.log(<span class=\"string\">'foo '</span> + bar.hello()); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>&#123;</span><br><span class=\"line\">        awesome:awesome,</span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"keyword\">var</span> bar=MyModules.get(<span class=\"string\">'bar'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> foo=MyModules.get(<span class=\"string\">'foo'</span>);</span><br><span class=\"line\">foo.awesome();</span><br></pre></td></tr></table></figure></p>\n<p><code>foo</code>和<code>bar</code>模块东营市通过一个返回公共API的函数来定义的，<code>foo</code>甚至接受<code>bar</code>的实例作为以来参数，并能相应的使用它。</p>\n<h4 id=\"ES6的模块机制\"><a href=\"#ES6的模块机制\" class=\"headerlink\" title=\"ES6的模块机制\"></a>ES6的模块机制</h4><p>ES6中为模块增加了一级语法支持。在通过模块系统进行加载时，ES6会将文件当做独立的模块来处理。每个模块都可以导入其他模块或特定的API成员，同样也可以导出自己的API成员。</p>\n<p>ES6的模块没有“行内”格式，必须被定义在独立的文件中（一个文件一个模块）。浏览器或引擎有一个默认的“模块加载器”可以在导入模块是同步的加载模块文件。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bar.js</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">hello</span> (<span class=\"params\">who</span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">'let me introduce:'</span> + who</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">export</span> hello</span><br><span class=\"line\"></span><br><span class=\"line\">foo.js</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">import</span> hello <span class=\"keyword\">from</span> <span class=\"string\">'bar'</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">var</span> hungry = <span class=\"string\">'hippo'</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">awesome</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">console</span>.log( hello( hungry ) )</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">export</span> awesome</span><br></pre></td></tr></table></figure>\n<p>import可以将一个模块中的一个或多个API导入到当前作用域中，并分别绑定在一个变量上。expor会将模块的一个标识符（变量，函数）导出为公共API。</p>\n<p>模块文件中的内容会被当做好像包含在作用域闭包中一样来处理，就和前面介绍的函数闭包模块一样。</p>\n"},{"title":"一、将Vue项目改造成Nuxt项目-了解SSR","date":"2020-03-25T08:52:00.000Z","_content":"### 一、SSR概念\n**SSR** \nserver side render 服务端渲染\n\n**客户端渲染**\n页面初始加载的 HTML 页面中无网页展示内容，需要加载执行Js代码，通过 js 渲染生成页面。比较代表性的为React,Vue,Angular三大前端框架的SPA(Single Page Application)应用。\n\n**服务端渲染**\n用户请求服务器，服务器上直接生成 HTML 内容并返回给浏览器。客户端所需要做的仅仅是html页面的展现和之后的DOM事件处理。代表为传统的JSP,PHP,ASP应用。\n\n**同构** \n同构这个概念存在于 Vue，React 这些新型的前端框架中，同构实际上是客户端渲染和服务器端渲染的一个整合。两端共用一套代码，只是服务端采用nodeJS执行，客户端采用JS执行；在加载首屏的时候，执行服务端代码，页面渲染和请求js同时进行。从首屏进入第二页时就不请求服务端代码了，直接执行Vue的路由跳转。\n（这里首屏的概念不是首页，而是用户打开的第一页，例如：A打开司机招聘的首页，点击其中一条详情进入详情页，然后将详情页分享给B，B打开的是详情页。这里A的首屏是首页，B的首屏是详情页）\n\n### 二、使用SSR的利弊\n#### SSR的优势\n1. 更利于SEO\n爬虫只会爬取源码，不会执行网站的任何脚本（Google除外，Google等页面加载完之后再去爬取内容，所以Google的爬虫可以爬取单页面应用）\n2. 更利于首屏渲染\n首屏的渲染是node发送过来的html字符串，并不依赖于js文件了，这就会使用户更快的看到页面的内容。尤其是针对大型单页应用，打包后文件体积比较大，普通客户端渲染加载所有所需文件时间较长，首页就会有一个很长的白屏等待时间。\n\n#### SSR的局限\n1. 服务端压力较大\n本来是通过客户端完成渲染，现在统一到服务端node服务去做。尤其是高并发访问的情况，会大量占用服务端CPU资源；\n2. 开发条件受限\n服务端代与客户端共用一套代码，但是执行周期不一致，写法也有略微不同\n3. 学习成本相对较高\n还需要掌握node、Koa2等相关技术。相对于客户端渲染，项目构建、部署过程更加复杂。\n\n\n### 三、介绍NUXT \n [nuxt官网](https://zh.nuxtjs.org/)\n#### nuxt的优点：\n - 基于 Vue.js\n - 自动代码分层\n - 服务端渲染\n - 强大的路由功能，支持异步数据\n - 静态文件服务\n - ES2015+ 语法支持\n - 打包和压缩 JS 和 CSS\n - HTML 头部标签管理\n - 本地开发支持热加载\n - 集成 ESLint\n - 支持各种样式预处理器： SASS、LESS、 Stylus 等等\n - 支持 HTTP/2 推送\n\n#### 流程图\n下图阐述了 Nuxt.js 应用一个完整的服务器请求到渲染（或用户通过 `<nuxt-link> `切换路由渲染页面）的流程：\n![image](一、将Vue项目改造成Nuxt项目-了解SSR/zhouqi.webp)\n生命周期流程图，红框内的是Nuxt的生命周期(运行在`服务端`)，黄框内`同时运行在服务端&&客户端`上，绿框内则运行在`客户端`\n1. 红框、黄框内的周期都不存在Window,document,navigator对象\n```js\nexport default {\n  asyncData() {\n    console.log(window) // 服务端报错\n  },\n  fetch() {\n    console.log(window) // 服务端报错\n  },\n  created () {\n    console.log(window) // undefined\n  },\n  mounted () {\n    console.log(window) // Window {postMessage: ƒ, blur: ƒ, focus: ƒ, close: ƒ, frames: Window, …}\n  }\n}\n```\n但也不是不可以在这些周期使用客户端代码，只需要加一个判断平台的条件即可：\n```js\nif (process.client){\n  // 这里执行服务端不支持的代码\n}\n```\n\n### 三、开始\n1、运行一个NUXT项目\n```js\n$ npx create-nuxt-app abc\n```\n我的电脑运行这条命令慢的出奇，所以我用了另一种方式\n```js\n$ npm install -g @vue/cli-init\n// 如果已安装过vue-cli可以不用执行上面这条\n$ vue init nuxt/starter abc\n```\n![image](一、将Vue项目改造成Nuxt项目-了解SSR/img1.jpg)\n2、启动项目\n```js\n$ cd abc\n$ npm install\n$ npm run dev\n// 在浏览器里执行：`http://localhost:3000/`\n```\n这时项目中会多一个.nuxt的文件\n\n![image](一、将Vue项目改造成Nuxt项目-了解SSR/img2.jpg)\n\n3、打包\n```js\nnpm run build\n```\n这时看到.nuxt中的文件变了，并且多了一个dist文件夹（这里有一个坑，通常我们的.gitignore文件会忽略dist文件，这里要注意）\n![image](一、将Vue项目改造成Nuxt项目-了解SSR/img3.jpg)\n\n4、目录详解\n```js\n|-- .nuxt                            // Nuxt运行时自动生成，和build之后的代码\n|-- assets                           // 资源目录 assets 用于组织未编译的静态资源如 LESS、SASS 或 JavaScript\n|-- components                       // 用于自己编写的Vue组件，比如滚动组件，日历组件，分页组件\n|-- layouts                          // 布局目录，用于组织应用的布局组件，不可更改。\n|-- middleware                       // 用于存放中间件\n|-- pages                            // 用于存放写的页面，我们主要的工作区域\n|-- plugins                          // 用于存放JavaScript插件的地方\n|-- static                           // 用于存放静态资源文件，比如图片\n|-- store                            // 用于组织应用的Vuex 状态管理。\n|-- .editorconfig                    // 开发工具格式配置\n|-- .eslintrc.js                     // ESLint的配置文件，用于检查代码格式\n|-- .gitignore                       // 配置git不上传的文件\n|-- nuxt.config.js                   // 用于组织Nuxt.js应用的个性化配置，已覆盖默认配置\n|-- package-lock.json                // npm自动生成，用于帮助package的统一性设置的，yarn也有相同的操作\n|-- package-lock.json                // npm自动生成，用于帮助package的统一性设置的，yarn也有相同的操作\n|-- package.json                     // npm包管理配置文件\n```","source":"_posts/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR.md","raw":"---\ntitle: 一、将Vue项目改造成Nuxt项目-了解SSR\ndate: 2020-03-25 16:52:00\ntags: \n  - javascript\n  - nuxt\n  - vue\ncategories:\n  - 将Vue项目改造成Nuxt项目\n---\n### 一、SSR概念\n**SSR** \nserver side render 服务端渲染\n\n**客户端渲染**\n页面初始加载的 HTML 页面中无网页展示内容，需要加载执行Js代码，通过 js 渲染生成页面。比较代表性的为React,Vue,Angular三大前端框架的SPA(Single Page Application)应用。\n\n**服务端渲染**\n用户请求服务器，服务器上直接生成 HTML 内容并返回给浏览器。客户端所需要做的仅仅是html页面的展现和之后的DOM事件处理。代表为传统的JSP,PHP,ASP应用。\n\n**同构** \n同构这个概念存在于 Vue，React 这些新型的前端框架中，同构实际上是客户端渲染和服务器端渲染的一个整合。两端共用一套代码，只是服务端采用nodeJS执行，客户端采用JS执行；在加载首屏的时候，执行服务端代码，页面渲染和请求js同时进行。从首屏进入第二页时就不请求服务端代码了，直接执行Vue的路由跳转。\n（这里首屏的概念不是首页，而是用户打开的第一页，例如：A打开司机招聘的首页，点击其中一条详情进入详情页，然后将详情页分享给B，B打开的是详情页。这里A的首屏是首页，B的首屏是详情页）\n\n### 二、使用SSR的利弊\n#### SSR的优势\n1. 更利于SEO\n爬虫只会爬取源码，不会执行网站的任何脚本（Google除外，Google等页面加载完之后再去爬取内容，所以Google的爬虫可以爬取单页面应用）\n2. 更利于首屏渲染\n首屏的渲染是node发送过来的html字符串，并不依赖于js文件了，这就会使用户更快的看到页面的内容。尤其是针对大型单页应用，打包后文件体积比较大，普通客户端渲染加载所有所需文件时间较长，首页就会有一个很长的白屏等待时间。\n\n#### SSR的局限\n1. 服务端压力较大\n本来是通过客户端完成渲染，现在统一到服务端node服务去做。尤其是高并发访问的情况，会大量占用服务端CPU资源；\n2. 开发条件受限\n服务端代与客户端共用一套代码，但是执行周期不一致，写法也有略微不同\n3. 学习成本相对较高\n还需要掌握node、Koa2等相关技术。相对于客户端渲染，项目构建、部署过程更加复杂。\n\n\n### 三、介绍NUXT \n [nuxt官网](https://zh.nuxtjs.org/)\n#### nuxt的优点：\n - 基于 Vue.js\n - 自动代码分层\n - 服务端渲染\n - 强大的路由功能，支持异步数据\n - 静态文件服务\n - ES2015+ 语法支持\n - 打包和压缩 JS 和 CSS\n - HTML 头部标签管理\n - 本地开发支持热加载\n - 集成 ESLint\n - 支持各种样式预处理器： SASS、LESS、 Stylus 等等\n - 支持 HTTP/2 推送\n\n#### 流程图\n下图阐述了 Nuxt.js 应用一个完整的服务器请求到渲染（或用户通过 `<nuxt-link> `切换路由渲染页面）的流程：\n![image](一、将Vue项目改造成Nuxt项目-了解SSR/zhouqi.webp)\n生命周期流程图，红框内的是Nuxt的生命周期(运行在`服务端`)，黄框内`同时运行在服务端&&客户端`上，绿框内则运行在`客户端`\n1. 红框、黄框内的周期都不存在Window,document,navigator对象\n```js\nexport default {\n  asyncData() {\n    console.log(window) // 服务端报错\n  },\n  fetch() {\n    console.log(window) // 服务端报错\n  },\n  created () {\n    console.log(window) // undefined\n  },\n  mounted () {\n    console.log(window) // Window {postMessage: ƒ, blur: ƒ, focus: ƒ, close: ƒ, frames: Window, …}\n  }\n}\n```\n但也不是不可以在这些周期使用客户端代码，只需要加一个判断平台的条件即可：\n```js\nif (process.client){\n  // 这里执行服务端不支持的代码\n}\n```\n\n### 三、开始\n1、运行一个NUXT项目\n```js\n$ npx create-nuxt-app abc\n```\n我的电脑运行这条命令慢的出奇，所以我用了另一种方式\n```js\n$ npm install -g @vue/cli-init\n// 如果已安装过vue-cli可以不用执行上面这条\n$ vue init nuxt/starter abc\n```\n![image](一、将Vue项目改造成Nuxt项目-了解SSR/img1.jpg)\n2、启动项目\n```js\n$ cd abc\n$ npm install\n$ npm run dev\n// 在浏览器里执行：`http://localhost:3000/`\n```\n这时项目中会多一个.nuxt的文件\n\n![image](一、将Vue项目改造成Nuxt项目-了解SSR/img2.jpg)\n\n3、打包\n```js\nnpm run build\n```\n这时看到.nuxt中的文件变了，并且多了一个dist文件夹（这里有一个坑，通常我们的.gitignore文件会忽略dist文件，这里要注意）\n![image](一、将Vue项目改造成Nuxt项目-了解SSR/img3.jpg)\n\n4、目录详解\n```js\n|-- .nuxt                            // Nuxt运行时自动生成，和build之后的代码\n|-- assets                           // 资源目录 assets 用于组织未编译的静态资源如 LESS、SASS 或 JavaScript\n|-- components                       // 用于自己编写的Vue组件，比如滚动组件，日历组件，分页组件\n|-- layouts                          // 布局目录，用于组织应用的布局组件，不可更改。\n|-- middleware                       // 用于存放中间件\n|-- pages                            // 用于存放写的页面，我们主要的工作区域\n|-- plugins                          // 用于存放JavaScript插件的地方\n|-- static                           // 用于存放静态资源文件，比如图片\n|-- store                            // 用于组织应用的Vuex 状态管理。\n|-- .editorconfig                    // 开发工具格式配置\n|-- .eslintrc.js                     // ESLint的配置文件，用于检查代码格式\n|-- .gitignore                       // 配置git不上传的文件\n|-- nuxt.config.js                   // 用于组织Nuxt.js应用的个性化配置，已覆盖默认配置\n|-- package-lock.json                // npm自动生成，用于帮助package的统一性设置的，yarn也有相同的操作\n|-- package-lock.json                // npm自动生成，用于帮助package的统一性设置的，yarn也有相同的操作\n|-- package.json                     // npm包管理配置文件\n```","slug":"nuxt/一、将Vue项目改造成Nuxt项目-了解SSR","published":1,"updated":"2020-05-03T09:33:18.865Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9qxcia600120nuriqozrv50","content":"<h3 id=\"一、SSR概念\"><a href=\"#一、SSR概念\" class=\"headerlink\" title=\"一、SSR概念\"></a>一、SSR概念</h3><p><strong>SSR</strong><br>server side render 服务端渲染</p>\n<p><strong>客户端渲染</strong><br>页面初始加载的 HTML 页面中无网页展示内容，需要加载执行Js代码，通过 js 渲染生成页面。比较代表性的为React,Vue,Angular三大前端框架的SPA(Single Page Application)应用。</p>\n<p><strong>服务端渲染</strong><br>用户请求服务器，服务器上直接生成 HTML 内容并返回给浏览器。客户端所需要做的仅仅是html页面的展现和之后的DOM事件处理。代表为传统的JSP,PHP,ASP应用。</p>\n<p><strong>同构</strong><br>同构这个概念存在于 Vue，React 这些新型的前端框架中，同构实际上是客户端渲染和服务器端渲染的一个整合。两端共用一套代码，只是服务端采用nodeJS执行，客户端采用JS执行；在加载首屏的时候，执行服务端代码，页面渲染和请求js同时进行。从首屏进入第二页时就不请求服务端代码了，直接执行Vue的路由跳转。<br>（这里首屏的概念不是首页，而是用户打开的第一页，例如：A打开司机招聘的首页，点击其中一条详情进入详情页，然后将详情页分享给B，B打开的是详情页。这里A的首屏是首页，B的首屏是详情页）</p>\n<h3 id=\"二、使用SSR的利弊\"><a href=\"#二、使用SSR的利弊\" class=\"headerlink\" title=\"二、使用SSR的利弊\"></a>二、使用SSR的利弊</h3><h4 id=\"SSR的优势\"><a href=\"#SSR的优势\" class=\"headerlink\" title=\"SSR的优势\"></a>SSR的优势</h4><ol>\n<li>更利于SEO<br>爬虫只会爬取源码，不会执行网站的任何脚本（Google除外，Google等页面加载完之后再去爬取内容，所以Google的爬虫可以爬取单页面应用）</li>\n<li>更利于首屏渲染<br>首屏的渲染是node发送过来的html字符串，并不依赖于js文件了，这就会使用户更快的看到页面的内容。尤其是针对大型单页应用，打包后文件体积比较大，普通客户端渲染加载所有所需文件时间较长，首页就会有一个很长的白屏等待时间。</li>\n</ol>\n<h4 id=\"SSR的局限\"><a href=\"#SSR的局限\" class=\"headerlink\" title=\"SSR的局限\"></a>SSR的局限</h4><ol>\n<li>服务端压力较大<br>本来是通过客户端完成渲染，现在统一到服务端node服务去做。尤其是高并发访问的情况，会大量占用服务端CPU资源；</li>\n<li>开发条件受限<br>服务端代与客户端共用一套代码，但是执行周期不一致，写法也有略微不同</li>\n<li>学习成本相对较高<br>还需要掌握node、Koa2等相关技术。相对于客户端渲染，项目构建、部署过程更加复杂。</li>\n</ol>\n<h3 id=\"三、介绍NUXT\"><a href=\"#三、介绍NUXT\" class=\"headerlink\" title=\"三、介绍NUXT\"></a>三、介绍NUXT</h3><p> <a href=\"https://zh.nuxtjs.org/\" target=\"_blank\" rel=\"noopener\">nuxt官网</a></p>\n<h4 id=\"nuxt的优点：\"><a href=\"#nuxt的优点：\" class=\"headerlink\" title=\"nuxt的优点：\"></a>nuxt的优点：</h4><ul>\n<li>基于 Vue.js</li>\n<li>自动代码分层</li>\n<li>服务端渲染</li>\n<li>强大的路由功能，支持异步数据</li>\n<li>静态文件服务</li>\n<li>ES2015+ 语法支持</li>\n<li>打包和压缩 JS 和 CSS</li>\n<li>HTML 头部标签管理</li>\n<li>本地开发支持热加载</li>\n<li>集成 ESLint</li>\n<li>支持各种样式预处理器： SASS、LESS、 Stylus 等等</li>\n<li>支持 HTTP/2 推送</li>\n</ul>\n<h4 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h4><p>下图阐述了 Nuxt.js 应用一个完整的服务器请求到渲染（或用户通过 <code>&lt;nuxt-link&gt;</code>切换路由渲染页面）的流程：<br><img src=\"/2020/03/25/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR/zhouqi.webp\" alt=\"image\"><br>生命周期流程图，红框内的是Nuxt的生命周期(运行在<code>服务端</code>)，黄框内<code>同时运行在服务端&amp;&amp;客户端</code>上，绿框内则运行在<code>客户端</code></p>\n<ol>\n<li>红框、黄框内的周期都不存在Window,document,navigator对象<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  asyncData() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>) <span class=\"comment\">// 服务端报错</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  fetch() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>) <span class=\"comment\">// 服务端报错</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  created () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>) <span class=\"comment\">// undefined</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mounted () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>) <span class=\"comment\">// Window &#123;postMessage: ƒ, blur: ƒ, focus: ƒ, close: ƒ, frames: Window, …&#125;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>但也不是不可以在这些周期使用客户端代码，只需要加一个判断平台的条件即可：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (process.client)&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 这里执行服务端不支持的代码</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"三、开始\"><a href=\"#三、开始\" class=\"headerlink\" title=\"三、开始\"></a>三、开始</h3><p>1、运行一个NUXT项目<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npx create-nuxt-app abc</span><br></pre></td></tr></table></figure></p>\n<p>我的电脑运行这条命令慢的出奇，所以我用了另一种方式<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g @vue/cli-init</span><br><span class=\"line\"><span class=\"comment\">// 如果已安装过vue-cli可以不用执行上面这条</span></span><br><span class=\"line\">$ vue init nuxt/starter abc</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"/2020/03/25/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR/img1.jpg\" alt=\"image\"><br>2、启动项目<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd abc</span><br><span class=\"line\">$ npm install</span><br><span class=\"line\">$ npm run dev</span><br><span class=\"line\"><span class=\"comment\">// 在浏览器里执行：`http://localhost:3000/`</span></span><br></pre></td></tr></table></figure></p>\n<p>这时项目中会多一个.nuxt的文件</p>\n<p><img src=\"/2020/03/25/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR/img2.jpg\" alt=\"image\"></p>\n<p>3、打包<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run build</span><br></pre></td></tr></table></figure></p>\n<p>这时看到.nuxt中的文件变了，并且多了一个dist文件夹（这里有一个坑，通常我们的.gitignore文件会忽略dist文件，这里要注意）<br><img src=\"/2020/03/25/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR/img3.jpg\" alt=\"image\"></p>\n<p>4、目录详解<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|-- .nuxt                            <span class=\"comment\">// Nuxt运行时自动生成，和build之后的代码</span></span><br><span class=\"line\">|-- assets                           <span class=\"comment\">// 资源目录 assets 用于组织未编译的静态资源如 LESS、SASS 或 JavaScript</span></span><br><span class=\"line\">|-- components                       <span class=\"comment\">// 用于自己编写的Vue组件，比如滚动组件，日历组件，分页组件</span></span><br><span class=\"line\">|-- layouts                          <span class=\"comment\">// 布局目录，用于组织应用的布局组件，不可更改。</span></span><br><span class=\"line\">|-- middleware                       <span class=\"comment\">// 用于存放中间件</span></span><br><span class=\"line\">|-- pages                            <span class=\"comment\">// 用于存放写的页面，我们主要的工作区域</span></span><br><span class=\"line\">|-- plugins                          <span class=\"comment\">// 用于存放JavaScript插件的地方</span></span><br><span class=\"line\">|-- <span class=\"keyword\">static</span>                           <span class=\"comment\">// 用于存放静态资源文件，比如图片</span></span><br><span class=\"line\">|-- store                            <span class=\"comment\">// 用于组织应用的Vuex 状态管理。</span></span><br><span class=\"line\">|-- .editorconfig                    <span class=\"comment\">// 开发工具格式配置</span></span><br><span class=\"line\">|-- .eslintrc.js                     <span class=\"comment\">// ESLint的配置文件，用于检查代码格式</span></span><br><span class=\"line\">|-- .gitignore                       <span class=\"comment\">// 配置git不上传的文件</span></span><br><span class=\"line\">|-- nuxt.config.js                   <span class=\"comment\">// 用于组织Nuxt.js应用的个性化配置，已覆盖默认配置</span></span><br><span class=\"line\">|-- package-lock.json                <span class=\"comment\">// npm自动生成，用于帮助package的统一性设置的，yarn也有相同的操作</span></span><br><span class=\"line\">|-- package-lock.json                <span class=\"comment\">// npm自动生成，用于帮助package的统一性设置的，yarn也有相同的操作</span></span><br><span class=\"line\">|-- package.json                     <span class=\"comment\">// npm包管理配置文件</span></span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一、SSR概念\"><a href=\"#一、SSR概念\" class=\"headerlink\" title=\"一、SSR概念\"></a>一、SSR概念</h3><p><strong>SSR</strong><br>server side render 服务端渲染</p>\n<p><strong>客户端渲染</strong><br>页面初始加载的 HTML 页面中无网页展示内容，需要加载执行Js代码，通过 js 渲染生成页面。比较代表性的为React,Vue,Angular三大前端框架的SPA(Single Page Application)应用。</p>\n<p><strong>服务端渲染</strong><br>用户请求服务器，服务器上直接生成 HTML 内容并返回给浏览器。客户端所需要做的仅仅是html页面的展现和之后的DOM事件处理。代表为传统的JSP,PHP,ASP应用。</p>\n<p><strong>同构</strong><br>同构这个概念存在于 Vue，React 这些新型的前端框架中，同构实际上是客户端渲染和服务器端渲染的一个整合。两端共用一套代码，只是服务端采用nodeJS执行，客户端采用JS执行；在加载首屏的时候，执行服务端代码，页面渲染和请求js同时进行。从首屏进入第二页时就不请求服务端代码了，直接执行Vue的路由跳转。<br>（这里首屏的概念不是首页，而是用户打开的第一页，例如：A打开司机招聘的首页，点击其中一条详情进入详情页，然后将详情页分享给B，B打开的是详情页。这里A的首屏是首页，B的首屏是详情页）</p>\n<h3 id=\"二、使用SSR的利弊\"><a href=\"#二、使用SSR的利弊\" class=\"headerlink\" title=\"二、使用SSR的利弊\"></a>二、使用SSR的利弊</h3><h4 id=\"SSR的优势\"><a href=\"#SSR的优势\" class=\"headerlink\" title=\"SSR的优势\"></a>SSR的优势</h4><ol>\n<li>更利于SEO<br>爬虫只会爬取源码，不会执行网站的任何脚本（Google除外，Google等页面加载完之后再去爬取内容，所以Google的爬虫可以爬取单页面应用）</li>\n<li>更利于首屏渲染<br>首屏的渲染是node发送过来的html字符串，并不依赖于js文件了，这就会使用户更快的看到页面的内容。尤其是针对大型单页应用，打包后文件体积比较大，普通客户端渲染加载所有所需文件时间较长，首页就会有一个很长的白屏等待时间。</li>\n</ol>\n<h4 id=\"SSR的局限\"><a href=\"#SSR的局限\" class=\"headerlink\" title=\"SSR的局限\"></a>SSR的局限</h4><ol>\n<li>服务端压力较大<br>本来是通过客户端完成渲染，现在统一到服务端node服务去做。尤其是高并发访问的情况，会大量占用服务端CPU资源；</li>\n<li>开发条件受限<br>服务端代与客户端共用一套代码，但是执行周期不一致，写法也有略微不同</li>\n<li>学习成本相对较高<br>还需要掌握node、Koa2等相关技术。相对于客户端渲染，项目构建、部署过程更加复杂。</li>\n</ol>\n<h3 id=\"三、介绍NUXT\"><a href=\"#三、介绍NUXT\" class=\"headerlink\" title=\"三、介绍NUXT\"></a>三、介绍NUXT</h3><p> <a href=\"https://zh.nuxtjs.org/\" target=\"_blank\" rel=\"noopener\">nuxt官网</a></p>\n<h4 id=\"nuxt的优点：\"><a href=\"#nuxt的优点：\" class=\"headerlink\" title=\"nuxt的优点：\"></a>nuxt的优点：</h4><ul>\n<li>基于 Vue.js</li>\n<li>自动代码分层</li>\n<li>服务端渲染</li>\n<li>强大的路由功能，支持异步数据</li>\n<li>静态文件服务</li>\n<li>ES2015+ 语法支持</li>\n<li>打包和压缩 JS 和 CSS</li>\n<li>HTML 头部标签管理</li>\n<li>本地开发支持热加载</li>\n<li>集成 ESLint</li>\n<li>支持各种样式预处理器： SASS、LESS、 Stylus 等等</li>\n<li>支持 HTTP/2 推送</li>\n</ul>\n<h4 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h4><p>下图阐述了 Nuxt.js 应用一个完整的服务器请求到渲染（或用户通过 <code>&lt;nuxt-link&gt;</code>切换路由渲染页面）的流程：<br><img src=\"/2020/03/25/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR/zhouqi.webp\" alt=\"image\"><br>生命周期流程图，红框内的是Nuxt的生命周期(运行在<code>服务端</code>)，黄框内<code>同时运行在服务端&amp;&amp;客户端</code>上，绿框内则运行在<code>客户端</code></p>\n<ol>\n<li>红框、黄框内的周期都不存在Window,document,navigator对象<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  asyncData() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>) <span class=\"comment\">// 服务端报错</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  fetch() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>) <span class=\"comment\">// 服务端报错</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  created () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>) <span class=\"comment\">// undefined</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  mounted () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">window</span>) <span class=\"comment\">// Window &#123;postMessage: ƒ, blur: ƒ, focus: ƒ, close: ƒ, frames: Window, …&#125;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>但也不是不可以在这些周期使用客户端代码，只需要加一个判断平台的条件即可：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (process.client)&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 这里执行服务端不支持的代码</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"三、开始\"><a href=\"#三、开始\" class=\"headerlink\" title=\"三、开始\"></a>三、开始</h3><p>1、运行一个NUXT项目<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npx create-nuxt-app abc</span><br></pre></td></tr></table></figure></p>\n<p>我的电脑运行这条命令慢的出奇，所以我用了另一种方式<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install -g @vue/cli-init</span><br><span class=\"line\"><span class=\"comment\">// 如果已安装过vue-cli可以不用执行上面这条</span></span><br><span class=\"line\">$ vue init nuxt/starter abc</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"/2020/03/25/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR/img1.jpg\" alt=\"image\"><br>2、启动项目<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd abc</span><br><span class=\"line\">$ npm install</span><br><span class=\"line\">$ npm run dev</span><br><span class=\"line\"><span class=\"comment\">// 在浏览器里执行：`http://localhost:3000/`</span></span><br></pre></td></tr></table></figure></p>\n<p>这时项目中会多一个.nuxt的文件</p>\n<p><img src=\"/2020/03/25/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR/img2.jpg\" alt=\"image\"></p>\n<p>3、打包<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run build</span><br></pre></td></tr></table></figure></p>\n<p>这时看到.nuxt中的文件变了，并且多了一个dist文件夹（这里有一个坑，通常我们的.gitignore文件会忽略dist文件，这里要注意）<br><img src=\"/2020/03/25/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR/img3.jpg\" alt=\"image\"></p>\n<p>4、目录详解<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|-- .nuxt                            <span class=\"comment\">// Nuxt运行时自动生成，和build之后的代码</span></span><br><span class=\"line\">|-- assets                           <span class=\"comment\">// 资源目录 assets 用于组织未编译的静态资源如 LESS、SASS 或 JavaScript</span></span><br><span class=\"line\">|-- components                       <span class=\"comment\">// 用于自己编写的Vue组件，比如滚动组件，日历组件，分页组件</span></span><br><span class=\"line\">|-- layouts                          <span class=\"comment\">// 布局目录，用于组织应用的布局组件，不可更改。</span></span><br><span class=\"line\">|-- middleware                       <span class=\"comment\">// 用于存放中间件</span></span><br><span class=\"line\">|-- pages                            <span class=\"comment\">// 用于存放写的页面，我们主要的工作区域</span></span><br><span class=\"line\">|-- plugins                          <span class=\"comment\">// 用于存放JavaScript插件的地方</span></span><br><span class=\"line\">|-- <span class=\"keyword\">static</span>                           <span class=\"comment\">// 用于存放静态资源文件，比如图片</span></span><br><span class=\"line\">|-- store                            <span class=\"comment\">// 用于组织应用的Vuex 状态管理。</span></span><br><span class=\"line\">|-- .editorconfig                    <span class=\"comment\">// 开发工具格式配置</span></span><br><span class=\"line\">|-- .eslintrc.js                     <span class=\"comment\">// ESLint的配置文件，用于检查代码格式</span></span><br><span class=\"line\">|-- .gitignore                       <span class=\"comment\">// 配置git不上传的文件</span></span><br><span class=\"line\">|-- nuxt.config.js                   <span class=\"comment\">// 用于组织Nuxt.js应用的个性化配置，已覆盖默认配置</span></span><br><span class=\"line\">|-- package-lock.json                <span class=\"comment\">// npm自动生成，用于帮助package的统一性设置的，yarn也有相同的操作</span></span><br><span class=\"line\">|-- package-lock.json                <span class=\"comment\">// npm自动生成，用于帮助package的统一性设置的，yarn也有相同的操作</span></span><br><span class=\"line\">|-- package.json                     <span class=\"comment\">// npm包管理配置文件</span></span><br></pre></td></tr></table></figure></p>\n"},{"title":"二、将Vue项目改造成Nuxt项目-关于页面路由","date":"2020-03-25T11:52:00.000Z","_content":"### 路由\nnuxt的路由没有router文件，nuxt的路由就是`page`文件夹下的文件目录\n\n以下目录结构\n```js\npages/\n--| _slug/\n-----| comments.vue\n-----| index.vue\n--| users/\n-----| _id.vue\n--| index.vue\n```\nNuxt.js 生成对应的路由配置表为：\n```js\nrouter: {\n  routes: [\n    {\n      name: 'index',\n      path: '/',\n      component: 'pages/index.vue'\n    },\n    {\n      name: 'users-id',\n      path: '/users/:id?',\n      component: 'pages/users/_id.vue'\n    },\n    {\n      name: 'slug',\n      path: '/:slug',\n      component: 'pages/_slug/index.vue'\n    },\n    {\n      name: 'slug-comments',\n      path: '/:slug/comments',\n      component: 'pages/_slug/comments.vue'\n    }\n  ]\n}\n```\n看到上面的`_slug`和`_id`了吗，这是nuxt的动态路由，其中`_slug`是目录，`_id`是文件，动态目录下的`index.vue`是默认跳转的路由，这代表：\n1. `http://localhost:3000/a`，`http://localhost:3000/b` 打开的文件是 `pages/_slug/index.vue`\n2. `http://localhost:3000/a/comments`，`http://localhost:3000/b/comments` 打开的文件是 `pages/_slug/comments.vue`\n3. `http://localhost:3000/users/123`，`http://localhost:3000/users/abc` 打开的文件是 `pages/users/_id.vue`\n\n### 动态嵌套路由\nnuxt也可以在在动态路由下配置动态子路由。\n\n假设文件结构如下：\n\n```js\npages/\n--| _category/\n-----| _subCategory/\n--------| _id.vue\n--------| index.vue\n-----| _subCategory.vue\n-----| index.vue\n--| _category.vue\n--| index.vue\n```\nNuxt.js 自动生成的路由配置如下：\n```js\nrouter: {\n  routes: [\n    {\n      path: '/',\n      component: 'pages/index.vue',\n      name: 'index'\n    },\n    {\n      path: '/:category',\n      component: 'pages/_category.vue',\n      children: [\n        {\n          path: '',\n          component: 'pages/_category/index.vue',\n          name: 'category'\n        },\n        {\n          path: ':subCategory',\n          component: 'pages/_category/_subCategory.vue',\n          children: [\n            {\n              path: '',\n              component: 'pages/_category/_subCategory/index.vue',\n              name: 'category-subCategory'\n            },\n            {\n              path: ':id',\n              component: 'pages/_category/_subCategory/_id.vue',\n              name: 'category-subCategory-id'\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n```\n这里注意：`_category.vue`与`_category/`同级\n\n\n### 路由参数校验\n在动态路由中可以设置参数校验，例如文章详情页的路由是`http://localhost:3000/article/123456`，`123456`是文章id，文章id永远都是数字，不可能是汉字，所以可以在`pages/article/_id.vue`页面校验一下参数：\n```js\nexport default {\n  validate ({ params }) {\n    // 必须是number类型\n    return /^\\d+$/.test(params.id)\n  }\n}\n```\n如果校验方法返回的值不为 true或Promise中resolve 解析为false或抛出Error ， Nuxt.js 将自动加载显示 404 错误页面或 500 错误页面。\n\n新建`error.vue`页面在`layouts`文件夹中，在`error.vue`页面中可以捕获到：\n```js\n<template>\n  <div>\n    <not-found v-if=\"error.statusCode==404\"></not-found>\n    <error-page v-else></error-page>\n  </div>\n</template>\n<script>\nimport notFound from '~/components/404.vue'\nimport errorPage from '~/components/500.vue'\nexport default {\n  props: ['error'],\n  components: { notFound, errorPage }\n}\n</script>\n```\n\n### 路由中间件\n##### 中间件允许您定义一个自定义函数运行在一个页面或一组页面渲染之前。\n它可以做到在打开页面或者切换路由之前，加一些判断，例如重定向之类的操作。\n中间件放在`middleware`文件夹中，文件名就是中间件的名字(middleware/auth.js将成为 auth 中间件)\n中间件的配置方式：\n```js\n// nuxt.config.js\nmodule.exports = {\n  router: {\n    middleware: 'stats'\n  }\n}\n```\n可以再中间件中加重定向：\n```js\nexport default function ({ isHMR, redirect }) {\n  if (isHMR) return\n\n  if (route.fullPath == '/') {\n    return redirect('/all')\n  }\n}\n```\n还可以加一些其他操作，例如将userAgent赋值给context：\n```js\nexport default function ({ isHMR, app, req, store, route, params, error, redirect }) {\n  if (isHMR) return\n  context.userAgent = process.server ? context.req.headers['user-agent'] : navigator.userAgent\n\n  if (route.fullPath == '/') {\n    return redirect('/all')\n  }\n}\n```\n这样的话，在红框，黄框周期内就可以愉快的使用userAgent了:\n```js\nvalidate (context) {\n  console.log(1, context.userAgent)\n  return true\n},\nasyncData (context) {\n  console.log(2, context.userAgent)\n}\n```\n![img](二、将Vue项目改造成Nuxt项目-关于页面路由/img1.jpg)","source":"_posts/nuxt/二、将Vue项目改造成Nuxt项目-关于页面路由.md","raw":"---\ntitle: 二、将Vue项目改造成Nuxt项目-关于页面路由\ndate: 2020-03-25 19:52:00\ntags: \n  - javascript\n  - nuxt\n  - vue\ncategories:\n  - 将Vue项目改造成Nuxt项目\n---\n### 路由\nnuxt的路由没有router文件，nuxt的路由就是`page`文件夹下的文件目录\n\n以下目录结构\n```js\npages/\n--| _slug/\n-----| comments.vue\n-----| index.vue\n--| users/\n-----| _id.vue\n--| index.vue\n```\nNuxt.js 生成对应的路由配置表为：\n```js\nrouter: {\n  routes: [\n    {\n      name: 'index',\n      path: '/',\n      component: 'pages/index.vue'\n    },\n    {\n      name: 'users-id',\n      path: '/users/:id?',\n      component: 'pages/users/_id.vue'\n    },\n    {\n      name: 'slug',\n      path: '/:slug',\n      component: 'pages/_slug/index.vue'\n    },\n    {\n      name: 'slug-comments',\n      path: '/:slug/comments',\n      component: 'pages/_slug/comments.vue'\n    }\n  ]\n}\n```\n看到上面的`_slug`和`_id`了吗，这是nuxt的动态路由，其中`_slug`是目录，`_id`是文件，动态目录下的`index.vue`是默认跳转的路由，这代表：\n1. `http://localhost:3000/a`，`http://localhost:3000/b` 打开的文件是 `pages/_slug/index.vue`\n2. `http://localhost:3000/a/comments`，`http://localhost:3000/b/comments` 打开的文件是 `pages/_slug/comments.vue`\n3. `http://localhost:3000/users/123`，`http://localhost:3000/users/abc` 打开的文件是 `pages/users/_id.vue`\n\n### 动态嵌套路由\nnuxt也可以在在动态路由下配置动态子路由。\n\n假设文件结构如下：\n\n```js\npages/\n--| _category/\n-----| _subCategory/\n--------| _id.vue\n--------| index.vue\n-----| _subCategory.vue\n-----| index.vue\n--| _category.vue\n--| index.vue\n```\nNuxt.js 自动生成的路由配置如下：\n```js\nrouter: {\n  routes: [\n    {\n      path: '/',\n      component: 'pages/index.vue',\n      name: 'index'\n    },\n    {\n      path: '/:category',\n      component: 'pages/_category.vue',\n      children: [\n        {\n          path: '',\n          component: 'pages/_category/index.vue',\n          name: 'category'\n        },\n        {\n          path: ':subCategory',\n          component: 'pages/_category/_subCategory.vue',\n          children: [\n            {\n              path: '',\n              component: 'pages/_category/_subCategory/index.vue',\n              name: 'category-subCategory'\n            },\n            {\n              path: ':id',\n              component: 'pages/_category/_subCategory/_id.vue',\n              name: 'category-subCategory-id'\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n```\n这里注意：`_category.vue`与`_category/`同级\n\n\n### 路由参数校验\n在动态路由中可以设置参数校验，例如文章详情页的路由是`http://localhost:3000/article/123456`，`123456`是文章id，文章id永远都是数字，不可能是汉字，所以可以在`pages/article/_id.vue`页面校验一下参数：\n```js\nexport default {\n  validate ({ params }) {\n    // 必须是number类型\n    return /^\\d+$/.test(params.id)\n  }\n}\n```\n如果校验方法返回的值不为 true或Promise中resolve 解析为false或抛出Error ， Nuxt.js 将自动加载显示 404 错误页面或 500 错误页面。\n\n新建`error.vue`页面在`layouts`文件夹中，在`error.vue`页面中可以捕获到：\n```js\n<template>\n  <div>\n    <not-found v-if=\"error.statusCode==404\"></not-found>\n    <error-page v-else></error-page>\n  </div>\n</template>\n<script>\nimport notFound from '~/components/404.vue'\nimport errorPage from '~/components/500.vue'\nexport default {\n  props: ['error'],\n  components: { notFound, errorPage }\n}\n</script>\n```\n\n### 路由中间件\n##### 中间件允许您定义一个自定义函数运行在一个页面或一组页面渲染之前。\n它可以做到在打开页面或者切换路由之前，加一些判断，例如重定向之类的操作。\n中间件放在`middleware`文件夹中，文件名就是中间件的名字(middleware/auth.js将成为 auth 中间件)\n中间件的配置方式：\n```js\n// nuxt.config.js\nmodule.exports = {\n  router: {\n    middleware: 'stats'\n  }\n}\n```\n可以再中间件中加重定向：\n```js\nexport default function ({ isHMR, redirect }) {\n  if (isHMR) return\n\n  if (route.fullPath == '/') {\n    return redirect('/all')\n  }\n}\n```\n还可以加一些其他操作，例如将userAgent赋值给context：\n```js\nexport default function ({ isHMR, app, req, store, route, params, error, redirect }) {\n  if (isHMR) return\n  context.userAgent = process.server ? context.req.headers['user-agent'] : navigator.userAgent\n\n  if (route.fullPath == '/') {\n    return redirect('/all')\n  }\n}\n```\n这样的话，在红框，黄框周期内就可以愉快的使用userAgent了:\n```js\nvalidate (context) {\n  console.log(1, context.userAgent)\n  return true\n},\nasyncData (context) {\n  console.log(2, context.userAgent)\n}\n```\n![img](二、将Vue项目改造成Nuxt项目-关于页面路由/img1.jpg)","slug":"nuxt/二、将Vue项目改造成Nuxt项目-关于页面路由","published":1,"updated":"2020-05-03T09:33:18.868Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9qxcia700150nurb6v9yq5i","content":"<h3 id=\"路由\"><a href=\"#路由\" class=\"headerlink\" title=\"路由\"></a>路由</h3><p>nuxt的路由没有router文件，nuxt的路由就是<code>page</code>文件夹下的文件目录</p>\n<p>以下目录结构<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pages/</span><br><span class=\"line\">--| _slug/</span><br><span class=\"line\">-----| comments.vue</span><br><span class=\"line\">-----| index.vue</span><br><span class=\"line\">--| users/</span><br><span class=\"line\">-----| _id.vue</span><br><span class=\"line\">--| index.vue</span><br></pre></td></tr></table></figure></p>\n<p>Nuxt.js 生成对应的路由配置表为：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router: &#123;</span><br><span class=\"line\">  routes: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'index'</span>,</span><br><span class=\"line\">      path: <span class=\"string\">'/'</span>,</span><br><span class=\"line\">      component: <span class=\"string\">'pages/index.vue'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'users-id'</span>,</span><br><span class=\"line\">      path: <span class=\"string\">'/users/:id?'</span>,</span><br><span class=\"line\">      component: <span class=\"string\">'pages/users/_id.vue'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'slug'</span>,</span><br><span class=\"line\">      path: <span class=\"string\">'/:slug'</span>,</span><br><span class=\"line\">      component: <span class=\"string\">'pages/_slug/index.vue'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'slug-comments'</span>,</span><br><span class=\"line\">      path: <span class=\"string\">'/:slug/comments'</span>,</span><br><span class=\"line\">      component: <span class=\"string\">'pages/_slug/comments.vue'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>看到上面的<code>_slug</code>和<code>_id</code>了吗，这是nuxt的动态路由，其中<code>_slug</code>是目录，<code>_id</code>是文件，动态目录下的<code>index.vue</code>是默认跳转的路由，这代表：</p>\n<ol>\n<li><code>http://localhost:3000/a</code>，<code>http://localhost:3000/b</code> 打开的文件是 <code>pages/_slug/index.vue</code></li>\n<li><code>http://localhost:3000/a/comments</code>，<code>http://localhost:3000/b/comments</code> 打开的文件是 <code>pages/_slug/comments.vue</code></li>\n<li><code>http://localhost:3000/users/123</code>，<code>http://localhost:3000/users/abc</code> 打开的文件是 <code>pages/users/_id.vue</code></li>\n</ol>\n<h3 id=\"动态嵌套路由\"><a href=\"#动态嵌套路由\" class=\"headerlink\" title=\"动态嵌套路由\"></a>动态嵌套路由</h3><p>nuxt也可以在在动态路由下配置动态子路由。</p>\n<p>假设文件结构如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pages/</span><br><span class=\"line\">--| _category/</span><br><span class=\"line\">-----| _subCategory/</span><br><span class=\"line\">--------| _id.vue</span><br><span class=\"line\">--------| index.vue</span><br><span class=\"line\">-----| _subCategory.vue</span><br><span class=\"line\">-----| index.vue</span><br><span class=\"line\">--| _category.vue</span><br><span class=\"line\">--| index.vue</span><br></pre></td></tr></table></figure>\n<p>Nuxt.js 自动生成的路由配置如下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router: &#123;</span><br><span class=\"line\">  routes: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/'</span>,</span><br><span class=\"line\">      component: <span class=\"string\">'pages/index.vue'</span>,</span><br><span class=\"line\">      name: <span class=\"string\">'index'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/:category'</span>,</span><br><span class=\"line\">      component: <span class=\"string\">'pages/_category.vue'</span>,</span><br><span class=\"line\">      children: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          path: <span class=\"string\">''</span>,</span><br><span class=\"line\">          component: <span class=\"string\">'pages/_category/index.vue'</span>,</span><br><span class=\"line\">          name: <span class=\"string\">'category'</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          path: <span class=\"string\">':subCategory'</span>,</span><br><span class=\"line\">          component: <span class=\"string\">'pages/_category/_subCategory.vue'</span>,</span><br><span class=\"line\">          children: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              path: <span class=\"string\">''</span>,</span><br><span class=\"line\">              component: <span class=\"string\">'pages/_category/_subCategory/index.vue'</span>,</span><br><span class=\"line\">              name: <span class=\"string\">'category-subCategory'</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              path: <span class=\"string\">':id'</span>,</span><br><span class=\"line\">              component: <span class=\"string\">'pages/_category/_subCategory/_id.vue'</span>,</span><br><span class=\"line\">              name: <span class=\"string\">'category-subCategory-id'</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这里注意：<code>_category.vue</code>与<code>_category/</code>同级</p>\n<h3 id=\"路由参数校验\"><a href=\"#路由参数校验\" class=\"headerlink\" title=\"路由参数校验\"></a>路由参数校验</h3><p>在动态路由中可以设置参数校验，例如文章详情页的路由是<code>http://localhost:3000/article/123456</code>，<code>123456</code>是文章id，文章id永远都是数字，不可能是汉字，所以可以在<code>pages/article/_id.vue</code>页面校验一下参数：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  validate (&#123; params &#125;) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 必须是number类型</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"regexp\">/^\\d+$/</span>.test(params.id)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>如果校验方法返回的值不为 true或Promise中resolve 解析为false或抛出Error ， Nuxt.js 将自动加载显示 404 错误页面或 500 错误页面。</p>\n<p>新建<code>error.vue</code>页面在<code>layouts</code>文件夹中，在<code>error.vue</code>页面中可以捕获到：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;not-found v-<span class=\"keyword\">if</span>=<span class=\"string\">\"error.statusCode==404\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">not-found</span>&gt;</span></span></span><br><span class=\"line\">    &lt;error-page v-else&gt;&lt;/error-page&gt;</span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> notFound <span class=\"keyword\">from</span> <span class=\"string\">'~/components/404.vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> errorPage <span class=\"keyword\">from</span> <span class=\"string\">'~/components/500.vue'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  props: [<span class=\"string\">'error'</span>],</span><br><span class=\"line\">  components: &#123; notFound, errorPage &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"路由中间件\"><a href=\"#路由中间件\" class=\"headerlink\" title=\"路由中间件\"></a>路由中间件</h3><h5 id=\"中间件允许您定义一个自定义函数运行在一个页面或一组页面渲染之前。\"><a href=\"#中间件允许您定义一个自定义函数运行在一个页面或一组页面渲染之前。\" class=\"headerlink\" title=\"中间件允许您定义一个自定义函数运行在一个页面或一组页面渲染之前。\"></a>中间件允许您定义一个自定义函数运行在一个页面或一组页面渲染之前。</h5><p>它可以做到在打开页面或者切换路由之前，加一些判断，例如重定向之类的操作。<br>中间件放在<code>middleware</code>文件夹中，文件名就是中间件的名字(middleware/auth.js将成为 auth 中间件)<br>中间件的配置方式：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// nuxt.config.js</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  router: &#123;</span><br><span class=\"line\">    middleware: <span class=\"string\">'stats'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>可以再中间件中加重定向：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">&#123; isHMR, redirect &#125;</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (isHMR) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (route.fullPath == <span class=\"string\">'/'</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> redirect(<span class=\"string\">'/all'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>还可以加一些其他操作，例如将userAgent赋值给context：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">&#123; isHMR, app, req, store, route, params, error, redirect &#125;</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (isHMR) <span class=\"keyword\">return</span></span><br><span class=\"line\">  context.userAgent = process.server ? context.req.headers[<span class=\"string\">'user-agent'</span>] : navigator.userAgent</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (route.fullPath == <span class=\"string\">'/'</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> redirect(<span class=\"string\">'/all'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这样的话，在红框，黄框周期内就可以愉快的使用userAgent了:<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">validate (context) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>, context.userAgent)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">asyncData (context) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>, context.userAgent)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"/2020/03/25/nuxt/二、将Vue项目改造成Nuxt项目-关于页面路由/img1.jpg\" alt=\"img\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"路由\"><a href=\"#路由\" class=\"headerlink\" title=\"路由\"></a>路由</h3><p>nuxt的路由没有router文件，nuxt的路由就是<code>page</code>文件夹下的文件目录</p>\n<p>以下目录结构<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pages/</span><br><span class=\"line\">--| _slug/</span><br><span class=\"line\">-----| comments.vue</span><br><span class=\"line\">-----| index.vue</span><br><span class=\"line\">--| users/</span><br><span class=\"line\">-----| _id.vue</span><br><span class=\"line\">--| index.vue</span><br></pre></td></tr></table></figure></p>\n<p>Nuxt.js 生成对应的路由配置表为：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router: &#123;</span><br><span class=\"line\">  routes: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'index'</span>,</span><br><span class=\"line\">      path: <span class=\"string\">'/'</span>,</span><br><span class=\"line\">      component: <span class=\"string\">'pages/index.vue'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'users-id'</span>,</span><br><span class=\"line\">      path: <span class=\"string\">'/users/:id?'</span>,</span><br><span class=\"line\">      component: <span class=\"string\">'pages/users/_id.vue'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'slug'</span>,</span><br><span class=\"line\">      path: <span class=\"string\">'/:slug'</span>,</span><br><span class=\"line\">      component: <span class=\"string\">'pages/_slug/index.vue'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name: <span class=\"string\">'slug-comments'</span>,</span><br><span class=\"line\">      path: <span class=\"string\">'/:slug/comments'</span>,</span><br><span class=\"line\">      component: <span class=\"string\">'pages/_slug/comments.vue'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>看到上面的<code>_slug</code>和<code>_id</code>了吗，这是nuxt的动态路由，其中<code>_slug</code>是目录，<code>_id</code>是文件，动态目录下的<code>index.vue</code>是默认跳转的路由，这代表：</p>\n<ol>\n<li><code>http://localhost:3000/a</code>，<code>http://localhost:3000/b</code> 打开的文件是 <code>pages/_slug/index.vue</code></li>\n<li><code>http://localhost:3000/a/comments</code>，<code>http://localhost:3000/b/comments</code> 打开的文件是 <code>pages/_slug/comments.vue</code></li>\n<li><code>http://localhost:3000/users/123</code>，<code>http://localhost:3000/users/abc</code> 打开的文件是 <code>pages/users/_id.vue</code></li>\n</ol>\n<h3 id=\"动态嵌套路由\"><a href=\"#动态嵌套路由\" class=\"headerlink\" title=\"动态嵌套路由\"></a>动态嵌套路由</h3><p>nuxt也可以在在动态路由下配置动态子路由。</p>\n<p>假设文件结构如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pages/</span><br><span class=\"line\">--| _category/</span><br><span class=\"line\">-----| _subCategory/</span><br><span class=\"line\">--------| _id.vue</span><br><span class=\"line\">--------| index.vue</span><br><span class=\"line\">-----| _subCategory.vue</span><br><span class=\"line\">-----| index.vue</span><br><span class=\"line\">--| _category.vue</span><br><span class=\"line\">--| index.vue</span><br></pre></td></tr></table></figure>\n<p>Nuxt.js 自动生成的路由配置如下：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">router: &#123;</span><br><span class=\"line\">  routes: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/'</span>,</span><br><span class=\"line\">      component: <span class=\"string\">'pages/index.vue'</span>,</span><br><span class=\"line\">      name: <span class=\"string\">'index'</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      path: <span class=\"string\">'/:category'</span>,</span><br><span class=\"line\">      component: <span class=\"string\">'pages/_category.vue'</span>,</span><br><span class=\"line\">      children: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          path: <span class=\"string\">''</span>,</span><br><span class=\"line\">          component: <span class=\"string\">'pages/_category/index.vue'</span>,</span><br><span class=\"line\">          name: <span class=\"string\">'category'</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          path: <span class=\"string\">':subCategory'</span>,</span><br><span class=\"line\">          component: <span class=\"string\">'pages/_category/_subCategory.vue'</span>,</span><br><span class=\"line\">          children: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              path: <span class=\"string\">''</span>,</span><br><span class=\"line\">              component: <span class=\"string\">'pages/_category/_subCategory/index.vue'</span>,</span><br><span class=\"line\">              name: <span class=\"string\">'category-subCategory'</span></span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              path: <span class=\"string\">':id'</span>,</span><br><span class=\"line\">              component: <span class=\"string\">'pages/_category/_subCategory/_id.vue'</span>,</span><br><span class=\"line\">              name: <span class=\"string\">'category-subCategory-id'</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这里注意：<code>_category.vue</code>与<code>_category/</code>同级</p>\n<h3 id=\"路由参数校验\"><a href=\"#路由参数校验\" class=\"headerlink\" title=\"路由参数校验\"></a>路由参数校验</h3><p>在动态路由中可以设置参数校验，例如文章详情页的路由是<code>http://localhost:3000/article/123456</code>，<code>123456</code>是文章id，文章id永远都是数字，不可能是汉字，所以可以在<code>pages/article/_id.vue</code>页面校验一下参数：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  validate (&#123; params &#125;) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 必须是number类型</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"regexp\">/^\\d+$/</span>.test(params.id)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>如果校验方法返回的值不为 true或Promise中resolve 解析为false或抛出Error ， Nuxt.js 将自动加载显示 404 错误页面或 500 错误页面。</p>\n<p>新建<code>error.vue</code>页面在<code>layouts</code>文件夹中，在<code>error.vue</code>页面中可以捕获到：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div&gt;</span><br><span class=\"line\">    &lt;not-found v-<span class=\"keyword\">if</span>=<span class=\"string\">\"error.statusCode==404\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">not-found</span>&gt;</span></span></span><br><span class=\"line\">    &lt;error-page v-else&gt;&lt;/error-page&gt;</span><br><span class=\"line\"><span class=\"xml\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> notFound <span class=\"keyword\">from</span> <span class=\"string\">'~/components/404.vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> errorPage <span class=\"keyword\">from</span> <span class=\"string\">'~/components/500.vue'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  props: [<span class=\"string\">'error'</span>],</span><br><span class=\"line\">  components: &#123; notFound, errorPage &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"路由中间件\"><a href=\"#路由中间件\" class=\"headerlink\" title=\"路由中间件\"></a>路由中间件</h3><h5 id=\"中间件允许您定义一个自定义函数运行在一个页面或一组页面渲染之前。\"><a href=\"#中间件允许您定义一个自定义函数运行在一个页面或一组页面渲染之前。\" class=\"headerlink\" title=\"中间件允许您定义一个自定义函数运行在一个页面或一组页面渲染之前。\"></a>中间件允许您定义一个自定义函数运行在一个页面或一组页面渲染之前。</h5><p>它可以做到在打开页面或者切换路由之前，加一些判断，例如重定向之类的操作。<br>中间件放在<code>middleware</code>文件夹中，文件名就是中间件的名字(middleware/auth.js将成为 auth 中间件)<br>中间件的配置方式：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// nuxt.config.js</span></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = &#123;</span><br><span class=\"line\">  router: &#123;</span><br><span class=\"line\">    middleware: <span class=\"string\">'stats'</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>可以再中间件中加重定向：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">&#123; isHMR, redirect &#125;</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (isHMR) <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (route.fullPath == <span class=\"string\">'/'</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> redirect(<span class=\"string\">'/all'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>还可以加一些其他操作，例如将userAgent赋值给context：<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">&#123; isHMR, app, req, store, route, params, error, redirect &#125;</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (isHMR) <span class=\"keyword\">return</span></span><br><span class=\"line\">  context.userAgent = process.server ? context.req.headers[<span class=\"string\">'user-agent'</span>] : navigator.userAgent</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (route.fullPath == <span class=\"string\">'/'</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> redirect(<span class=\"string\">'/all'</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这样的话，在红框，黄框周期内就可以愉快的使用userAgent了:<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">validate (context) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">1</span>, context.userAgent)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\">asyncData (context) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"number\">2</span>, context.userAgent)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><img src=\"/2020/03/25/nuxt/二、将Vue项目改造成Nuxt项目-关于页面路由/img1.jpg\" alt=\"img\"></p>\n"},{"title":"三、将Vue项目改造成Nuxt项目-使用第三方插件","date":"2020-04-16T11:52:00.000Z","_content":"### 使用第三方插件\n举例swiper,babel-polyfill和postcss-pxtorem插件\n#### swiper\n1. 安装插件（略过）\n2. 我们需要在程序运行前配置好这个插件\n在`plugins`中新建`vue-swiper.js`文件：\n```js\nimport Vue from 'vue'\nimport VueAwesomeSwiper from 'vue-awesome-swiper/dist/ssr'\n \nVue.use(VueAwesomeSwiper)\n```\n在nuxt.config.js中配置\n```js\nplugins: [\n  { src: '~/plugins/vue-swiper.js', ssr: false }\n]\n```\n不支持ssr的系统，插件只在浏览器里使用的话，需要加`ssr:false`属性\n\n\n#### babel-polyfill\n1. 安装插件（略过）\n2. 我们需要在程序运行前配置好这个插件\n在`plugins`中新建`babel-polyfill.js`文件：\n```js\nimport 'babel-polyfill'\n```\n在nuxt.config.js中配置\n```js\nplugins: [\n  { src: '@/plugins/babel-polyfill', ssr: true },\n]\n```\n\n#### postcss-pxtorem\n1. 安装插件（略过）\n2. 在nuxt.config.js中配置\n```js\nbuild: {\n  extractCSS: true,\n  /*\n  ** You can extend webpack config here\n  */\n  postcss: {\n    plugins: {\n      'postcss-pxtorem': {\n        rootValue: 37.5, //默认根目录字体大小(px)\n        propList: ['*']\n      },\n\n      'autoprefixer': {\n        overrideBrowserslist: ['Android >= 4.0', 'iOS >= 7']\n      }\n    }\n  }\n}\n  ```\n\n### 自己编写插件\n#### dialog插件\n\n![img](三、将Vue项目改造成Nuxt项目-使用第三方插件/img1.jpg)\n\n1. 我们在`components`文件夹下新建一个组件`showDialog.vue`\n\n  ``` js\n  <template>\n    <div class=\"dialogWrapper\"\n        v-if=\"show\"\n        @touchmove.prevent>\n      <div class=\"content\">\n        <h3>{{title}}</h3>\n        <p v-html='content'></p>\n        <div class=\"btns\"\n            v-if=\"num==2\">\n          <button class=\"cancel\"\n                  @click=\"cancel();complete();\">{{cancelTxt}}</button>\n          <button class=\"sure\"\n                  @click=\"sure();complete();\">{{sureTxt}}</button>\n        </div>\n        <div class=\"btns single\"\n            v-if=\"num==1\">\n          <button class=\"sure\"\n                  @click=\"sure();complete();\">{{sureTxt}}</button>\n        </div>\n      </div>\n    </div>\n  </template>  \n  <script>\n  export default {\n    name: 'showDialog',\n    data () {\n      return {\n        show: false,\n        title: '标题',\n        content: '',\n        num: 1,\n        cancelTxt: '取消',\n        sureTxt: '确定'\n      }\n    },\n    methods: {\n      cancel () {\n        this.show = false\n      },\n      sure () {\n        this.show = false\n      },\n      complete () {\n        this.show = false\n      }\n    }\n  }\n  </script>\n  <style lang=\"less\" scope>\n  .dialogWrapper {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.4);\n    top: 0;\n    left: 0;\n    z-index: 10000;\n    .content {\n      width: 299px;\n      border-radius: 6px;\n      background: #fff;\n      position: absolute;\n      overflow: hidden;\n      top: 50%;\n      left: 0;\n      right: 0;\n      margin: auto;\n      transform: translateY(-50%);\n      padding-top: 20px;\n      h3 {\n        font-size: 18px;\n        font-weight: bold;\n        text-align: center;\n        color: rgba(3, 16, 42, 1);\n        line-height: 20px;\n      }\n      p {\n        padding: 14px 35px;\n        font-size: 16px;\n        text-align: center;\n        color: rgba(3, 16, 42, 0.7);\n        line-height: 20px;\n      }\n    }\n    .btns {\n      width: 100%;\n      display: flex;\n      background: #fff9fafa;\n      padding-top: 2px;\n      &.single {\n        button {\n          margin: 0;\n        }\n      }\n      button {\n        flex: 1;\n        height: 50px;\n        font-size: 16px;\n        line-height: 18px;\n        text-align: center;\n        justify-content: center;\n        color: rgba(3, 16, 42, 1);\n        background: #fff;\n        &:first-child {\n          margin-right: 1px;\n        }\n        &:last-child {\n          margin-left: 1px;\n        }\n        &.sure {\n          font-weight: bold;\n          color: rgba(0, 87, 255, 1);\n        }\n      }\n    }\n  }\n  </style>\n  ```\n2. 在文件夹`plugins`新建js文件`vue-plugins.js`\n  ```js\n  import Vue from 'vue'\n  import showDialog from '~/components/plugins/showDialog.vue'\n  export default ({ app }, inject) => {\n    if (process.client) {\n\n      const DialogConstructor = Vue.extend(showDialog)\n\n      // 生成一个该子类的实例\n      const dialog = new DialogConstructor();\n\n      // 并将此div加入全局挂载点内部\n      dialog.$mount(document.createElement('div'))\n\n      document.body.appendChild(dialog.$el)\n\n      inject('showDialog', ({ title, content, num, sureTxt, cancelTxt, cancel, sure }) => {\n        dialog.show = true\n        title && (dialog.title = title)\n        content && (dialog.content = content)\n        num && (dialog.num = num)\n        sureTxt && (dialog.sureTxt = sureTxt)\n        cancelTxt && (dialog.cancelTxt = cancelTxt)\n        cancel && (dialog.cancel = cancel)\n        sure && (dialog.sure = sure)\n      })\n    }\n  }\n  ```\n3. 在nuxt.config.js中配置\n  ```js\n\n  /*\n  ** Plugins to load before mounting the App\n  */\n  plugins: [\n    '~/plugins/vue-plugins.js',\n  ]\n  ```\n4. 使用\n  ```js\n  created () {\n    // 单按钮\n    this.$showDialog({\n      title: '提交成功',\n      content: '我们将尽快处理，如有其它问题请致电：010-56592180',\n      sureTxt: '我知道了'\n    })\n\n    // 双按钮\n    this.$showDialog({\n      title: '提醒',\n      content: '是否放弃已填写内容？',\n      num: 2,\n      sure: () => {\n        // 确定\n      }\n    })\n\n    this.$showDialog({\n      title: '提醒',\n      content: '是否放弃已填写内容？',\n      num: 2,\n      sureTxt: '好的',\n      cancelTxt: '我再想想',\n      sure: () => {\n        // 确定\n      },\n      cancel () {\n        // 取消\n      }\n    })\n  }\n  ```","source":"_posts/nuxt/三、将Vue项目改造成Nuxt项目-使用第三方插件.md","raw":"---\ntitle: 三、将Vue项目改造成Nuxt项目-使用第三方插件\ndate: 2020-04-16 19:52:00\ntags: \n  - javascript\n  - nuxt\n  - vue\ncategories:\n  - 将Vue项目改造成Nuxt项目\n---\n### 使用第三方插件\n举例swiper,babel-polyfill和postcss-pxtorem插件\n#### swiper\n1. 安装插件（略过）\n2. 我们需要在程序运行前配置好这个插件\n在`plugins`中新建`vue-swiper.js`文件：\n```js\nimport Vue from 'vue'\nimport VueAwesomeSwiper from 'vue-awesome-swiper/dist/ssr'\n \nVue.use(VueAwesomeSwiper)\n```\n在nuxt.config.js中配置\n```js\nplugins: [\n  { src: '~/plugins/vue-swiper.js', ssr: false }\n]\n```\n不支持ssr的系统，插件只在浏览器里使用的话，需要加`ssr:false`属性\n\n\n#### babel-polyfill\n1. 安装插件（略过）\n2. 我们需要在程序运行前配置好这个插件\n在`plugins`中新建`babel-polyfill.js`文件：\n```js\nimport 'babel-polyfill'\n```\n在nuxt.config.js中配置\n```js\nplugins: [\n  { src: '@/plugins/babel-polyfill', ssr: true },\n]\n```\n\n#### postcss-pxtorem\n1. 安装插件（略过）\n2. 在nuxt.config.js中配置\n```js\nbuild: {\n  extractCSS: true,\n  /*\n  ** You can extend webpack config here\n  */\n  postcss: {\n    plugins: {\n      'postcss-pxtorem': {\n        rootValue: 37.5, //默认根目录字体大小(px)\n        propList: ['*']\n      },\n\n      'autoprefixer': {\n        overrideBrowserslist: ['Android >= 4.0', 'iOS >= 7']\n      }\n    }\n  }\n}\n  ```\n\n### 自己编写插件\n#### dialog插件\n\n![img](三、将Vue项目改造成Nuxt项目-使用第三方插件/img1.jpg)\n\n1. 我们在`components`文件夹下新建一个组件`showDialog.vue`\n\n  ``` js\n  <template>\n    <div class=\"dialogWrapper\"\n        v-if=\"show\"\n        @touchmove.prevent>\n      <div class=\"content\">\n        <h3>{{title}}</h3>\n        <p v-html='content'></p>\n        <div class=\"btns\"\n            v-if=\"num==2\">\n          <button class=\"cancel\"\n                  @click=\"cancel();complete();\">{{cancelTxt}}</button>\n          <button class=\"sure\"\n                  @click=\"sure();complete();\">{{sureTxt}}</button>\n        </div>\n        <div class=\"btns single\"\n            v-if=\"num==1\">\n          <button class=\"sure\"\n                  @click=\"sure();complete();\">{{sureTxt}}</button>\n        </div>\n      </div>\n    </div>\n  </template>  \n  <script>\n  export default {\n    name: 'showDialog',\n    data () {\n      return {\n        show: false,\n        title: '标题',\n        content: '',\n        num: 1,\n        cancelTxt: '取消',\n        sureTxt: '确定'\n      }\n    },\n    methods: {\n      cancel () {\n        this.show = false\n      },\n      sure () {\n        this.show = false\n      },\n      complete () {\n        this.show = false\n      }\n    }\n  }\n  </script>\n  <style lang=\"less\" scope>\n  .dialogWrapper {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.4);\n    top: 0;\n    left: 0;\n    z-index: 10000;\n    .content {\n      width: 299px;\n      border-radius: 6px;\n      background: #fff;\n      position: absolute;\n      overflow: hidden;\n      top: 50%;\n      left: 0;\n      right: 0;\n      margin: auto;\n      transform: translateY(-50%);\n      padding-top: 20px;\n      h3 {\n        font-size: 18px;\n        font-weight: bold;\n        text-align: center;\n        color: rgba(3, 16, 42, 1);\n        line-height: 20px;\n      }\n      p {\n        padding: 14px 35px;\n        font-size: 16px;\n        text-align: center;\n        color: rgba(3, 16, 42, 0.7);\n        line-height: 20px;\n      }\n    }\n    .btns {\n      width: 100%;\n      display: flex;\n      background: #fff9fafa;\n      padding-top: 2px;\n      &.single {\n        button {\n          margin: 0;\n        }\n      }\n      button {\n        flex: 1;\n        height: 50px;\n        font-size: 16px;\n        line-height: 18px;\n        text-align: center;\n        justify-content: center;\n        color: rgba(3, 16, 42, 1);\n        background: #fff;\n        &:first-child {\n          margin-right: 1px;\n        }\n        &:last-child {\n          margin-left: 1px;\n        }\n        &.sure {\n          font-weight: bold;\n          color: rgba(0, 87, 255, 1);\n        }\n      }\n    }\n  }\n  </style>\n  ```\n2. 在文件夹`plugins`新建js文件`vue-plugins.js`\n  ```js\n  import Vue from 'vue'\n  import showDialog from '~/components/plugins/showDialog.vue'\n  export default ({ app }, inject) => {\n    if (process.client) {\n\n      const DialogConstructor = Vue.extend(showDialog)\n\n      // 生成一个该子类的实例\n      const dialog = new DialogConstructor();\n\n      // 并将此div加入全局挂载点内部\n      dialog.$mount(document.createElement('div'))\n\n      document.body.appendChild(dialog.$el)\n\n      inject('showDialog', ({ title, content, num, sureTxt, cancelTxt, cancel, sure }) => {\n        dialog.show = true\n        title && (dialog.title = title)\n        content && (dialog.content = content)\n        num && (dialog.num = num)\n        sureTxt && (dialog.sureTxt = sureTxt)\n        cancelTxt && (dialog.cancelTxt = cancelTxt)\n        cancel && (dialog.cancel = cancel)\n        sure && (dialog.sure = sure)\n      })\n    }\n  }\n  ```\n3. 在nuxt.config.js中配置\n  ```js\n\n  /*\n  ** Plugins to load before mounting the App\n  */\n  plugins: [\n    '~/plugins/vue-plugins.js',\n  ]\n  ```\n4. 使用\n  ```js\n  created () {\n    // 单按钮\n    this.$showDialog({\n      title: '提交成功',\n      content: '我们将尽快处理，如有其它问题请致电：010-56592180',\n      sureTxt: '我知道了'\n    })\n\n    // 双按钮\n    this.$showDialog({\n      title: '提醒',\n      content: '是否放弃已填写内容？',\n      num: 2,\n      sure: () => {\n        // 确定\n      }\n    })\n\n    this.$showDialog({\n      title: '提醒',\n      content: '是否放弃已填写内容？',\n      num: 2,\n      sureTxt: '好的',\n      cancelTxt: '我再想想',\n      sure: () => {\n        // 确定\n      },\n      cancel () {\n        // 取消\n      }\n    })\n  }\n  ```","slug":"nuxt/三、将Vue项目改造成Nuxt项目-使用第三方插件","published":1,"updated":"2020-05-03T09:33:18.868Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck9qxcia800180nurh6yz8vis","content":"<h3 id=\"使用第三方插件\"><a href=\"#使用第三方插件\" class=\"headerlink\" title=\"使用第三方插件\"></a>使用第三方插件</h3><p>举例swiper,babel-polyfill和postcss-pxtorem插件</p>\n<h4 id=\"swiper\"><a href=\"#swiper\" class=\"headerlink\" title=\"swiper\"></a>swiper</h4><ol>\n<li>安装插件（略过）</li>\n<li>我们需要在程序运行前配置好这个插件<br>在<code>plugins</code>中新建<code>vue-swiper.js</code>文件：<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> VueAwesomeSwiper <span class=\"keyword\">from</span> <span class=\"string\">'vue-awesome-swiper/dist/ssr'</span></span><br><span class=\"line\"> </span><br><span class=\"line\">Vue.use(VueAwesomeSwiper)</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>在nuxt.config.js中配置<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">  &#123; <span class=\"attr\">src</span>: <span class=\"string\">'~/plugins/vue-swiper.js'</span>, <span class=\"attr\">ssr</span>: <span class=\"literal\">false</span> &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>不支持ssr的系统，插件只在浏览器里使用的话，需要加<code>ssr:false</code>属性</p>\n<h4 id=\"babel-polyfill\"><a href=\"#babel-polyfill\" class=\"headerlink\" title=\"babel-polyfill\"></a>babel-polyfill</h4><ol>\n<li>安装插件（略过）</li>\n<li>我们需要在程序运行前配置好这个插件<br>在<code>plugins</code>中新建<code>babel-polyfill.js</code>文件：<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'babel-polyfill'</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>在nuxt.config.js中配置<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">  &#123; <span class=\"attr\">src</span>: <span class=\"string\">'@/plugins/babel-polyfill'</span>, <span class=\"attr\">ssr</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"postcss-pxtorem\"><a href=\"#postcss-pxtorem\" class=\"headerlink\" title=\"postcss-pxtorem\"></a>postcss-pxtorem</h4><ol>\n<li>安装插件（略过）</li>\n<li>在nuxt.config.js中配置<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">build: &#123;</span><br><span class=\"line\">  extractCSS: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  ** You can extend webpack config here</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  postcss: &#123;</span><br><span class=\"line\">    plugins: &#123;</span><br><span class=\"line\">      <span class=\"string\">'postcss-pxtorem'</span>: &#123;</span><br><span class=\"line\">        rootValue: <span class=\"number\">37.5</span>, <span class=\"comment\">//默认根目录字体大小(px)</span></span><br><span class=\"line\">        propList: [<span class=\"string\">'*'</span>]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"string\">'autoprefixer'</span>: &#123;</span><br><span class=\"line\">        overrideBrowserslist: [<span class=\"string\">'Android &gt;= 4.0'</span>, <span class=\"string\">'iOS &gt;= 7'</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"自己编写插件\"><a href=\"#自己编写插件\" class=\"headerlink\" title=\"自己编写插件\"></a>自己编写插件</h3><h4 id=\"dialog插件\"><a href=\"#dialog插件\" class=\"headerlink\" title=\"dialog插件\"></a>dialog插件</h4><p><img src=\"/2020/04/16/nuxt/三、将Vue项目改造成Nuxt项目-使用第三方插件/img1.jpg\" alt=\"img\"></p>\n<ol>\n<li><p>我们在<code>components</code>文件夹下新建一个组件<code>showDialog.vue</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"dialogWrapper\"</span></span><br><span class=\"line\">      v-<span class=\"keyword\">if</span>=<span class=\"string\">\"show\"</span></span><br><span class=\"line\">      @touchmove.prevent&gt;</span><br><span class=\"line\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"content\"</span>&gt;</span><br><span class=\"line\">      &lt;h3&gt;&#123;&#123;title&#125;&#125;&lt;<span class=\"regexp\">/h3&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;p v-html='content'&gt;&lt;/</span>p&gt;</span><br><span class=\"line\">      &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"btns\"</span></span><br><span class=\"line\">          v-<span class=\"keyword\">if</span>=<span class=\"string\">\"num==2\"</span>&gt;</span><br><span class=\"line\">        &lt;button <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"cancel\"</span></span><br><span class=\"line\">                @click=<span class=\"string\">\"cancel();complete();\"</span>&gt;&#123;&#123;cancelTxt&#125;&#125;&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;button class=\"sure\"</span></span><br><span class=\"line\"><span class=\"regexp\">                @click=\"sure();complete();\"&gt;&#123;&#123;sureTxt&#125;&#125;&lt;/</span>button&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;div class=\"btns single\"</span></span><br><span class=\"line\"><span class=\"regexp\">          v-if=\"num==1\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;button class=\"sure\"</span></span><br><span class=\"line\"><span class=\"regexp\">                @click=\"sure();complete();\"&gt;&#123;&#123;sureTxt&#125;&#125;&lt;/</span>button&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>div&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;  </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'showDialog'</span>,</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      show: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      title: <span class=\"string\">'标题'</span>,</span><br><span class=\"line\">      content: <span class=\"string\">''</span>,</span><br><span class=\"line\">      num: <span class=\"number\">1</span>,</span><br><span class=\"line\">      cancelTxt: <span class=\"string\">'取消'</span>,</span><br><span class=\"line\">      sureTxt: <span class=\"string\">'确定'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    cancel () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.show = <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    sure () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.show = <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    complete () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.show = <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;style lang=\"less\" scope&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">.dialogWrapper &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  position: fixed;</span></span><br><span class=\"line\"><span class=\"regexp\">  width: 100%;</span></span><br><span class=\"line\"><span class=\"regexp\">  height: 100%;</span></span><br><span class=\"line\"><span class=\"regexp\">  background: rgba(0, 0, 0, 0.4);</span></span><br><span class=\"line\"><span class=\"regexp\">  top: 0;</span></span><br><span class=\"line\"><span class=\"regexp\">  left: 0;</span></span><br><span class=\"line\"><span class=\"regexp\">  z-index: 10000;</span></span><br><span class=\"line\"><span class=\"regexp\">  .content &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    width: 299px;</span></span><br><span class=\"line\"><span class=\"regexp\">    border-radius: 6px;</span></span><br><span class=\"line\"><span class=\"regexp\">    background: #fff;</span></span><br><span class=\"line\"><span class=\"regexp\">    position: absolute;</span></span><br><span class=\"line\"><span class=\"regexp\">    overflow: hidden;</span></span><br><span class=\"line\"><span class=\"regexp\">    top: 50%;</span></span><br><span class=\"line\"><span class=\"regexp\">    left: 0;</span></span><br><span class=\"line\"><span class=\"regexp\">    right: 0;</span></span><br><span class=\"line\"><span class=\"regexp\">    margin: auto;</span></span><br><span class=\"line\"><span class=\"regexp\">    transform: translateY(-50%);</span></span><br><span class=\"line\"><span class=\"regexp\">    padding-top: 20px;</span></span><br><span class=\"line\"><span class=\"regexp\">    h3 &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      font-size: 18px;</span></span><br><span class=\"line\"><span class=\"regexp\">      font-weight: bold;</span></span><br><span class=\"line\"><span class=\"regexp\">      text-align: center;</span></span><br><span class=\"line\"><span class=\"regexp\">      color: rgba(3, 16, 42, 1);</span></span><br><span class=\"line\"><span class=\"regexp\">      line-height: 20px;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    p &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      padding: 14px 35px;</span></span><br><span class=\"line\"><span class=\"regexp\">      font-size: 16px;</span></span><br><span class=\"line\"><span class=\"regexp\">      text-align: center;</span></span><br><span class=\"line\"><span class=\"regexp\">      color: rgba(3, 16, 42, 0.7);</span></span><br><span class=\"line\"><span class=\"regexp\">      line-height: 20px;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  .btns &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    width: 100%;</span></span><br><span class=\"line\"><span class=\"regexp\">    display: flex;</span></span><br><span class=\"line\"><span class=\"regexp\">    background: #fff9fafa;</span></span><br><span class=\"line\"><span class=\"regexp\">    padding-top: 2px;</span></span><br><span class=\"line\"><span class=\"regexp\">    &amp;.single &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      button &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        margin: 0;</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    button &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      flex: 1;</span></span><br><span class=\"line\"><span class=\"regexp\">      height: 50px;</span></span><br><span class=\"line\"><span class=\"regexp\">      font-size: 16px;</span></span><br><span class=\"line\"><span class=\"regexp\">      line-height: 18px;</span></span><br><span class=\"line\"><span class=\"regexp\">      text-align: center;</span></span><br><span class=\"line\"><span class=\"regexp\">      justify-content: center;</span></span><br><span class=\"line\"><span class=\"regexp\">      color: rgba(3, 16, 42, 1);</span></span><br><span class=\"line\"><span class=\"regexp\">      background: #fff;</span></span><br><span class=\"line\"><span class=\"regexp\">      &amp;:first-child &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        margin-right: 1px;</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">      &amp;:last-child &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        margin-left: 1px;</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">      &amp;.sure &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        font-weight: bold;</span></span><br><span class=\"line\"><span class=\"regexp\">        color: rgba(0, 87, 255, 1);</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在文件夹<code>plugins</code>新建js文件<code>vue-plugins.js</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> showDialog <span class=\"keyword\">from</span> <span class=\"string\">'~/components/plugins/showDialog.vue'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> (&#123; app &#125;, inject) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (process.client) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> DialogConstructor = Vue.extend(showDialog)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 生成一个该子类的实例</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> dialog = <span class=\"keyword\">new</span> DialogConstructor();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 并将此div加入全局挂载点内部</span></span><br><span class=\"line\">    dialog.$mount(<span class=\"built_in\">document</span>.createElement(<span class=\"string\">'div'</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.appendChild(dialog.$el)</span><br><span class=\"line\"></span><br><span class=\"line\">    inject(<span class=\"string\">'showDialog'</span>, (&#123; title, content, num, sureTxt, cancelTxt, cancel, sure &#125;) =&gt; &#123;</span><br><span class=\"line\">      dialog.show = <span class=\"literal\">true</span></span><br><span class=\"line\">      title &amp;&amp; (dialog.title = title)</span><br><span class=\"line\">      content &amp;&amp; (dialog.content = content)</span><br><span class=\"line\">      num &amp;&amp; (dialog.num = num)</span><br><span class=\"line\">      sureTxt &amp;&amp; (dialog.sureTxt = sureTxt)</span><br><span class=\"line\">      cancelTxt &amp;&amp; (dialog.cancelTxt = cancelTxt)</span><br><span class=\"line\">      cancel &amp;&amp; (dialog.cancel = cancel)</span><br><span class=\"line\">      sure &amp;&amp; (dialog.sure = sure)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在nuxt.config.js中配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">** Plugins to load before mounting the App</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">  <span class=\"string\">'~/plugins/vue-plugins.js'</span>,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">created () &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 单按钮</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$showDialog(&#123;</span><br><span class=\"line\">    title: <span class=\"string\">'提交成功'</span>,</span><br><span class=\"line\">    content: <span class=\"string\">'我们将尽快处理，如有其它问题请致电：010-56592180'</span>,</span><br><span class=\"line\">    sureTxt: <span class=\"string\">'我知道了'</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 双按钮</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$showDialog(&#123;</span><br><span class=\"line\">    title: <span class=\"string\">'提醒'</span>,</span><br><span class=\"line\">    content: <span class=\"string\">'是否放弃已填写内容？'</span>,</span><br><span class=\"line\">    num: <span class=\"number\">2</span>,</span><br><span class=\"line\">    sure: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 确定</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$showDialog(&#123;</span><br><span class=\"line\">    title: <span class=\"string\">'提醒'</span>,</span><br><span class=\"line\">    content: <span class=\"string\">'是否放弃已填写内容？'</span>,</span><br><span class=\"line\">    num: <span class=\"number\">2</span>,</span><br><span class=\"line\">    sureTxt: <span class=\"string\">'好的'</span>,</span><br><span class=\"line\">    cancelTxt: <span class=\"string\">'我再想想'</span>,</span><br><span class=\"line\">    sure: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 确定</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    cancel () &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 取消</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"使用第三方插件\"><a href=\"#使用第三方插件\" class=\"headerlink\" title=\"使用第三方插件\"></a>使用第三方插件</h3><p>举例swiper,babel-polyfill和postcss-pxtorem插件</p>\n<h4 id=\"swiper\"><a href=\"#swiper\" class=\"headerlink\" title=\"swiper\"></a>swiper</h4><ol>\n<li>安装插件（略过）</li>\n<li>我们需要在程序运行前配置好这个插件<br>在<code>plugins</code>中新建<code>vue-swiper.js</code>文件：<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> VueAwesomeSwiper <span class=\"keyword\">from</span> <span class=\"string\">'vue-awesome-swiper/dist/ssr'</span></span><br><span class=\"line\"> </span><br><span class=\"line\">Vue.use(VueAwesomeSwiper)</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>在nuxt.config.js中配置<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">  &#123; <span class=\"attr\">src</span>: <span class=\"string\">'~/plugins/vue-swiper.js'</span>, <span class=\"attr\">ssr</span>: <span class=\"literal\">false</span> &#125;</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<p>不支持ssr的系统，插件只在浏览器里使用的话，需要加<code>ssr:false</code>属性</p>\n<h4 id=\"babel-polyfill\"><a href=\"#babel-polyfill\" class=\"headerlink\" title=\"babel-polyfill\"></a>babel-polyfill</h4><ol>\n<li>安装插件（略过）</li>\n<li>我们需要在程序运行前配置好这个插件<br>在<code>plugins</code>中新建<code>babel-polyfill.js</code>文件：<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">'babel-polyfill'</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>在nuxt.config.js中配置<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins: [</span><br><span class=\"line\">  &#123; <span class=\"attr\">src</span>: <span class=\"string\">'@/plugins/babel-polyfill'</span>, <span class=\"attr\">ssr</span>: <span class=\"literal\">true</span> &#125;,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"postcss-pxtorem\"><a href=\"#postcss-pxtorem\" class=\"headerlink\" title=\"postcss-pxtorem\"></a>postcss-pxtorem</h4><ol>\n<li>安装插件（略过）</li>\n<li>在nuxt.config.js中配置<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">build: &#123;</span><br><span class=\"line\">  extractCSS: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">  ** You can extend webpack config here</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\">  postcss: &#123;</span><br><span class=\"line\">    plugins: &#123;</span><br><span class=\"line\">      <span class=\"string\">'postcss-pxtorem'</span>: &#123;</span><br><span class=\"line\">        rootValue: <span class=\"number\">37.5</span>, <span class=\"comment\">//默认根目录字体大小(px)</span></span><br><span class=\"line\">        propList: [<span class=\"string\">'*'</span>]</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"string\">'autoprefixer'</span>: &#123;</span><br><span class=\"line\">        overrideBrowserslist: [<span class=\"string\">'Android &gt;= 4.0'</span>, <span class=\"string\">'iOS &gt;= 7'</span>]</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"自己编写插件\"><a href=\"#自己编写插件\" class=\"headerlink\" title=\"自己编写插件\"></a>自己编写插件</h3><h4 id=\"dialog插件\"><a href=\"#dialog插件\" class=\"headerlink\" title=\"dialog插件\"></a>dialog插件</h4><p><img src=\"/2020/04/16/nuxt/三、将Vue项目改造成Nuxt项目-使用第三方插件/img1.jpg\" alt=\"img\"></p>\n<ol>\n<li><p>我们在<code>components</code>文件夹下新建一个组件<code>showDialog.vue</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"dialogWrapper\"</span></span><br><span class=\"line\">      v-<span class=\"keyword\">if</span>=<span class=\"string\">\"show\"</span></span><br><span class=\"line\">      @touchmove.prevent&gt;</span><br><span class=\"line\">    &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"content\"</span>&gt;</span><br><span class=\"line\">      &lt;h3&gt;&#123;&#123;title&#125;&#125;&lt;<span class=\"regexp\">/h3&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;p v-html='content'&gt;&lt;/</span>p&gt;</span><br><span class=\"line\">      &lt;div <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"btns\"</span></span><br><span class=\"line\">          v-<span class=\"keyword\">if</span>=<span class=\"string\">\"num==2\"</span>&gt;</span><br><span class=\"line\">        &lt;button <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"cancel\"</span></span><br><span class=\"line\">                @click=<span class=\"string\">\"cancel();complete();\"</span>&gt;&#123;&#123;cancelTxt&#125;&#125;&lt;<span class=\"regexp\">/button&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;button class=\"sure\"</span></span><br><span class=\"line\"><span class=\"regexp\">                @click=\"sure();complete();\"&gt;&#123;&#123;sureTxt&#125;&#125;&lt;/</span>button&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;div class=\"btns single\"</span></span><br><span class=\"line\"><span class=\"regexp\">          v-if=\"num==1\"&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">        &lt;button class=\"sure\"</span></span><br><span class=\"line\"><span class=\"regexp\">                @click=\"sure();complete();\"&gt;&#123;&#123;sureTxt&#125;&#125;&lt;/</span>button&gt;</span><br><span class=\"line\">      &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">    &lt;/</span>div&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/div&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>template&gt;  </span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">  name: <span class=\"string\">'showDialog'</span>,</span><br><span class=\"line\">  data () &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">      show: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      title: <span class=\"string\">'标题'</span>,</span><br><span class=\"line\">      content: <span class=\"string\">''</span>,</span><br><span class=\"line\">      num: <span class=\"number\">1</span>,</span><br><span class=\"line\">      cancelTxt: <span class=\"string\">'取消'</span>,</span><br><span class=\"line\">      sureTxt: <span class=\"string\">'确定'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    cancel () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.show = <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    sure () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.show = <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    complete () &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>.show = <span class=\"literal\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;style lang=\"less\" scope&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">.dialogWrapper &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">  position: fixed;</span></span><br><span class=\"line\"><span class=\"regexp\">  width: 100%;</span></span><br><span class=\"line\"><span class=\"regexp\">  height: 100%;</span></span><br><span class=\"line\"><span class=\"regexp\">  background: rgba(0, 0, 0, 0.4);</span></span><br><span class=\"line\"><span class=\"regexp\">  top: 0;</span></span><br><span class=\"line\"><span class=\"regexp\">  left: 0;</span></span><br><span class=\"line\"><span class=\"regexp\">  z-index: 10000;</span></span><br><span class=\"line\"><span class=\"regexp\">  .content &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    width: 299px;</span></span><br><span class=\"line\"><span class=\"regexp\">    border-radius: 6px;</span></span><br><span class=\"line\"><span class=\"regexp\">    background: #fff;</span></span><br><span class=\"line\"><span class=\"regexp\">    position: absolute;</span></span><br><span class=\"line\"><span class=\"regexp\">    overflow: hidden;</span></span><br><span class=\"line\"><span class=\"regexp\">    top: 50%;</span></span><br><span class=\"line\"><span class=\"regexp\">    left: 0;</span></span><br><span class=\"line\"><span class=\"regexp\">    right: 0;</span></span><br><span class=\"line\"><span class=\"regexp\">    margin: auto;</span></span><br><span class=\"line\"><span class=\"regexp\">    transform: translateY(-50%);</span></span><br><span class=\"line\"><span class=\"regexp\">    padding-top: 20px;</span></span><br><span class=\"line\"><span class=\"regexp\">    h3 &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      font-size: 18px;</span></span><br><span class=\"line\"><span class=\"regexp\">      font-weight: bold;</span></span><br><span class=\"line\"><span class=\"regexp\">      text-align: center;</span></span><br><span class=\"line\"><span class=\"regexp\">      color: rgba(3, 16, 42, 1);</span></span><br><span class=\"line\"><span class=\"regexp\">      line-height: 20px;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    p &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      padding: 14px 35px;</span></span><br><span class=\"line\"><span class=\"regexp\">      font-size: 16px;</span></span><br><span class=\"line\"><span class=\"regexp\">      text-align: center;</span></span><br><span class=\"line\"><span class=\"regexp\">      color: rgba(3, 16, 42, 0.7);</span></span><br><span class=\"line\"><span class=\"regexp\">      line-height: 20px;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  .btns &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    width: 100%;</span></span><br><span class=\"line\"><span class=\"regexp\">    display: flex;</span></span><br><span class=\"line\"><span class=\"regexp\">    background: #fff9fafa;</span></span><br><span class=\"line\"><span class=\"regexp\">    padding-top: 2px;</span></span><br><span class=\"line\"><span class=\"regexp\">    &amp;.single &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      button &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        margin: 0;</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    button &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">      flex: 1;</span></span><br><span class=\"line\"><span class=\"regexp\">      height: 50px;</span></span><br><span class=\"line\"><span class=\"regexp\">      font-size: 16px;</span></span><br><span class=\"line\"><span class=\"regexp\">      line-height: 18px;</span></span><br><span class=\"line\"><span class=\"regexp\">      text-align: center;</span></span><br><span class=\"line\"><span class=\"regexp\">      justify-content: center;</span></span><br><span class=\"line\"><span class=\"regexp\">      color: rgba(3, 16, 42, 1);</span></span><br><span class=\"line\"><span class=\"regexp\">      background: #fff;</span></span><br><span class=\"line\"><span class=\"regexp\">      &amp;:first-child &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        margin-right: 1px;</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">      &amp;:last-child &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        margin-left: 1px;</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">      &amp;.sure &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        font-weight: bold;</span></span><br><span class=\"line\"><span class=\"regexp\">        color: rgba(0, 87, 255, 1);</span></span><br><span class=\"line\"><span class=\"regexp\">      &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">  &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在文件夹<code>plugins</code>新建js文件<code>vue-plugins.js</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Vue <span class=\"keyword\">from</span> <span class=\"string\">'vue'</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> showDialog <span class=\"keyword\">from</span> <span class=\"string\">'~/components/plugins/showDialog.vue'</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> (&#123; app &#125;, inject) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (process.client) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> DialogConstructor = Vue.extend(showDialog)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 生成一个该子类的实例</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> dialog = <span class=\"keyword\">new</span> DialogConstructor();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 并将此div加入全局挂载点内部</span></span><br><span class=\"line\">    dialog.$mount(<span class=\"built_in\">document</span>.createElement(<span class=\"string\">'div'</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.appendChild(dialog.$el)</span><br><span class=\"line\"></span><br><span class=\"line\">    inject(<span class=\"string\">'showDialog'</span>, (&#123; title, content, num, sureTxt, cancelTxt, cancel, sure &#125;) =&gt; &#123;</span><br><span class=\"line\">      dialog.show = <span class=\"literal\">true</span></span><br><span class=\"line\">      title &amp;&amp; (dialog.title = title)</span><br><span class=\"line\">      content &amp;&amp; (dialog.content = content)</span><br><span class=\"line\">      num &amp;&amp; (dialog.num = num)</span><br><span class=\"line\">      sureTxt &amp;&amp; (dialog.sureTxt = sureTxt)</span><br><span class=\"line\">      cancelTxt &amp;&amp; (dialog.cancelTxt = cancelTxt)</span><br><span class=\"line\">      cancel &amp;&amp; (dialog.cancel = cancel)</span><br><span class=\"line\">      sure &amp;&amp; (dialog.sure = sure)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在nuxt.config.js中配置</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">** Plugins to load before mounting the App</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\">plugins: [</span><br><span class=\"line\">  <span class=\"string\">'~/plugins/vue-plugins.js'</span>,</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">created () &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 单按钮</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$showDialog(&#123;</span><br><span class=\"line\">    title: <span class=\"string\">'提交成功'</span>,</span><br><span class=\"line\">    content: <span class=\"string\">'我们将尽快处理，如有其它问题请致电：010-56592180'</span>,</span><br><span class=\"line\">    sureTxt: <span class=\"string\">'我知道了'</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// 双按钮</span></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$showDialog(&#123;</span><br><span class=\"line\">    title: <span class=\"string\">'提醒'</span>,</span><br><span class=\"line\">    content: <span class=\"string\">'是否放弃已填写内容？'</span>,</span><br><span class=\"line\">    num: <span class=\"number\">2</span>,</span><br><span class=\"line\">    sure: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 确定</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">this</span>.$showDialog(&#123;</span><br><span class=\"line\">    title: <span class=\"string\">'提醒'</span>,</span><br><span class=\"line\">    content: <span class=\"string\">'是否放弃已填写内容？'</span>,</span><br><span class=\"line\">    num: <span class=\"number\">2</span>,</span><br><span class=\"line\">    sureTxt: <span class=\"string\">'好的'</span>,</span><br><span class=\"line\">    cancelTxt: <span class=\"string\">'我再想想'</span>,</span><br><span class=\"line\">    sure: <span class=\"function\"><span class=\"params\">()</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 确定</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    cancel () &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 取消</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ol>\n"}],"PostAsset":[{"_id":"source/_posts/OSI7层参考模型和TCP-IP5层参考模型/img.png","slug":"img.png","post":"ck9qxci4800050nurzxfxolvs","modified":0,"renderable":0},{"_id":"source/_posts/神器甘特图/timer.jpg","slug":"timer.jpg","post":"ck9qxci4g000d0nurglenkgn8","modified":0,"renderable":0},{"_id":"source/_posts/DNS解析/eg1.png","slug":"eg1.png","post":"ck9qxci4500020nurnf4kjb0h","modified":0,"renderable":0},{"_id":"source/_posts/DNS解析/eg2.png","slug":"eg2.png","post":"ck9qxci4500020nurnf4kjb0h","modified":0,"renderable":0},{"_id":"source/_posts/nuxt/二、将Vue项目改造成Nuxt项目-关于页面路由/img1.jpg","slug":"img1.jpg","post":"ck9qxcia700150nurb6v9yq5i","modified":0,"renderable":0},{"_id":"source/_posts/nuxt/三、将Vue项目改造成Nuxt项目-使用第三方插件/img1.jpg","slug":"img1.jpg","post":"ck9qxcia800180nurh6yz8vis","modified":0,"renderable":0},{"_id":"source/_posts/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR/img1.jpg","slug":"img1.jpg","post":"ck9qxcia600120nuriqozrv50","modified":0,"renderable":0},{"_id":"source/_posts/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR/img2.jpg","slug":"img2.jpg","post":"ck9qxcia600120nuriqozrv50","modified":0,"renderable":0},{"_id":"source/_posts/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR/img3.jpg","slug":"img3.jpg","post":"ck9qxcia600120nuriqozrv50","modified":0,"renderable":0},{"_id":"source/_posts/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR/nuxt-schema.svg","slug":"nuxt-schema.svg","post":"ck9qxcia600120nuriqozrv50","modified":0,"renderable":0},{"_id":"source/_posts/nuxt/一、将Vue项目改造成Nuxt项目-了解SSR/zhouqi.webp","slug":"zhouqi.webp","post":"ck9qxcia600120nuriqozrv50","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ck9qxci4600030nurxl6snh9h","category_id":"ck9qxci8o000i0nurvp3iayxw","_id":"ck9qxcia600110nurp3lgqrc7"},{"post_id":"ck9qxci4g000d0nurglenkgn8","category_id":"ck9qxci8u000x0nurvz3qpf27","_id":"ck9qxcia700140nur2odmnfw0"},{"post_id":"ck9qxci4g000e0nurh5x13sxw","category_id":"ck9qxci8o000i0nurvp3iayxw","_id":"ck9qxcia800170nurigng1f50"},{"post_id":"ck9qxci4500020nurnf4kjb0h","category_id":"ck9qxci8m000g0nurv8c3sesc","_id":"ck9qxcic5001o0nurmj9x94t0"},{"post_id":"ck9qxci4500020nurnf4kjb0h","category_id":"ck9qxcia500100nurmfsbeyue","_id":"ck9qxcic5001p0nurznjvgvk8"},{"post_id":"ck9qxci4800050nurzxfxolvs","category_id":"ck9qxci8m000g0nurv8c3sesc","_id":"ck9qxcic5001q0nur1bvmw4q5"},{"post_id":"ck9qxci4800050nurzxfxolvs","category_id":"ck9qxcia500100nurmfsbeyue","_id":"ck9qxcic5001t0nurpseywf4z"},{"post_id":"ck9qxci4a00070nuragdnxw96","category_id":"ck9qxci8o000i0nurvp3iayxw","_id":"ck9qxcic6001u0nurfhffn2hh"},{"post_id":"ck9qxci4a00070nuragdnxw96","category_id":"ck9qxcia9001c0nur5osbn7rh","_id":"ck9qxcic6001x0nurf7x7cekl"},{"post_id":"ck9qxci4b00080nurmigf6zxo","category_id":"ck9qxci8r000n0nurc14gxjnx","_id":"ck9qxcic6001y0nurs2c1zwhy"},{"post_id":"ck9qxci4b00080nurmigf6zxo","category_id":"ck9qxciaa001f0nurx96mhd0g","_id":"ck9qxcic700200nurjvq55try"},{"post_id":"ck9qxci4c000a0nur2qge527m","category_id":"ck9qxci8o000i0nurvp3iayxw","_id":"ck9qxcic700210nur7d23f2zx"},{"post_id":"ck9qxci4c000a0nur2qge527m","category_id":"ck9qxciab001j0nurmy5w4weo","_id":"ck9qxcic700220nurqzbapkob"},{"post_id":"ck9qxci4e000b0nurjg2sgjbw","category_id":"ck9qxci8o000i0nurvp3iayxw","_id":"ck9qxcic700230nuryw60t8qv"},{"post_id":"ck9qxci4e000b0nurjg2sgjbw","category_id":"ck9qxciab001k0nurj3twzdyx","_id":"ck9qxcic700240nurpcnrr32c"},{"post_id":"ck9qxci4f000c0nur4jwpaylt","category_id":"ck9qxci8m000g0nurv8c3sesc","_id":"ck9qxcic700250nurx3f348jn"},{"post_id":"ck9qxci4f000c0nur4jwpaylt","category_id":"ck9qxcia500100nurmfsbeyue","_id":"ck9qxcic700260nurkx3zknru"},{"post_id":"ck9qxci4b00090nurth21t983","category_id":"ck9qxci8r000p0nur6c5uir8e","_id":"ck9qxcicj00280nur5dhw2qxu"},{"post_id":"ck9qxci4b00090nurth21t983","category_id":"ck9qxciaa001i0nurwzlgt3jr","_id":"ck9qxcick002a0nurdeuuyb2e"},{"post_id":"ck9qxci4b00090nurth21t983","category_id":"ck9qxcic4001m0nur0jywfsv1","_id":"ck9qxcick002c0nur40bcpm28"},{"post_id":"ck9qxcia600120nuriqozrv50","category_id":"ck9qxcic5001r0nur7mdzpafp","_id":"ck9qxcicl002e0nurvyje9zbv"},{"post_id":"ck9qxcia700150nurb6v9yq5i","category_id":"ck9qxcic5001r0nur7mdzpafp","_id":"ck9qxcicl002g0nurqsrem9sq"},{"post_id":"ck9qxcia800180nurh6yz8vis","category_id":"ck9qxcic5001r0nur7mdzpafp","_id":"ck9qxcicl002i0nurvimk80l4"}],"PostTag":[{"post_id":"ck9qxci4200010nurbs9zxoow","tag_id":"ck9qxci8j000f0nuru3xvvlrc","_id":"ck9qxcia5000z0nurw3hk1e6h"},{"post_id":"ck9qxci4600030nurxl6snh9h","tag_id":"ck9qxci8o000h0nurqm0480ll","_id":"ck9qxcia700130nurnq3x880y"},{"post_id":"ck9qxci4600030nurxl6snh9h","tag_id":"ck9qxci8o000j0nurda5n1lv5","_id":"ck9qxcia700160nurk2wuy8op"},{"post_id":"ck9qxci4a00070nuragdnxw96","tag_id":"ck9qxci8q000m0nurdcc4fkmr","_id":"ck9qxcia9001a0nurkm8qx9fk"},{"post_id":"ck9qxci4b00080nurmigf6zxo","tag_id":"ck9qxci8r000o0nurjuaoswtt","_id":"ck9qxcia9001b0nurf4pzygyv"},{"post_id":"ck9qxci4b00080nurmigf6zxo","tag_id":"ck9qxci8j000f0nuru3xvvlrc","_id":"ck9qxcia9001d0nurc0i18htc"},{"post_id":"ck9qxci4b00090nurth21t983","tag_id":"ck9qxci8s000s0nuriz45y5nr","_id":"ck9qxciaa001e0nurjfsz9iun"},{"post_id":"ck9qxci4c000a0nur2qge527m","tag_id":"ck9qxci8o000h0nurqm0480ll","_id":"ck9qxciaa001g0nurqto9e339"},{"post_id":"ck9qxci4g000d0nurglenkgn8","tag_id":"ck9qxci8t000w0nurta2x0bu5","_id":"ck9qxciaa001h0nurltcg7ved"},{"post_id":"ck9qxcia600120nuriqozrv50","tag_id":"ck9qxci8j000f0nuru3xvvlrc","_id":"ck9qxcici00270nurulpdx3te"},{"post_id":"ck9qxcia600120nuriqozrv50","tag_id":"ck9qxcic4001n0nurm67i82ye","_id":"ck9qxcicj00290nurqro177k4"},{"post_id":"ck9qxcia600120nuriqozrv50","tag_id":"ck9qxci8q000m0nurdcc4fkmr","_id":"ck9qxcick002b0nuru9m567a4"},{"post_id":"ck9qxcia700150nurb6v9yq5i","tag_id":"ck9qxci8j000f0nuru3xvvlrc","_id":"ck9qxcicl002d0nurdx5lthwb"},{"post_id":"ck9qxcia700150nurb6v9yq5i","tag_id":"ck9qxcic4001n0nurm67i82ye","_id":"ck9qxcicl002f0nurw09rnvql"},{"post_id":"ck9qxcia700150nurb6v9yq5i","tag_id":"ck9qxci8q000m0nurdcc4fkmr","_id":"ck9qxcicl002h0nur4bcx2h1n"},{"post_id":"ck9qxcia800180nurh6yz8vis","tag_id":"ck9qxci8j000f0nuru3xvvlrc","_id":"ck9qxcicm002j0nursnubi7b8"},{"post_id":"ck9qxcia800180nurh6yz8vis","tag_id":"ck9qxcic4001n0nurm67i82ye","_id":"ck9qxcicm002k0nurs5rdh6re"},{"post_id":"ck9qxcia800180nurh6yz8vis","tag_id":"ck9qxci8q000m0nurdcc4fkmr","_id":"ck9qxcicm002l0nurgs18av8n"}],"Tag":[{"name":"javascript","_id":"ck9qxci8j000f0nuru3xvvlrc"},{"name":"js","_id":"ck9qxci8o000h0nurqm0480ll"},{"name":"ios","_id":"ck9qxci8o000j0nurda5n1lv5"},{"name":"vue","_id":"ck9qxci8q000m0nurdcc4fkmr"},{"name":"es6","_id":"ck9qxci8r000o0nurjuaoswtt"},{"name":"css3","_id":"ck9qxci8s000s0nuriz45y5nr"},{"name":"甘特图,Gantt chart","_id":"ck9qxci8t000w0nurta2x0bu5"},{"name":"nuxt","_id":"ck9qxcic4001n0nurm67i82ye"}]}}